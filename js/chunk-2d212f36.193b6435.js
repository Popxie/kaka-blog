(window.webpackJsonp=window.webpackJsonp||[]).push([["chunk-2d212f36"],{ab32:function(e,v,_){"use strict";_.r(v);var l=_("2877"),i=Object(l.a)({},(function(){var e=this;e.$createElement;return e._self._c,e._m(0)}),[function(){var e=this,v=e.$createElement,_=e._self._c||v;return _("section",[_("html",[_("head"),_("body",[_("h1",[e._v("css 伪类与伪元素区别")]),_("h2",[e._v("1. 伪类(pseudo-classes)")]),_("ul",[_("li",[e._v("其核⼼就是⽤来选择 DOM 树之外的信息,不能够被普通选择器选择的⽂档之外的元素，⽤来添加⼀些选择器的特殊效果。")]),_("li",[e._v("⽐如 "),_("code",{pre:!0},[e._v(":hover")]),e._v(" "),_("code",{pre:!0},[e._v(":active")]),e._v(" "),_("code",{pre:!0},[e._v(":visited")]),e._v(" "),_("code",{pre:!0},[e._v(":link")]),e._v(" "),_("code",{pre:!0},[e._v(":visited")]),e._v(" "),_("code",{pre:!0},[e._v(":first-child")]),e._v(" "),_("code",{pre:!0},[e._v(":focus")]),e._v(" "),_("code",{pre:!0},[e._v(":lang")]),e._v(" 等")]),_("li",[e._v("由于状态的变化是⾮静态的，所以元素达到⼀个特定状态时，它可能得到⼀个伪类的样式；当状态改变时，它⼜会失去这个样式。")]),_("li",[e._v("由此可以看出，它的功能和 "),_("code",{pre:!0},[e._v("class")]),e._v(" 有些类似，但它是基于⽂档之外的抽象，所以叫 伪类。")])]),_("h2",[e._v("2. 伪元素(Pseudo-elements)")]),_("ul",[_("li",[e._v("DOM 树没有定义的虚拟元素")]),_("li",[e._v("核⼼就是需要创建通常不存在于⽂档中的元素，")]),_("li",[e._v("⽐如 "),_("code",{pre:!0},[e._v("::before")]),e._v(" "),_("code",{pre:!0},[e._v("::after")]),e._v(" 它选择的是元素指定内容，表示选择元素内容的之前内容或之后内容。")]),_("li",[e._v("伪元素控制的内容和元素是没有差别的，但是它本身只是基于元素的抽象，并不存在于⽂档中，所以称为伪元素。⽤于将特殊的效果添加到某些选择器")])]),_("h2",[e._v("3. 区别")]),_("ul",[_("li",[e._v("表示⽅法 "),_("ul",[_("li",[e._v("CSS2 中伪类、伪元素都是以单冒号 "),_("code",{pre:!0},[e._v(":")]),e._v(" 表示,")]),_("li",[e._v("CSS2.1 后规定伪类⽤单冒号表示,伪元素⽤双冒号 "),_("code",{pre:!0},[e._v("::")]),e._v("表示，")]),_("li",[e._v("浏览器同样接受 CSS2 时代已经存在的伪元素("),_("code",{pre:!0},[e._v(":before")]),e._v(", "),_("code",{pre:!0},[e._v(":after")]),e._v(", "),_("code",{pre:!0},[e._v(":first-line")]),e._v(", "),_("code",{pre:!0},[e._v(":first-letter")]),e._v(" 等)的 "),_("strong",[e._v("单冒号")]),e._v(" 写法。")]),_("li",[e._v("CSS2 之后所有新增的伪元素(如 "),_("code",{pre:!0},[e._v("::selection")]),e._v(" )，应该采⽤ "),_("strong",[e._v("双冒号")]),e._v("的写法。")]),_("li",[e._v("CSS3 中，伪类与伪元素在语法上也有所区别，伪元素修改为以 "),_("code",{pre:!0},[e._v("::")]),e._v(" 开头。浏览器对以:开头的伪元素也继续⽀持，但建议规范书写为 "),_("code",{pre:!0},[e._v("::")]),e._v(" 开头")])])]),_("li",[e._v("定义不同 "),_("ul",[_("li",[e._v("伪类即假的类，可以添加类来达到效果")]),_("li",[e._v("伪元素即假元素，需要通过添加元素才能达到效果")])])]),_("li",[e._v("总结 "),_("ul",[_("li",[e._v('伪类和伪元素都是⽤来表示⽂档树以外的"元素"。')]),_("li",[e._v("伪类和伪元素分别⽤单冒号"),_("code",{pre:!0},[e._v(":")]),e._v("和双冒号"),_("code",{pre:!0},[e._v("::")]),e._v("来表示。")]),_("li",[e._v("伪类和伪元素的区别，关键点在于如果没有伪元素(或伪类)，是否需要添加元素才能达到效果，如果是则是伪元素，反之则是伪类。")])])])]),_("h2",[e._v("相同点")]),_("ul",[_("li",[e._v("伪类和伪元素都不出现在源⽂件和 DOM 树中。也就是说在 html 源⽂件中是看不到伪类和伪元素的。 不同之处：")]),_("li",[e._v("伪类其实就是基于普通 DOM 元素⽽产⽣的不同状态，他是 DOM 元素的某⼀特征。")]),_("li",[e._v("伪元素能够创建在 DOM 树中不存在的抽象对象，⽽且这些抽象对象是能够访问到的。")])]),_("p",[_("img",{attrs:{src:"https://user-images.githubusercontent.com/24952644/131962255-a97eb67f-b0a1-4a86-8512-aa7bfec99b43.gif",alt:"54"}})])])])])}],!1,null,null,null);v.default=i.exports}}]);