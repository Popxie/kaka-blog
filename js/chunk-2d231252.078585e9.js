(window.webpackJsonp=window.webpackJsonp||[]).push([["chunk-2d231252"],{eefb:function(t,e,s){"use strict";s.r(e);var a=s("2877"),r=Object(a.a)({},(function(){var t=this;t.$createElement;return t._self._c,t._m(0)}),[function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("section",[s("html",[s("head"),s("body",[s("h1",[t._v("Webpack")]),s("p",[s("a",{attrs:{href:"https://www.cnblogs.com/hashtang/p/11873796.html"}},[t._v("1.webpack 打包优化的四种方法（多进程打包（thread-loader ），多进程压缩（terser-webpack-plugin），资源 CDN（externals），动态 polyfill）")])]),s("p",[s("a",{attrs:{href:"https://juejin.im/post/5cede821f265da1bbd4b5630"}},[t._v("2.webpack 中那些最易混淆的 5 个知识点")])]),s("p",[s("a",{attrs:{href:"https://www.jianshu.com/p/476387c7fea3"}},[t._v("3.Vue Cli3 项目打包优化")])]),s("table",[s("thead",[s("tr",[s("th",[t._v("loader")]),s("th",[t._v("作用")])])]),s("tbody",[s("tr",[s("td",[t._v("babel-loader")]),s("td",[t._v("转换 es6·es7 等 js 新特性")])]),s("tr",[s("td",[t._v("css-loader")]),s("td",[t._v("支持 css 文件的加载和解析")])]),s("tr",[s("td",[t._v("less-loader")]),s("td",[t._v("将 less 文件转换成 css")])]),s("tr",[s("td",[t._v("ts-loader")]),s("td",[t._v("将 ts 转换成 js")])]),s("tr",[s("td",[t._v("file-loader")]),s("td",[t._v("进行图片字体等打包")])]),s("tr",[s("td",[t._v("raw-loader")]),s("td",[t._v("将文件以字符串的形式导入")])])])]),s("pre",{pre:!0},[s("code",{pre:!0,attrs:{"v-pre":"",class:"language-text"}},[t._v('loader 用于对模块的源代码进行转换。loader 可以使你在 import 或"加载"模块时预处理文件。\n因此，loader 类似于其他构建工具中“任务(task)”，并提供了处理前端构建步骤的强大方法。\n\nloader 可以将文件从不同的语言（如 TypeScript）转换为 JavaScript，或将内联图像转换为 data URL。\n\nloader 甚至允许你直接在 JavaScript 模块中 import CSS文件！\n')])]),s("table",[s("thead",[s("tr",[s("th",[t._v("plugin")]),s("th",[t._v("作用")])])]),s("tbody",[s("tr",[s("td",[t._v("OptimizeCssAssetsPlugin")]),s("td",[t._v("压缩 css 资源文件")])]),s("tr",[s("td",[t._v("UglifyJsPlugin")]),s("td",[t._v("压缩混淆 JS（默认自带）")])]),s("tr",[s("td",[t._v("CleanWebpackPlugin")]),s("td",[t._v("清理构建目录")])]),s("tr",[s("td",[t._v("ExtractTextWebpackPlugin")]),s("td",[t._v("将 css 从 bundle 文件里提取成一个独"),s("br"),t._v("立的 css 文件")])]),s("tr",[s("td",[t._v("CommonsChunkPlugin")]),s("td",[t._v("将 chunks 相同的模块代码抽离成公"),s("br"),t._v("共 js")])]),s("tr",[s("td",[t._v("HtmlWebpackPlugin")]),s("td",[t._v("创建 html 文件去承载输出的 bundle")])]),s("tr",[s("td",[t._v("ZipWebpackPlugin")]),s("td",[t._v("将打包出的资源生成一个 zip 包")])])])]),s("h2",[t._v("Gzip")]),s("pre",{pre:!0},[s("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[s("span",{pre:!0,attrs:{class:"hljs-attr"}},[t._v("productionGzip")]),t._v(": "),s("span",{pre:!0,attrs:{class:"hljs-literal"}},[t._v("true")]),t._v("\n")])]),s("p",[t._v("开启以后打包构建后的产物是.gz 文件，"),s("br"),t._v(" 后台 nginx 开启 gzip 模式访问，浏览器访问项目，自动会找到 .gz 的文件。加载速度明显提高。")]),s("h2",[t._v("代码分割")]),s("p",[s("a",{attrs:{href:"https://juejin.im/post/5e796ec1e51d45271e2a9af9#heading-5"}},[t._v("提高代码使用率的关键技术 — 代码分割（code splitting）·掘金")])]),s("ul",[s("li",[s("h3",[t._v("什么是「代码分割」（code splitting）？")])])]),s("p",[t._v("代码分割是指，将脚本中无需立即调用的代码在代码构建时转变为异步加载的过程。")]),s("p",[t._v("在 Webpack 构建时，会避免加载已声明要异步加载的代码，异步代码会被单独分离出一个文件，当代码实际调用时被加载至页面。")]),s("ul",[s("li",[s("h3",[t._v("代码分割的原理")])])]),s("p",[t._v("代码分割技术的核心是「异步加载资源」，可喜的是，浏览器允许我们这么做，W3C stage 3 规范： "),s("a",{attrs:{href:"https://whatwg.github.io/loader/"}},[t._v("whatwg/loader")]),t._v(" 对其进行了定义：你可以通过 import() 关键字让浏览器在程序执行时异步加载相关资源。")]),s("p",[t._v("IE 浏览器目前并不支持这一特性，但这并不意味着你的异步加载功能在 IE 浏览会失效（那太可怕了 🤦‍♂️），实际上，Webpack 底层帮你将异步加载的代码抽离成一份新的文件，并在你需要时通过 JSONP 的方式去获取文件资源，因此，你可以在任何浏览器上实现代码的异步加载，并且在将来所有浏览器都实现 import() 方法时平滑过渡，cool！👍")]),s("ul",[s("li",[s("h3",[t._v("代码分割的类型")]),s("ul",[s("li",[t._v("静态分割")]),s("li",[t._v("‘动态’分割（实际上它并不意味着异步调用的代码是 “动态” 生成的）")])])])]),s("p",[t._v("⚠️ 注意：在 Vue 中，可以直接使用 import() 关键字做到这一点，而在 React 中，你需要使用 react-loadable 去完成同样的事。")]),s("h2",[t._v("魔术注释")]),s("p",[s("a",{attrs:{href:"https://juejin.im/post/5e796ec1e51d45271e2a9af9#heading-5"}},[t._v("提高代码使用率的关键技术 — 代码分割（code splitting）·掘金")])]),s("p",[t._v("魔术注释是由 Webpack 提供的，可以为代码分割服务的一种技术。通过在 import 关键字后的括号中使用指定注释，我们可以对代码分割后的 chunk 有更多的控制权，让我们看一个例子：")]),s("pre",{pre:!0},[s("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[s("span",{pre:!0,attrs:{class:"hljs-comment"}},[t._v("// index.js")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"hljs-title function_"}},[t._v("import")]),t._v("(\n  "),s("span",{pre:!0,attrs:{class:"hljs-comment"}},[t._v("/* webpackChunkName: “my-chunk-name” */")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"hljs-string"}},[t._v("'./footer'")]),t._v("\n)\n")])]),s("p",[t._v("同时，也要在 webpack.config.js 中做一些改动：")]),s("pre",{pre:!0},[s("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[s("span",{pre:!0,attrs:{class:"hljs-comment"}},[t._v("// webpack.config.js")]),t._v("\n{\n  "),s("span",{pre:!0,attrs:{class:"hljs-attr"}},[t._v("output")]),t._v(": {\n    "),s("span",{pre:!0,attrs:{class:"hljs-attr"}},[t._v("filename")]),t._v(": “bundle."),s("span",{pre:!0,attrs:{class:"hljs-property"}},[t._v("js")]),t._v("”,\n    "),s("span",{pre:!0,attrs:{class:"hljs-attr"}},[t._v("chunkFilename")]),t._v(": “[name]."),s("span",{pre:!0,attrs:{class:"hljs-property"}},[t._v("lazy")]),t._v("-chunk."),s("span",{pre:!0,attrs:{class:"hljs-property"}},[t._v("js")]),t._v("”\n  }\n}\n")])]),s("p",[t._v("通过这样的配置，我们可以对分离出的 chunk 进行命名，这对于我们 debug 而言非常方便。")]),s("h3",[t._v("Webpack Modes")]),s("p",[t._v("除了上面提到过得 webpackChunkName 注释外，Webpack 还提供了一些其他注释让我们能够对异步加载模块拥有更多控制权，例如下方这个例子：")]),s("pre",{pre:!0},[s("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[s("span",{pre:!0,attrs:{class:"hljs-title function_"}},[t._v("import")]),t._v("(\n  "),s("span",{pre:!0,attrs:{class:"hljs-comment"}},[t._v("/* webpackChunkName: “my-chunk-name” */")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"hljs-comment"}},[t._v("/* webpackMode: lazy */")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"hljs-string"}},[t._v("'./someModule'")]),t._v("\n)\n")])]),s("p",[t._v("webpackMode 的默认值为 lazy 它会使所有异步模块都会被单独抽离成单一的 chunk，若设置该值为 lazy-once，Webpack 就会将所有带有标记的异步加载模块放在同一个 chunk 中。")]),s("h3",[t._v("Prefetch or Preload")]),s("p",[t._v("通过添加 webpackPrefetch 魔术注释，Webpack 令我们可以使用与 "),s("link",{attrs:{rel:"“prefetch”"}}),t._v(" 相同的特性。让浏览器会在 Idle 状态时预先帮我们加载所需的资源，善用这个技术可以使我们的应用交互变得更加流畅。")]),s("pre",{pre:!0},[s("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[s("span",{pre:!0,attrs:{class:"hljs-title function_"}},[t._v("import")]),t._v("(\n  "),s("span",{pre:!0,attrs:{class:"hljs-comment"}},[t._v("/* webpackPrefetch: true */")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"hljs-string"}},[t._v("'./someModule'")]),t._v("\n)\n")])]),s("p",[s("strong",[t._v("⚠️ 注意：你确保你的代码在未来一定会用到时，再开启该功能。")])])])])])}],!1,null,null,null);e.default=r.exports}}]);