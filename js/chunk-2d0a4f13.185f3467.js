(window.webpackJsonp=window.webpackJsonp||[]).push([["chunk-2d0a4f13"],{"091e":function(s,r,e){"use strict";e.r(r);var a=e("2877"),p=Object(a.a)({},(function(){var s=this;s.$createElement;return s._self._c,s._m(0)}),[function(){var s=this,r=s.$createElement,e=s._self._c||r;return e("section",[e("html",[e("head"),e("body",[e("h1",[s._v("Module 的加载实现总结")]),e("h2",[s._v("1 浏览器加载")]),e("h3",[s._v("1.1 传统方法")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-xml"}},[e("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),e("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("script")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("src")]),s._v("="),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"path/to/myModule.js"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("defer")]),s._v(">")]),e("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),e("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("script")]),s._v(">")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),e("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("script")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("src")]),s._v("="),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"path/to/myModule.js"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("async")]),s._v(">")]),e("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),e("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("script")]),s._v(">")]),s._v("\n")])]),e("p",[e("code",{pre:!0},[s._v("defer")]),s._v("&"),e("code",{pre:!0},[s._v("async")]),s._v("都是异步加载，但是有差异")]),e("ul",[e("li",[e("code",{pre:!0},[s._v("defer")]),s._v(": 要等到整个页面在内存中正常渲染结束（DOM 结构完全生成，以及其他脚本执行完成），才会执行")]),e("li",[e("code",{pre:!0},[s._v("async")]),s._v(": 一旦下载完，渲染引擎就会中断渲染，执行这个脚本以后，再继续渲染。")])]),e("p",[s._v("口诀： "),e("code",{pre:!0},[s._v("defer")]),s._v("是“渲染完再执行”，"),e("code",{pre:!0},[s._v("async")]),s._v("是“下载完就执行”。"),e("code",{pre:!0},[s._v("多个defer")]),s._v("按顺序执行，多个"),e("code",{pre:!0},[s._v("async")]),s._v("不能保证加载顺序")]),e("h3",[s._v("1.2 加载规则（es6模块）")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-xml"}},[e("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),e("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("script")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("type")]),s._v("="),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"module"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("src")]),s._v("="),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"./foo.js"')]),s._v(">")]),e("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),e("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("script")]),s._v(">")]),s._v("\n")])]),e("p",[s._v('浏览器对于带有type="module"的'),e("code",{pre:!0},[s._v("<script>")]),s._v("，都是异步加载,不会造成堵塞浏览器，即等到整个页面渲染完，再执行模块脚本，等同于打开了"),e("code",{pre:!0},[s._v("<script>")]),s._v("标签的"),e("code",{pre:!0},[s._v("defer")]),s._v("属性。")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-xml"}},[e("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),e("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("script")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("type")]),s._v("="),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"module"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("src")]),s._v("="),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"./foo.js"')]),s._v(">")]),e("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),e("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("script")]),s._v(">")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("\x3c!-- 等同于 --\x3e")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),e("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("script")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("type")]),s._v("="),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"module"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("src")]),s._v("="),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"./foo.js"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("defer")]),s._v(">")]),e("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),e("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("script")]),s._v(">")]),s._v("\n")])]),e("ul",[e("li",[s._v("默认是"),e("code",{pre:!0},[s._v("defer")])]),e("li",[e("code",{pre:!0},[s._v("<script>")]),s._v("标签的async属性也可以打开，这时只要加载完成，渲染引擎就会中断渲染立即执行。执行完成后，再恢复渲染。")]),e("li",[s._v("一旦使用了"),e("code",{pre:!0},[s._v("async")]),s._v("属性，"),e("code",{pre:!0},[s._v('<script type="module">')]),s._v("就不会按照在页面出现的顺序执行，而是只要该模块加载完成，就执行该模块。")])]),e("h2",[s._v("2 ES6 模块与 CommonJS 模块的差异")]),e("ul",[e("li",[e("code",{pre:!0},[s._v("CommonJS")]),s._v(" 模块输出的是一个"),e("code",{pre:!0},[s._v("值的拷贝")]),s._v("，ES6 模块输出的是"),e("code",{pre:!0},[s._v("值的引用")]),s._v("。")]),e("li",[e("code",{pre:!0},[s._v("CommonJS")]),s._v(" 模块是"),e("code",{pre:!0},[s._v("运行时加载")]),s._v("，ES6 模块是"),e("code",{pre:!0},[s._v("编译时输出接口")]),s._v("。")]),e("li",[e("code",{pre:!0},[s._v("CommonJS")]),s._v(" 模块的"),e("code",{pre:!0},[s._v("require()")]),s._v("是"),e("code",{pre:!0},[s._v("同步加载模块")]),s._v("，"),e("code",{pre:!0},[s._v("ES6")]),s._v(" 模块的"),e("code",{pre:!0},[s._v("import")]),s._v("命令是"),e("code",{pre:!0},[s._v("异步加载")]),s._v("，有一个独立的模块依赖的解析阶段。")])]),e("p",[s._v("第二个差异是因为 CommonJS 加载的是一个"),e("code",{pre:!0},[s._v("对象")]),s._v("（即"),e("code",{pre:!0},[s._v("module.exports")]),s._v("属性），该对象只有在脚本"),e("code",{pre:!0},[s._v("运行完")]),s._v("才会生成。而 ES6 模块"),e("code",{pre:!0},[s._v("不是对象")]),s._v("，它的对外接口只是一种"),e("code",{pre:!0},[s._v("静态定义")]),s._v("，在代码"),e("code",{pre:!0},[s._v("静态解析阶段")]),s._v("就会生成。")]),e("h2",[s._v("3 Node.js的模块加载方法")]),e("p",[s._v("JavaScript 现在有两种模块。一种是 "),e("code",{pre:!0},[s._v("ES6 模块")]),s._v("，简称 "),e("code",{pre:!0},[s._v("ESM")]),s._v("；另一种是 "),e("code",{pre:!0},[s._v("CommonJS 模块")]),s._v("，简称 "),e("code",{pre:!0},[s._v("CJS")]),s._v("。")]),e("p",[s._v("CommonJS 模块使用"),e("code",{pre:!0},[s._v("require()")]),s._v("和"),e("code",{pre:!0},[s._v("module.exports")]),s._v("，ES6 模块使用"),e("code",{pre:!0},[s._v("import")]),s._v("和"),e("code",{pre:!0},[s._v("export")]),s._v("。")]),e("h3",[s._v("CommonJS 模块加载 ES6 模块")]),e("p",[s._v("CommonJS 的require()命令不能加载 ES6 模块，会报错，只能使用import()这个方法加载。")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[s._v("("),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("async")]),s._v(" () => {\n  "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("await")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("import")]),s._v("("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'./my-app.mjs'")]),s._v(");\n})()\n")])]),e("p",[s._v("上面代码可以在 CommonJS 模块中运行。")]),e("p",[e("code",{pre:!0},[s._v("require()")]),s._v("不支持 ES6 模块的一个原因是，它是同步加载，而 ES6 模块内部可以使用顶层"),e("code",{pre:!0},[s._v("await")]),s._v("命令，导致无法被同步加载。")]),e("h3",[s._v("ES6 模块加载 CommonJS 模块")]),e("p",[s._v("ES6 模块的import命令可以加载 CommonJS 模块，但是只能整体加载，不能只加载单一的输出项。")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 正确")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("import")]),s._v(" packageMain "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("from")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'commonjs-package'")]),s._v(";\n\n"),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 报错")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("import")]),s._v(" { method } "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("from")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'commonjs-package'")]),s._v(";\n")])]),e("p",[s._v("可以改成这样")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("import")]),s._v(" packageMain "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("from")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'commonjs-package'")]),s._v(";\n"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" { method } = packageMain\n")])]),e("h2",[s._v("4 循环加载")]),e("h3",[s._v("CommonJS 模块的加载原理")]),e("p",[s._v("CommonJS 的一个模块，就是一个脚本文件。"),e("code",{pre:!0},[s._v("require")]),s._v("命令第一次加载该脚本，就会"),e("code",{pre:!0},[s._v("执行整个脚本")]),s._v("，然后"),e("code",{pre:!0},[s._v("在内存生成一个对象")]),s._v("。")]),e("h3",[s._v("CommonJS 模块的循环加载")]),e("p",[s._v('CommonJS 模块的重要特性是加载时执行，即脚本代码在require的时候，就会全部执行。一旦出现某个模块被"循环加载"，就只输出已经执行的部分，还未执行的部分不会输出。')]),e("h3",[s._v("ES6 模块的循环加载")]),e("p",[s._v("ES6 模块是动态引用，如果使用import从一个模块加载变量（即import foo from 'foo'），那些变量不会被缓存，而是成为一个指向被加载模块的引用，需要开发者自己保证，真正取值的时候能够取到值。")]),e("p",[e("code",{pre:!0},[s._v("a.mjs")]),s._v("中引用 "),e("code",{pre:!0},[s._v("b.mjs")]),s._v(":"),e("br"),s._v(" 当执行a.mjs以后，引擎发现它加载了b.mjs，因此会"),e("code",{pre:!0},[s._v("优先执行")]),s._v("b.mjs，然后再执行a.mjs。")]),e("ul",[e("li",[s._v("函数具有提升作用")]),e("li",[s._v("函数表达式没有（带等号 = ）")])]),e("p",[e("a",{attrs:{href:"https://es6.ruanyifeng.com/#docs/module-loader"}},[s._v("阅读原文")])])])])])}],!1,null,null,null);r.default=p.exports}}]);