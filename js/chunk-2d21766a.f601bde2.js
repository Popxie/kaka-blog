(window.webpackJsonp=window.webpackJsonp||[]).push([["chunk-2d21766a"],{c722:function(s,a,t){"use strict";t.r(a);var r=t("2877"),e=Object(r.a)({},(function(){var s=this;s.$createElement;return s._self._c,s._m(0)}),[function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("section",[t("html",[t("head"),t("body",[t("h1",[s._v("Class 的基本语法")]),t("h2",[s._v("简介")]),t("h3",[s._v("类的由来")]),t("p",[s._v("JavaScript 语言中，生成实例对象的传统方法是通过构造函数。下面是一个例子。")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("Point")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("x, y")]),s._v(") {\n  "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("x")]),s._v(" = x;\n  "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("y")]),s._v(" = y;\n}\n\n"),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Point")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("prototype")])]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("toString")]),s._v(" = "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" ("),t("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n  "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'('")]),s._v(" + "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("x")]),s._v(" + "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("', '")]),s._v(" + "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("y")]),s._v(" + "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("')'")]),s._v(";\n};\n\n"),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" p = "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Point")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(", "),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(");\n")])]),t("p",[s._v("上面这种写法跟传统的面向对象语言（比如 C++ 和 Java）差异很大，很容易让新学习这门语言的程序员感到困惑。")]),t("p",[s._v("ES6 提供了更接近传统语言的写法，引入了 Class（类）这个概念，作为对象的模板。通过"),t("code",{pre:!0},[s._v("class")]),s._v("关键字，可以定义类。")]),t("p",[s._v("基本上，ES6 的"),t("code",{pre:!0},[s._v("class")]),s._v("可以看作只是一个语法糖，它的绝大部分功能，ES5 都可以做到，新的"),t("code",{pre:!0},[s._v("class")]),s._v("写法只是让对象原型的写法更加清晰、更像面向对象编程的语法而已。上面的代码用 ES6 的"),t("code",{pre:!0},[s._v("class")]),s._v("改写，就是下面这样。")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Point")]),s._v(" {\n  "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("constructor")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("x, y")]),s._v(") {\n    "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("x")]),s._v(" = x;\n    "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("y")]),s._v(" = y;\n  }\n\n  "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("toString")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n    "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'('")]),s._v(" + "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("x")]),s._v(" + "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("', '")]),s._v(" + "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("y")]),s._v(" + "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("')'")]),s._v(";\n  }\n}\n")])]),t("p",[s._v("上面代码定义了一个“类”，可以看到里面有一个"),t("code",{pre:!0},[s._v("constructor")]),s._v("方法，这就是构造方法，而"),t("code",{pre:!0},[s._v("this")]),s._v("关键字则代表实例对象。也就是说，ES5 的构造函数"),t("code",{pre:!0},[s._v("Point")]),s._v("，对应 ES6 的"),t("code",{pre:!0},[s._v("Point")]),s._v("类的构造方法。")]),t("p",[t("code",{pre:!0},[s._v("Point")]),s._v("类除了构造方法，还定义了一个"),t("code",{pre:!0},[s._v("toString")]),s._v("方法。注意，定义“类”的方法的时候，前面不需要加上"),t("code",{pre:!0},[s._v("function")]),s._v("这个关键字，直接把函数定义放进去了就可以了。另外，方法之间不需要逗号分隔，加了会报错。")]),t("p",[s._v("ES6 的类，完全可以看作构造函数的另一种写法。")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Point")]),s._v(" {\n  "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// ...")]),s._v("\n}\n\n"),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("typeof")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Point")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('// "function"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Point")]),s._v(" === "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Point")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("prototype")])]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("constructor")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// true")]),s._v("\n")])]),t("p",[s._v("上面代码表明，类的数据类型就是函数，类本身就指向构造函数。")]),t("p",[s._v("使用的时候，也是直接对类使用"),t("code",{pre:!0},[s._v("new")]),s._v("命令，跟构造函数的用法完全一致。")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Bar")]),s._v(" {\n  "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("doStuff")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n    "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("console")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("log")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'stuff'")]),s._v(");\n  }\n}\n\n"),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" b = "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Bar")]),s._v("();\nb."),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("doStuff")]),s._v("() "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('// "stuff"')]),s._v("\n")])]),t("p",[s._v("构造函数的"),t("code",{pre:!0},[s._v("prototype")]),s._v("属性，在 ES6 的“类”上面继续存在。事实上，类的所有方法都定义在类的"),t("code",{pre:!0},[s._v("prototype")]),s._v("属性上面。")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Point")]),s._v(" {\n  "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("constructor")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n    "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// ...")]),s._v("\n  }\n\n  "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("toString")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n    "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// ...")]),s._v("\n  }\n\n  "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("toValue")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n    "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// ...")]),s._v("\n  }\n}\n\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 等同于")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Point")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("prototype")])]),s._v(" = {\n  "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("constructor")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {},\n  "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("toString")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {},\n  "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("toValue")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {},\n};\n")])]),t("p",[s._v("在类的实例上面调用方法，其实就是调用原型上的方法。")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("B")]),s._v(" {}\n"),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" b = "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("B")]),s._v("();\n\nb."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("constructor")]),s._v(" === B."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("prototype")])]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("constructor")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// true")]),s._v("\n")])]),t("p",[s._v("上面代码中，"),t("code",{pre:!0},[s._v("b")]),s._v("是"),t("code",{pre:!0},[s._v("B")]),s._v("类的实例，它的"),t("code",{pre:!0},[s._v("constructor")]),s._v("方法就是"),t("code",{pre:!0},[s._v("B")]),s._v("类原型的"),t("code",{pre:!0},[s._v("constructor")]),s._v("方法。")]),t("p",[s._v("由于类的方法都定义在"),t("code",{pre:!0},[s._v("prototype")]),s._v("对象上面，所以类的新方法可以添加在"),t("code",{pre:!0},[s._v("prototype")]),s._v("对象上面。"),t("code",{pre:!0},[s._v("Object.assign")]),s._v("方法可以很方便地一次向类添加多个方法。")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Point")]),s._v(" {\n  "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("constructor")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v("){\n    "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// ...")]),s._v("\n  }\n}\n\n"),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("assign")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Point")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("prototype")])]),s._v(", {\n  "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("toString")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v("){},\n  "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("toValue")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v("){}\n});\n")])]),t("p",[t("code",{pre:!0},[s._v("prototype")]),s._v("对象的"),t("code",{pre:!0},[s._v("constructor")]),s._v("属性，直接指向“类”的本身，这与 ES5 的行为是一致的。")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Point")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("prototype")])]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("constructor")]),s._v(" === "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Point")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// true")]),s._v("\n")])]),t("p",[s._v("另外，类的内部所有定义的方法，都是不可枚举的（non-enumerable）。")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Point")]),s._v(" {\n  "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("constructor")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("x, y")]),s._v(") {\n    "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// ...")]),s._v("\n  }\n\n  "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("toString")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n    "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// ...")]),s._v("\n  }\n}\n\n"),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("keys")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Point")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("prototype")])]),s._v(")\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// []")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("getOwnPropertyNames")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Point")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("prototype")])]),s._v(")\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('// ["constructor","toString"]')]),s._v("\n")])]),t("p",[s._v("上面代码中，"),t("code",{pre:!0},[s._v("toString")]),s._v("方法是"),t("code",{pre:!0},[s._v("Point")]),s._v("类内部定义的方法，它是不可枚举的。这一点与 ES5 的行为不一致。")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Point")]),s._v(" = "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" ("),t("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("x, y")]),s._v(") {\n  "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// ...")]),s._v("\n};\n\n"),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Point")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("prototype")])]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("toString")]),s._v(" = "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n  "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// ...")]),s._v("\n};\n\n"),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("keys")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Point")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("prototype")])]),s._v(")\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('// ["toString"]')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("getOwnPropertyNames")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Point")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("prototype")])]),s._v(")\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('// ["constructor","toString"]')]),s._v("\n")])]),t("p",[s._v("上面代码采用 ES5 的写法，"),t("code",{pre:!0},[s._v("toString")]),s._v("方法就是可枚举的。")]),t("h3",[s._v("constructor 方法")]),t("p",[t("code",{pre:!0},[s._v("constructor")]),s._v("方法是类的默认方法，通过"),t("code",{pre:!0},[s._v("new")]),s._v("命令生成对象实例时，自动调用该方法。一个类必须有"),t("code",{pre:!0},[s._v("constructor")]),s._v("方法，如果没有显式定义，一个空的"),t("code",{pre:!0},[s._v("constructor")]),s._v("方法会被默认添加。")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Point")]),s._v(" {\n}\n\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 等同于")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Point")]),s._v(" {\n  "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("constructor")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {}\n}\n")])]),t("p",[s._v("上面代码中，定义了一个空的类"),t("code",{pre:!0},[s._v("Point")]),s._v("，JavaScript 引擎会自动为它添加一个空的"),t("code",{pre:!0},[s._v("constructor")]),s._v("方法。")]),t("p",[t("code",{pre:!0},[s._v("constructor")]),s._v("方法默认返回实例对象（即"),t("code",{pre:!0},[s._v("this")]),s._v("），完全可以指定返回另外一个对象。")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Foo")]),s._v(" {\n  "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("constructor")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n    "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("create")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("null")]),s._v(");\n  }\n}\n\n"),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Foo")]),s._v("() "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("instanceof")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Foo")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// false")]),s._v("\n")])]),t("p",[s._v("上面代码中，"),t("code",{pre:!0},[s._v("constructor")]),s._v("函数返回一个全新的对象，结果导致实例对象不是"),t("code",{pre:!0},[s._v("Foo")]),s._v("类的实例。")]),t("p",[s._v("类必须使用"),t("code",{pre:!0},[s._v("new")]),s._v("调用，否则会报错。这是它跟普通构造函数的一个主要区别，后者不用"),t("code",{pre:!0},[s._v("new")]),s._v("也可以执行。")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Foo")]),s._v(" {\n  "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("constructor")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n    "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("create")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("null")]),s._v(");\n  }\n}\n\n"),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Foo")]),s._v("()\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// TypeError: Class constructor Foo cannot be invoked without 'new'")]),s._v("\n")])]),t("h3",[s._v("类的实例")]),t("p",[s._v("生成类的实例的写法，与 ES5 完全一样，也是使用"),t("code",{pre:!0},[s._v("new")]),s._v("命令。前面说过，如果忘记加上"),t("code",{pre:!0},[s._v("new")]),s._v("，像函数那样调用"),t("code",{pre:!0},[s._v("Class")]),s._v("，将会报错。")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Point")]),s._v(" {\n  "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// ...")]),s._v("\n}\n\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 报错")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" point = "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Point")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(", "),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("3")]),s._v(");\n\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 正确")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" point = "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Point")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(", "),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("3")]),s._v(");\n")])]),t("p",[s._v("与 ES5 一样，实例的属性除非显式定义在其本身（即定义在"),t("code",{pre:!0},[s._v("this")]),s._v("对象上），否则都是定义在原型上（即定义在"),t("code",{pre:!0},[s._v("class")]),s._v("上）。")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//定义类")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Point")]),s._v(" {\n\n  "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("constructor")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("x, y")]),s._v(") {\n    "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("x")]),s._v(" = x;\n    "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("y")]),s._v(" = y;\n  }\n\n  "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("toString")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n    "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'('")]),s._v(" + "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("x")]),s._v(" + "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("', '")]),s._v(" + "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("y")]),s._v(" + "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("')'")]),s._v(";\n  }\n\n}\n\n"),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" point = "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Point")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(", "),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("3")]),s._v(");\n\npoint."),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("toString")]),s._v("() "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// (2, 3)")]),s._v("\n\npoint."),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("hasOwnProperty")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'x'")]),s._v(") "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// true")]),s._v("\npoint."),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("hasOwnProperty")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'y'")]),s._v(") "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// true")]),s._v("\npoint."),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("hasOwnProperty")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'toString'")]),s._v(") "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// false")]),s._v("\npoint."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("__proto__")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("hasOwnProperty")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'toString'")]),s._v(") "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// true")]),s._v("\n")])]),t("p",[s._v("上面代码中，"),t("code",{pre:!0},[s._v("x")]),s._v("和"),t("code",{pre:!0},[s._v("y")]),s._v("都是实例对象"),t("code",{pre:!0},[s._v("point")]),s._v("自身的属性（因为定义在"),t("code",{pre:!0},[s._v("this")]),s._v("变量上），所以"),t("code",{pre:!0},[s._v("hasOwnProperty")]),s._v("方法返回"),t("code",{pre:!0},[s._v("true")]),s._v("，而"),t("code",{pre:!0},[s._v("toString")]),s._v("是原型对象的属性（因为定义在"),t("code",{pre:!0},[s._v("Point")]),s._v("类上），所以"),t("code",{pre:!0},[s._v("hasOwnProperty")]),s._v("方法返回"),t("code",{pre:!0},[s._v("false")]),s._v("。这些都与 ES5 的行为保持一致。")]),t("p",[s._v("与 ES5 一样，类的所有实例共享一个原型对象。")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" p1 = "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Point")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(","),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("3")]),s._v(");\n"),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" p2 = "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Point")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("3")]),s._v(","),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(");\n\np1."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("__proto__")]),s._v(" === p2."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("__proto__")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//true")]),s._v("\n")])]),t("p",[s._v("上面代码中，"),t("code",{pre:!0},[s._v("p1")]),s._v("和"),t("code",{pre:!0},[s._v("p2")]),s._v("都是"),t("code",{pre:!0},[s._v("Point")]),s._v("的实例，它们的原型都是"),t("code",{pre:!0},[s._v("Point.prototype")]),s._v("，所以"),t("code",{pre:!0},[s._v("__proto__")]),s._v("属性是相等的。")]),t("p",[s._v("这也意味着，可以通过实例的"),t("code",{pre:!0},[s._v("__proto__")]),s._v("属性为“类”添加方法。")]),t("blockquote",[t("p",[t("code",{pre:!0},[s._v("__proto__")]),s._v(" 并不是语言本身的特性，这是各大厂商具体实现时添加的私有属性，虽然目前很多现代浏览器的 JS 引擎中都提供了这个私有属性，但依旧不建议在生产中使用该属性，避免对环境产生依赖。生产环境中，我们可以使用 "),t("code",{pre:!0},[s._v("Object.getPrototypeOf")]),s._v(" 方法来获取实例对象的原型，然后再来为原型添加方法/属性。")])]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" p1 = "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Point")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(","),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("3")]),s._v(");\n"),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" p2 = "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Point")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("3")]),s._v(","),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(");\n\np1."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("__proto__")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("printName")]),s._v(" = "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" ("),t("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") { "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'Oops'")]),s._v(" };\n\np1."),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("printName")]),s._v("() "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('// "Oops"')]),s._v("\np2."),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("printName")]),s._v("() "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('// "Oops"')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" p3 = "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Point")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("4")]),s._v(","),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(");\np3."),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("printName")]),s._v("() "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('// "Oops"')]),s._v("\n")])]),t("p",[s._v("上面代码在"),t("code",{pre:!0},[s._v("p1")]),s._v("的原型上添加了一个"),t("code",{pre:!0},[s._v("printName")]),s._v("方法，由于"),t("code",{pre:!0},[s._v("p1")]),s._v("的原型就是"),t("code",{pre:!0},[s._v("p2")]),s._v("的原型，因此"),t("code",{pre:!0},[s._v("p2")]),s._v("也可以调用这个方法。而且，此后新建的实例"),t("code",{pre:!0},[s._v("p3")]),s._v("也可以调用这个方法。这意味着，使用实例的"),t("code",{pre:!0},[s._v("__proto__")]),s._v("属性改写原型，必须相当谨慎，不推荐使用，因为这会改变“类”的原始定义，影响到所有实例。")]),t("h3",[s._v("取值函数（getter）和存值函数（setter）")]),t("p",[s._v("与 ES5 一样，在“类”的内部可以使用"),t("code",{pre:!0},[s._v("get")]),s._v("和"),t("code",{pre:!0},[s._v("set")]),s._v("关键字，对某个属性设置存值函数和取值函数，拦截该属性的存取行为。")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("MyClass")]),s._v(" {\n  "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("constructor")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n    "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// ...")]),s._v("\n  }\n  "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("get")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("prop")]),s._v("() {\n    "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'getter'")]),s._v(";\n  }\n  "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("set")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("prop")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("value")]),s._v(") {\n    "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("console")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("log")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'setter: '")]),s._v("+value);\n  }\n}\n\n"),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" inst = "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("MyClass")]),s._v("();\n\ninst."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("prop")]),s._v(" = "),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("123")]),s._v(";\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// setter: 123")]),s._v("\n\ninst."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("prop")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 'getter'")]),s._v("\n")])]),t("p",[s._v("上面代码中，"),t("code",{pre:!0},[s._v("prop")]),s._v("属性有对应的存值函数和取值函数，因此赋值和读取行为都被自定义了。")]),t("p",[s._v("存值函数和取值函数是设置在属性的 Descriptor 对象上的。")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("CustomHTMLElement")]),s._v(" {\n  "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("constructor")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("element")]),s._v(") {\n    "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("element")]),s._v(" = element;\n  }\n\n  "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("get")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("html")]),s._v("() {\n    "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("element")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("innerHTML")]),s._v(";\n  }\n\n  "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("set")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("html")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("value")]),s._v(") {\n    "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("element")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("innerHTML")]),s._v(" = value;\n  }\n}\n\n"),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" descriptor = "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("getOwnPropertyDescriptor")]),s._v("(\n  "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Custom")]),s._v("HTMLElement."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("prototype")])]),s._v(", "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"html"')]),s._v("\n);\n\n"),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"get"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("in")]),s._v(" descriptor  "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// true")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"set"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("in")]),s._v(" descriptor  "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// true")]),s._v("\n")])]),t("p",[s._v("上面代码中，存值函数和取值函数是定义在"),t("code",{pre:!0},[s._v("html")]),s._v("属性的描述对象上面，这与 ES5 完全一致。")]),t("h3",[s._v("属性表达式")]),t("p",[s._v("类的属性名，可以采用表达式。")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" methodName = "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'getArea'")]),s._v(";\n\n"),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Square")]),s._v(" {\n  "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("constructor")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("length")]),s._v(") {\n    "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// ...")]),s._v("\n  }\n\n  [methodName]() {\n    "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// ...")]),s._v("\n  }\n}\n")])]),t("p",[s._v("上面代码中，"),t("code",{pre:!0},[s._v("Square")]),s._v("类的方法名"),t("code",{pre:!0},[s._v("getArea")]),s._v("，是从表达式得到的。")]),t("h3",[s._v("Class 表达式")]),t("p",[s._v("与函数一样，类也可以使用表达式的形式定义。")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("MyClass")]),s._v(" = "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Me")]),s._v(" {\n  "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("getClassName")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n    "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Me")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("name")]),s._v(";\n  }\n};\n")])]),t("p",[s._v("上面代码使用表达式定义了一个类。需要注意的是，这个类的名字是"),t("code",{pre:!0},[s._v("Me")]),s._v("，但是"),t("code",{pre:!0},[s._v("Me")]),s._v("只在 Class 的内部可用，指代当前类。在 Class 外部，这个类只能用"),t("code",{pre:!0},[s._v("MyClass")]),s._v("引用。")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" inst = "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("MyClass")]),s._v("();\ninst."),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("getClassName")]),s._v("() "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// Me")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Me")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("name")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// ReferenceError: Me is not defined")]),s._v("\n")])]),t("p",[s._v("上面代码表示，"),t("code",{pre:!0},[s._v("Me")]),s._v("只在 Class 内部有定义。")]),t("p",[s._v("如果类的内部没用到的话，可以省略"),t("code",{pre:!0},[s._v("Me")]),s._v("，也就是可以写成下面的形式。")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("MyClass")]),s._v(" = "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" { "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/* ... */")]),s._v(" };\n")])]),t("p",[s._v("采用 Class 表达式，可以写出立即执行的 Class。")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" person = "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" {\n  "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("constructor")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("name")]),s._v(") {\n    "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("name")]),s._v(" = name;\n  }\n\n  "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("sayName")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n    "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("console")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("log")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("name")]),s._v(");\n  }\n}("),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'张三'")]),s._v(");\n\nperson."),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("sayName")]),s._v("(); "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('// "张三"')]),s._v("\n")])]),t("p",[s._v("上面代码中，"),t("code",{pre:!0},[s._v("person")]),s._v("是一个立即执行的类的实例。")]),t("h3",[s._v("注意点")]),t("p",[t("strong",[s._v("（1）严格模式")])]),t("p",[s._v("类和模块的内部，默认就是严格模式，所以不需要使用"),t("code",{pre:!0},[s._v("use strict")]),s._v("指定运行模式。只要你的代码写在类或模块之中，就只有严格模式可用。考虑到未来所有的代码，其实都是运行在模块之中，所以 ES6 实际上把整个语言升级到了严格模式。")]),t("p",[t("strong",[s._v("（2）不存在提升")])]),t("p",[s._v("类不存在变量提升（hoist），这一点与 ES5 完全不同。")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Foo")]),s._v("(); "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// ReferenceError")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Foo")]),s._v(" {}\n")])]),t("p",[s._v("上面代码中，"),t("code",{pre:!0},[s._v("Foo")]),s._v("类使用在前，定义在后，这样会报错，因为 ES6 不会把类的声明提升到代码头部。这种规定的原因与下文要提到的继承有关，必须保证子类在父类之后定义。")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[s._v("{\n  "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Foo")]),s._v(" = "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" {};\n  "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Bar")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("extends")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_ inherited__"}},[s._v("Foo")]),s._v(" {\n  }\n}\n")])]),t("p",[s._v("上面的代码不会报错，因为"),t("code",{pre:!0},[s._v("Bar")]),s._v("继承"),t("code",{pre:!0},[s._v("Foo")]),s._v("的时候，"),t("code",{pre:!0},[s._v("Foo")]),s._v("已经有定义了。但是，如果存在"),t("code",{pre:!0},[s._v("class")]),s._v("的提升，上面代码就会报错，因为"),t("code",{pre:!0},[s._v("class")]),s._v("会被提升到代码头部，而"),t("code",{pre:!0},[s._v("let")]),s._v("命令是不提升的，所以导致"),t("code",{pre:!0},[s._v("Bar")]),s._v("继承"),t("code",{pre:!0},[s._v("Foo")]),s._v("的时候，"),t("code",{pre:!0},[s._v("Foo")]),s._v("还没有定义。")]),t("p",[t("strong",[s._v("（3）name 属性")])]),t("p",[s._v("由于本质上，ES6 的类只是 ES5 的构造函数的一层包装，所以函数的许多特性都被"),t("code",{pre:!0},[s._v("Class")]),s._v("继承，包括"),t("code",{pre:!0},[s._v("name")]),s._v("属性。")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Point")]),s._v(" {}\n"),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Point")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("name")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('// "Point"')]),s._v("\n")])]),t("p",[t("code",{pre:!0},[s._v("name")]),s._v("属性总是返回紧跟在"),t("code",{pre:!0},[s._v("class")]),s._v("关键字后面的类名。")]),t("p",[t("strong",[s._v("（4）Generator 方法")])]),t("p",[s._v("如果某个方法之前加上星号（"),t("code",{pre:!0},[s._v("*")]),s._v("），就表示该方法是一个 Generator 函数。")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Foo")]),s._v(" {\n  "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("constructor")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("...args")]),s._v(") {\n    "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("args")]),s._v(" = args;\n  }\n  * ["),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Symbol")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("iterator")]),s._v("]() {\n    "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" arg "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("of")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("args")]),s._v(") {\n      "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("yield")]),s._v(" arg;\n    }\n  }\n}\n\n"),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" x "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("of")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Foo")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'hello'")]),s._v(", "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'world'")]),s._v(")) {\n  "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("console")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("log")]),s._v("(x);\n}\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// hello")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// world")]),s._v("\n")])]),t("p",[s._v("上面代码中，"),t("code",{pre:!0},[s._v("Foo")]),s._v("类的"),t("code",{pre:!0},[s._v("Symbol.iterator")]),s._v("方法前有一个星号，表示该方法是一个 Generator 函数。"),t("code",{pre:!0},[s._v("Symbol.iterator")]),s._v("方法返回一个"),t("code",{pre:!0},[s._v("Foo")]),s._v("类的默认遍历器，"),t("code",{pre:!0},[s._v("for...of")]),s._v("循环会自动调用这个遍历器。")]),t("p",[t("strong",[s._v("（5）this 的指向")])]),t("p",[s._v("类的方法内部如果含有"),t("code",{pre:!0},[s._v("this")]),s._v("，它默认指向类的实例。但是，必须非常小心，一旦单独使用该方法，很可能报错。")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Logger")]),s._v(" {\n  "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("printName")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("name = "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'there'")])]),s._v(") {\n    "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("print")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("`Hello "),t("span",{pre:!0,attrs:{class:"hljs-subst"}},[s._v("${name}")]),s._v("`")]),s._v(");\n  }\n\n  "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("print")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("text")]),s._v(") {\n    "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("console")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("log")]),s._v("(text);\n  }\n}\n\n"),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" logger = "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Logger")]),s._v("();\n"),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" { printName } = logger;\n"),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("printName")]),s._v("(); "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// TypeError: Cannot read property 'print' of undefined")]),s._v("\n")])]),t("p",[s._v("上面代码中，"),t("code",{pre:!0},[s._v("printName")]),s._v("方法中的"),t("code",{pre:!0},[s._v("this")]),s._v("，默认指向"),t("code",{pre:!0},[s._v("Logger")]),s._v("类的实例。但是，如果将这个方法提取出来单独使用，"),t("code",{pre:!0},[s._v("this")]),s._v("会指向该方法运行时所在的环境（由于 class 内部是严格模式，所以 this 实际指向的是"),t("code",{pre:!0},[s._v("undefined")]),s._v("），从而导致找不到"),t("code",{pre:!0},[s._v("print")]),s._v("方法而报错。")]),t("p",[s._v("一个比较简单的解决方法是，在构造方法中绑定"),t("code",{pre:!0},[s._v("this")]),s._v("，这样就不会找不到"),t("code",{pre:!0},[s._v("print")]),s._v("方法了。")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Logger")]),s._v(" {\n  "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("constructor")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n    "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("printName")]),s._v(" = "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("printName")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("bind")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v(");\n  }\n\n  "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// ...")]),s._v("\n}\n")])]),t("p",[s._v("另一种解决方法是使用箭头函数。")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Obj")]),s._v(" {\n  "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("constructor")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n    "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("getThis")]),s._v(" = "),t("span",{pre:!0,attrs:{class:"hljs-function"}},[s._v("() =>")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v(";\n  }\n}\n\n"),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" myObj = "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Obj")]),s._v("();\nmyObj."),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("getThis")]),s._v("() === myObj "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// true")]),s._v("\n")])]),t("p",[s._v("箭头函数内部的"),t("code",{pre:!0},[s._v("this")]),s._v("总是指向定义时所在的对象。上面代码中，箭头函数位于构造函数内部，它的定义生效的时候，是在构造函数执行的时候。这时，箭头函数所在的运行环境，肯定是实例对象，所以"),t("code",{pre:!0},[s._v("this")]),s._v("会总是指向实例对象。")]),t("p",[s._v("还有一种解决方法是使用"),t("code",{pre:!0},[s._v("Proxy")]),s._v("，获取方法的时候，自动绑定"),t("code",{pre:!0},[s._v("this")]),s._v("。")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("selfish")]),s._v(" (target) {\n  "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" cache = "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("WeakMap")]),s._v("();\n  "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" handler = {\n    get (target, key) {\n      "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" value = "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Reflect")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("get")]),s._v("(target, key);\n      "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" ("),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("typeof")]),s._v(" value !== "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'function'")]),s._v(") {\n        "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" value;\n      }\n      "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" (!cache."),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("has")]),s._v("(value)) {\n        cache."),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("set")]),s._v("(value, value."),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("bind")]),s._v("(target));\n      }\n      "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" cache."),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("get")]),s._v("(value);\n    }\n  };\n  "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" proxy = "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Proxy")]),s._v("(target, handler);\n  "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" proxy;\n}\n\n"),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" logger = "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("selfish")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Logger")]),s._v("());\n")])]),t("h2",[s._v("静态方法")]),t("p",[s._v("类相当于实例的原型，所有在类中定义的方法，都会被实例继承。如果在一个方法前，加上"),t("code",{pre:!0},[s._v("static")]),s._v("关键字，就表示该方法不会被实例继承，而是直接通过类来调用，这就称为“静态方法”。")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Foo")]),s._v(" {\n  "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("classMethod")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n    "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'hello'")]),s._v(";\n  }\n}\n\n"),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Foo")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("classMethod")]),s._v("() "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 'hello'")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" foo = "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Foo")]),s._v("();\nfoo."),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("classMethod")]),s._v("()\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// TypeError: foo.classMethod is not a function")]),s._v("\n")])]),t("p",[s._v("上面代码中，"),t("code",{pre:!0},[s._v("Foo")]),s._v("类的"),t("code",{pre:!0},[s._v("classMethod")]),s._v("方法前有"),t("code",{pre:!0},[s._v("static")]),s._v("关键字，表明该方法是一个静态方法，可以直接在"),t("code",{pre:!0},[s._v("Foo")]),s._v("类上调用（"),t("code",{pre:!0},[s._v("Foo.classMethod()")]),s._v("），而不是在"),t("code",{pre:!0},[s._v("Foo")]),s._v("类的实例上调用。如果在实例上调用静态方法，会抛出一个错误，表示不存在该方法。")]),t("p",[s._v("注意，如果静态方法包含"),t("code",{pre:!0},[s._v("this")]),s._v("关键字，这个"),t("code",{pre:!0},[s._v("this")]),s._v("指的是类，而不是实例。")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Foo")]),s._v(" {\n  "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("bar")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n    "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("baz")]),s._v("();\n  }\n  "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("baz")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n    "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("console")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("log")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'hello'")]),s._v(");\n  }\n  "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("baz")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n    "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("console")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("log")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'world'")]),s._v(");\n  }\n}\n\n"),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Foo")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("bar")]),s._v("() "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// hello")]),s._v("\n")])]),t("p",[s._v("上面代码中，静态方法"),t("code",{pre:!0},[s._v("bar")]),s._v("调用了"),t("code",{pre:!0},[s._v("this.baz")]),s._v("，这里的"),t("code",{pre:!0},[s._v("this")]),s._v("指的是"),t("code",{pre:!0},[s._v("Foo")]),s._v("类，而不是"),t("code",{pre:!0},[s._v("Foo")]),s._v("的实例，等同于调用"),t("code",{pre:!0},[s._v("Foo.baz")]),s._v("。另外，从这个例子还可以看出，静态方法可以与非静态方法重名。")]),t("p",[s._v("父类的静态方法，可以被子类继承。")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Foo")]),s._v(" {\n  "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("classMethod")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n    "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'hello'")]),s._v(";\n  }\n}\n\n"),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Bar")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("extends")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_ inherited__"}},[s._v("Foo")]),s._v(" {\n}\n\n"),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Bar")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("classMethod")]),s._v("() "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 'hello'")]),s._v("\n")])]),t("p",[s._v("上面代码中，父类"),t("code",{pre:!0},[s._v("Foo")]),s._v("有一个静态方法，子类"),t("code",{pre:!0},[s._v("Bar")]),s._v("可以调用这个方法。")]),t("p",[s._v("静态方法也是可以从"),t("code",{pre:!0},[s._v("super")]),s._v("对象上调用的。")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Foo")]),s._v(" {\n  "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("classMethod")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n    "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'hello'")]),s._v(";\n  }\n}\n\n"),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Bar")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("extends")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_ inherited__"}},[s._v("Foo")]),s._v(" {\n  "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("classMethod")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n    "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("super")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("classMethod")]),s._v("() + "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("', too'")]),s._v(";\n  }\n}\n\n"),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Bar")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("classMethod")]),s._v("() "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('// "hello, too"')]),s._v("\n")])]),t("h2",[s._v("实例属性的新写法")]),t("p",[s._v("实例属性除了定义在"),t("code",{pre:!0},[s._v("constructor()")]),s._v("方法里面的"),t("code",{pre:!0},[s._v("this")]),s._v("上面，也可以定义在类的最顶层。")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("IncreasingCounter")]),s._v(" {\n  "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("constructor")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n    "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("_count")]),s._v(" = "),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(";\n  }\n  "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("get")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("value")]),s._v("() {\n    "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("console")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("log")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'Getting the current value!'")]),s._v(");\n    "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("_count")]),s._v(";\n  }\n  "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("increment")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n    "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("_count")]),s._v("++;\n  }\n}\n")])]),t("p",[s._v("上面代码中，实例属性"),t("code",{pre:!0},[s._v("this._count")]),s._v("定义在"),t("code",{pre:!0},[s._v("constructor()")]),s._v("方法里面。另一种写法是，这个属性也可以定义在类的最顶层，其他都不变。")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("IncreasingCounter")]),s._v(" {\n  _count = "),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(";\n  "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("get")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("value")]),s._v("() {\n    "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("console")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("log")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'Getting the current value!'")]),s._v(");\n    "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("_count")]),s._v(";\n  }\n  "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("increment")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n    "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("_count")]),s._v("++;\n  }\n}\n")])]),t("p",[s._v("上面代码中，实例属性"),t("code",{pre:!0},[s._v("_count")]),s._v("与取值函数"),t("code",{pre:!0},[s._v("value()")]),s._v("和"),t("code",{pre:!0},[s._v("increment()")]),s._v("方法，处于同一个层级。这时，不需要在实例属性前面加上"),t("code",{pre:!0},[s._v("this")]),s._v("。")]),t("p",[s._v("这种新写法的好处是，所有实例对象自身的属性都定义在类的头部，看上去比较整齐，一眼就能看出这个类有哪些实例属性。")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("foo")]),s._v(" {\n  bar = "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'hello'")]),s._v(";\n  baz = "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'world'")]),s._v(";\n\n  "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("constructor")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n    "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// ...")]),s._v("\n  }\n}\n")])]),t("p",[s._v("上面的代码，一眼就能看出，"),t("code",{pre:!0},[s._v("foo")]),s._v("类有两个实例属性，一目了然。另外，写起来也比较简洁。")]),t("h2",[s._v("静态属性")]),t("p",[s._v("静态属性指的是 Class 本身的属性，即"),t("code",{pre:!0},[s._v("Class.propName")]),s._v("，而不是定义在实例对象（"),t("code",{pre:!0},[s._v("this")]),s._v("）上的属性。")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Foo")]),s._v(" {\n}\n\n"),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Foo")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("prop")]),s._v(" = "),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(";\n"),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Foo")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("prop")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 1")]),s._v("\n")])]),t("p",[s._v("上面的写法为"),t("code",{pre:!0},[s._v("Foo")]),s._v("类定义了一个静态属性"),t("code",{pre:!0},[s._v("prop")]),s._v("。")]),t("p",[s._v("目前，只有这种写法可行，因为 ES6 明确规定，Class 内部只有静态方法，没有静态属性。现在有一个"),t("a",{attrs:{href:"https://github.com/tc39/proposal-class-fields"}},[s._v("提案")]),s._v("提供了类的静态属性，写法是在实例属性的前面，加上"),t("code",{pre:!0},[s._v("static")]),s._v("关键字。")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("MyClass")]),s._v(" {\n  "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" myStaticProp = "),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("42")]),s._v(";\n\n  "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("constructor")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n    "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("console")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("log")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("MyClass")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("myStaticProp")]),s._v("); "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 42")]),s._v("\n  }\n}\n")])]),t("p",[s._v("这个新写法大大方便了静态属性的表达。")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 老写法")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Foo")]),s._v(" {\n  "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// ...")]),s._v("\n}\n"),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Foo")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("prop")]),s._v(" = "),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(";\n\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 新写法")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Foo")]),s._v(" {\n  "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" prop = "),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(";\n}\n")])]),t("p",[s._v("上面代码中，老写法的静态属性定义在类的外部。整个类生成以后，再生成静态属性。这样让人很容易忽略这个静态属性，也不符合相关代码应该放在一起的代码组织原则。另外，新写法是显式声明（declarative），而不是赋值处理，语义更好。")]),t("h2",[s._v("私有方法和私有属性")]),t("h3",[s._v("现有的解决方案")]),t("p",[s._v("私有方法和私有属性，是只能在类的内部访问的方法和属性，外部不能访问。这是常见需求，有利于代码的封装，但 ES6 不提供，只能通过变通方法模拟实现。")]),t("p",[s._v("一种做法是在命名上加以区别。")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Widget")]),s._v(" {\n\n  "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 公有方法")]),s._v("\n  foo (baz) {\n    "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("_bar")]),s._v("(baz);\n  }\n\n  "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 私有方法")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("_bar")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("baz")]),s._v(") {\n    "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("snaf")]),s._v(" = baz;\n  }\n\n  "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// ...")]),s._v("\n}\n")])]),t("p",[s._v("上面代码中，"),t("code",{pre:!0},[s._v("_bar")]),s._v("方法前面的下划线，表示这是一个只限于内部使用的私有方法。但是，这种命名是不保险的，在类的外部，还是可以调用到这个方法。")]),t("p",[s._v("另一种方法就是索性将私有方法移出模块，因为模块内部的所有方法都是对外可见的。")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Widget")]),s._v(" {\n  foo (baz) {\n    bar."),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("call")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v(", baz);\n  }\n\n  "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// ...")]),s._v("\n}\n\n"),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("bar")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("baz")]),s._v(") {\n  "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("snaf")]),s._v(" = baz;\n}\n")])]),t("p",[s._v("上面代码中，"),t("code",{pre:!0},[s._v("foo")]),s._v("是公开方法，内部调用了"),t("code",{pre:!0},[s._v("bar.call(this, baz)")]),s._v("。这使得"),t("code",{pre:!0},[s._v("bar")]),s._v("实际上成为了当前模块的私有方法。")]),t("p",[s._v("还有一种方法是利用"),t("code",{pre:!0},[s._v("Symbol")]),s._v("值的唯一性，将私有方法的名字命名为一个"),t("code",{pre:!0},[s._v("Symbol")]),s._v("值。")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" bar = "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Symbol")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'bar'")]),s._v(");\n"),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" snaf = "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Symbol")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'snaf'")]),s._v(");\n\n"),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("default")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("myClass")]),s._v("{\n\n  "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 公有方法")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("foo")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("baz")]),s._v(") {\n    "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("[bar](baz);\n  }\n\n  "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 私有方法")]),s._v("\n  [bar](baz) {\n    "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("[snaf] = baz;\n  }\n\n  "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// ...")]),s._v("\n};\n")])]),t("p",[s._v("上面代码中，"),t("code",{pre:!0},[s._v("bar")]),s._v("和"),t("code",{pre:!0},[s._v("snaf")]),s._v("都是"),t("code",{pre:!0},[s._v("Symbol")]),s._v("值，一般情况下无法获取到它们，因此达到了私有方法和私有属性的效果。但是也不是绝对不行，"),t("code",{pre:!0},[s._v("Reflect.ownKeys()")]),s._v("依然可以拿到它们。")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" inst = "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("myClass")]),s._v("();\n\n"),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Reflect")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("ownKeys")]),s._v("(myClass."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("prototype")])]),s._v(")\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// [ 'constructor', 'foo', Symbol(bar) ]")]),s._v("\n")])]),t("p",[s._v("上面代码中，Symbol 值的属性名依然可以从类的外部拿到。")]),t("h3",[s._v("私有属性的提案")]),t("p",[s._v("目前，有一个"),t("a",{attrs:{href:"https://github.com/tc39/proposal-private-methods"}},[s._v("提案")]),s._v("，为"),t("code",{pre:!0},[s._v("class")]),s._v("加了私有属性。方法是在属性名之前，使用"),t("code",{pre:!0},[s._v("#")]),s._v("表示。")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("IncreasingCounter")]),s._v(" {\n  #count = "),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(";\n  "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("get")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("value")]),s._v("() {\n    "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("console")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("log")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'Getting the current value!'")]),s._v(");\n    "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v(".#count;\n  }\n  "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("increment")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n    "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v(".#count++;\n  }\n}\n")])]),t("p",[s._v("上面代码中，"),t("code",{pre:!0},[s._v("#count")]),s._v("就是私有属性，只能在类的内部使用（"),t("code",{pre:!0},[s._v("this.#count")]),s._v("）。如果在类的外部使用，就会报错。")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" counter = "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("IncreasingCounter")]),s._v("();\ncounter.#count "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 报错")]),s._v("\ncounter.#count = "),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("42")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 报错")]),s._v("\n")])]),t("p",[s._v("上面代码在类的外部，读取私有属性，就会报错。")]),t("p",[s._v("下面是另一个例子。")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Point")]),s._v(" {\n  #x;\n\n  "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("constructor")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("x = "),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")])]),s._v(") {\n    "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v(".#x = +x;\n  }\n\n  "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("get")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("x")]),s._v("() {\n    "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v(".#x;\n  }\n\n  "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("set")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("x")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("value")]),s._v(") {\n    "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v(".#x = +value;\n  }\n}\n")])]),t("p",[s._v("上面代码中，"),t("code",{pre:!0},[s._v("#x")]),s._v("就是私有属性，在"),t("code",{pre:!0},[s._v("Point")]),s._v("类之外是读取不到这个属性的。由于井号"),t("code",{pre:!0},[s._v("#")]),s._v("是属性名的一部分，使用时必须带有"),t("code",{pre:!0},[s._v("#")]),s._v("一起使用，所以"),t("code",{pre:!0},[s._v("#x")]),s._v("和"),t("code",{pre:!0},[s._v("x")]),s._v("是两个不同的属性。")]),t("p",[s._v("之所以要引入一个新的前缀"),t("code",{pre:!0},[s._v("#")]),s._v("表示私有属性，而没有采用"),t("code",{pre:!0},[s._v("private")]),s._v("关键字，是因为 JavaScript 是一门动态语言，没有类型声明，使用独立的符号似乎是唯一的比较方便可靠的方法，能够准确地区分一种属性是否为私有属性。另外，Ruby 语言使用"),t("code",{pre:!0},[s._v("@")]),s._v("表示私有属性，ES6 没有用这个符号而使用"),t("code",{pre:!0},[s._v("#")]),s._v("，是因为"),t("code",{pre:!0},[s._v("@")]),s._v("已经被留给了 Decorator。")]),t("p",[s._v("这种写法不仅可以写私有属性，还可以用来写私有方法。")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Foo")]),s._v(" {\n  #a;\n  #b;\n  "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("constructor")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("a, b")]),s._v(") {\n    "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v(".#a = a;\n    "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v(".#b = b;\n  }\n  #"),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("sum")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n    "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v(".#a + "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v(".#b;\n  }\n  "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("printSum")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n    "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("console")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("log")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v(".#"),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("sum")]),s._v("());\n  }\n}\n")])]),t("p",[s._v("上面代码中，"),t("code",{pre:!0},[s._v("#sum()")]),s._v("就是一个私有方法。")]),t("p",[s._v("另外，私有属性也可以设置 getter 和 setter 方法。")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Counter")]),s._v(" {\n  #xValue = "),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(";\n\n  "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("constructor")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n    "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("super")]),s._v("();\n    "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// ...")]),s._v("\n  }\n\n  get #"),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("x")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") { "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" #xValue; }\n  set #"),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("x")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("value")]),s._v(") {\n    "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v(".#xValue = value;\n  }\n}\n")])]),t("p",[s._v("上面代码中，"),t("code",{pre:!0},[s._v("#x")]),s._v("是一个私有属性，它的读写都通过"),t("code",{pre:!0},[s._v("get #x()")]),s._v("和"),t("code",{pre:!0},[s._v("set #x()")]),s._v("来完成。")]),t("p",[s._v("私有属性不限于从"),t("code",{pre:!0},[s._v("this")]),s._v("引用，只要是在类的内部，实例也可以引用私有属性。")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Foo")]),s._v(" {\n  #privateValue = "),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("42")]),s._v(";\n  "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("getPrivateValue")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("foo")]),s._v(") {\n    "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" foo.#privateValue;\n  }\n}\n\n"),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Foo")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("getPrivateValue")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Foo")]),s._v("()); "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 42")]),s._v("\n")])]),t("p",[s._v("上面代码允许从实例"),t("code",{pre:!0},[s._v("foo")]),s._v("上面引用私有属性。")]),t("p",[s._v("私有属性和私有方法前面，也可以加上"),t("code",{pre:!0},[s._v("static")]),s._v("关键字，表示这是一个静态的私有属性或私有方法。")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("FakeMath")]),s._v(" {\n  "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-variable constant_"}},[s._v("PI")]),s._v(" = "),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("22")]),s._v(" / "),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("7")]),s._v(";\n  "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" #totallyRandomNumber = "),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("4")]),s._v(";\n\n  "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" #"),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("computeRandomNumber")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n    "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("FakeMath")]),s._v(".#totallyRandomNumber;\n  }\n\n  "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("random")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n    "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("console")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("log")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'I heard you like random numbers…'")]),s._v(")\n    "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("FakeMath")]),s._v(".#"),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("computeRandomNumber")]),s._v("();\n  }\n}\n\n"),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("FakeMath")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("PI")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 3.142857142857143")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("FakeMath")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("random")]),s._v("()\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// I heard you like random numbers…")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 4")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("FakeMath")]),s._v(".#totallyRandomNumber "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 报错")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("FakeMath")]),s._v(".#"),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("computeRandomNumber")]),s._v("() "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 报错")]),s._v("\n")])]),t("p",[s._v("上面代码中，"),t("code",{pre:!0},[s._v("#totallyRandomNumber")]),s._v("是私有属性，"),t("code",{pre:!0},[s._v("#computeRandomNumber()")]),s._v("是私有方法，只能在"),t("code",{pre:!0},[s._v("FakeMath")]),s._v("这个类的内部调用，外部调用就会报错。")]),t("h2",[s._v("new.target 属性")]),t("p",[t("code",{pre:!0},[s._v("new")]),s._v("是从构造函数生成实例对象的命令。ES6 为"),t("code",{pre:!0},[s._v("new")]),s._v("命令引入了一个"),t("code",{pre:!0},[s._v("new.target")]),s._v("属性，该属性一般用在构造函数之中，返回"),t("code",{pre:!0},[s._v("new")]),s._v("命令作用于的那个构造函数。如果构造函数不是通过"),t("code",{pre:!0},[s._v("new")]),s._v("命令或"),t("code",{pre:!0},[s._v("Reflect.construct()")]),s._v("调用的，"),t("code",{pre:!0},[s._v("new.target")]),s._v("会返回"),t("code",{pre:!0},[s._v("undefined")]),s._v("，因此这个属性可以用来确定构造函数是怎么调用的。")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("Person")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("name")]),s._v(") {\n  "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" ("),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("target")]),s._v(" !== "),t("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("undefined")]),s._v(") {\n    "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("name")]),s._v(" = name;\n  } "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("else")]),s._v(" {\n    "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("throw")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Error")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'必须使用 new 命令生成实例'")]),s._v(");\n  }\n}\n\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 另一种写法")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("Person")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("name")]),s._v(") {\n  "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" ("),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("target")]),s._v(" === "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Person")]),s._v(") {\n    "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("name")]),s._v(" = name;\n  } "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("else")]),s._v(" {\n    "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("throw")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Error")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'必须使用 new 命令生成实例'")]),s._v(");\n  }\n}\n\n"),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" person = "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Person")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'张三'")]),s._v("); "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 正确")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" notAPerson = "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Person")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("call")]),s._v("(person, "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'张三'")]),s._v(");  "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 报错")]),s._v("\n")])]),t("p",[s._v("上面代码确保构造函数只能通过"),t("code",{pre:!0},[s._v("new")]),s._v("命令调用。")]),t("p",[s._v("Class 内部调用"),t("code",{pre:!0},[s._v("new.target")]),s._v("，返回当前 Class。")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Rectangle")]),s._v(" {\n  "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("constructor")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("length, width")]),s._v(") {\n    "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("console")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("log")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("target")]),s._v(" === "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Rectangle")]),s._v(");\n    "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("length")]),s._v(" = length;\n    "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("width")]),s._v(" = width;\n  }\n}\n\n"),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" obj = "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Rectangle")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("3")]),s._v(", "),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("4")]),s._v("); "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 输出 true")]),s._v("\n")])]),t("p",[s._v("需要注意的是，子类继承父类时，"),t("code",{pre:!0},[s._v("new.target")]),s._v("会返回子类。")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Rectangle")]),s._v(" {\n  "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("constructor")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("length, width")]),s._v(") {\n    "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("console")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("log")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("target")]),s._v(" === "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Rectangle")]),s._v(");\n    "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// ...")]),s._v("\n  }\n}\n\n"),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Square")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("extends")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_ inherited__"}},[s._v("Rectangle")]),s._v(" {\n  "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("constructor")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("length, width")]),s._v(") {\n    "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("super")]),s._v("(length, width);\n  }\n}\n\n"),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" obj = "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Square")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("3")]),s._v("); "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 输出 false")]),s._v("\n")])]),t("p",[s._v("上面代码中，"),t("code",{pre:!0},[s._v("new.target")]),s._v("会返回子类。")]),t("p",[s._v("利用这个特点，可以写出不能独立使用、必须继承后才能使用的类。")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Shape")]),s._v(" {\n  "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("constructor")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n    "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" ("),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v("."),t("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("target")]),s._v(" === "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Shape")]),s._v(") {\n      "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("throw")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Error")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'本类不能实例化'")]),s._v(");\n    }\n  }\n}\n\n"),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Rectangle")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("extends")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_ inherited__"}},[s._v("Shape")]),s._v(" {\n  "),t("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("constructor")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("length, width")]),s._v(") {\n    "),t("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("super")]),s._v("();\n    "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// ...")]),s._v("\n  }\n}\n\n"),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" x = "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Shape")]),s._v("();  "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 报错")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" y = "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Rectangle")]),s._v("("),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("3")]),s._v(", "),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("4")]),s._v(");  "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 正确")]),s._v("\n")])]),t("p",[s._v("上面代码中，"),t("code",{pre:!0},[s._v("Shape")]),s._v("类不能被实例化，只能用于继承。")]),t("p",[s._v("注意，在函数外部，使用"),t("code",{pre:!0},[s._v("new.target")]),s._v("会报错。")])])])])}],!1,null,null,null);a.default=e.exports}}]);