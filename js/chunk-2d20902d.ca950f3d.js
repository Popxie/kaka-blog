(window.webpackJsonp=window.webpackJsonp||[]).push([["chunk-2d20902d"],{a6df:function(e,s,t){"use strict";t.r(s);var r=t("2877"),a=Object(r.a)({},(function(){var e=this;e.$createElement;return e._self._c,e._m(0)}),[function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("section",[t("html",[t("head"),t("body",[t("h1",[e._v("如何创建一个优美的 commit 记录")]),t("h2",[e._v("1.背景说明")]),t("blockquote",[t("p",[e._v("每当我们开发完一个功能分支以后，在合并到 "),t("code",{pre:!0},[e._v("master")]),e._v(" 分支以后，会附带的将开发期间所有的 "),t("code",{pre:!0},[e._v("commit")]),e._v(" 记录一并 merge 到了远端，若为一个人开发还好问题不大，一旦牵扯多个人协同开发的话，就会导致 "),t("code",{pre:!0},[e._v("master")]),e._v(" 分支 "),t("code",{pre:!0},[e._v("commit")]),e._v(' 记录严重混乱，"交叉感染"，'),t("code",{pre:!0},[e._v("commit")]),e._v(" 记录不清晰。"),t("br"),e._v(" 理想情况下 "),t("code",{pre:!0},[e._v("master")]),e._v(" 分支 "),t("code",{pre:!0},[e._v("commit")]),e._v(" 记录应尽量做到干净清晰，一个 "),t("code",{pre:!0},[e._v("commit")]),e._v(" 为一个功能（但是这个 "),t("code",{pre:!0},[e._v("commit")]),e._v(" 会包含这个功能分支的所有 "),t("code",{pre:!0},[e._v("commit")]),e._v(" 记录），方便出问题了进行整体回滚，以及有个清晰的树状图("),t("code",{pre:!0},[e._v("git log --graph")]),e._v(")")])]),t("h2",[e._v("2.前置条件")]),t("ul",[t("li",[e._v("从远端拉取两次项目模拟两个人，再将这两个项目分别从 "),t("code",{pre:!0},[e._v("test")]),e._v(" 分支创建一个新的功能分支，用来模拟两个人开发 "),t("ul",[t("li",[e._v("这里用 "),t("code",{pre:!0},[e._v("user1")]),e._v(" 和 "),t("code",{pre:!0},[e._v("user2")]),e._v(" 来表示")])])]),t("li",[t("code",{pre:!0},[e._v("user1")]),e._v(" 和 "),t("code",{pre:!0},[e._v("user2")]),e._v(" 分别轮流交叉提交 "),t("code",{pre:!0},[e._v("commit")]),e._v("，用来模拟最终 "),t("code",{pre:!0},[e._v("merge")]),e._v(" 到 test 分支 "),t("code",{pre:!0},[e._v("commit")]),e._v(" 记录交叉混乱的情况")])]),t("p",[t("img",{attrs:{src:"https://user-images.githubusercontent.com/24952644/127743001-076af257-ae11-4500-b16a-573ec2c2d2aa.png",alt:"16_git_rebase"}})]),t("p",[t("code",{pre:!0},[e._v("user1")]),e._v(" & "),t("code",{pre:!0},[e._v("user2")]),e._v(" 分别进行的 4 次提交 如上图所示")]),t("h2",[e._v("3.最终效果对比")]),t("blockquote",[t("p",[t("code",{pre:!0},[e._v("commit")]),e._v(' 记录"交叉混乱",视觉上看着并不是很爽朗')])]),t("p",[t("code",{pre:!0},[e._v("merge")]),e._v(" 后的 "),t("code",{pre:!0},[e._v("commit")]),e._v(" 是按照 "),t("code",{pre:!0},[e._v("commit")]),e._v(" 的时间自上而下的排序,所以看着会比较不清爽")]),t("p",[t("img",{attrs:{src:"https://user-images.githubusercontent.com/24952644/127743173-35e674d8-7400-4656-b141-2f9d46b2eba9.png",alt:"17_git_rebase"}})]),t("p",[t("code",{pre:!0},[e._v("git log")]),e._v(" 前后对比 如上图所示")]),t("p",[t("img",{attrs:{src:"https://user-images.githubusercontent.com/24952644/127743268-428e310c-173b-4ba3-bfc9-b2748e0b69a5.png",alt:"18_git_rebase"}})]),t("p",[t("code",{pre:!0},[e._v("git log --graph")]),e._v(" 前后对比 如上图所示")]),t("h2",[e._v("4.如何避免这种问题??")]),t("p",[e._v("这里以"),t("code",{pre:!0},[e._v("user1")]),e._v("操作为例，"),t("code",{pre:!0},[e._v("user2")]),e._v("同理")]),t("blockquote",[t("p",[e._v("使用"),t("code",{pre:!0},[e._v("git rebase -i xxxx")]),e._v(" 命令")])]),t("p",[t("img",{attrs:{src:"https://user-images.githubusercontent.com/24952644/127743271-54fc1a3f-277e-464c-95c1-54a285313b0f.png",alt:"19_git_rebase"}})]),t("p",[e._v("user1 rebase 前后对比 如上图所示")]),t("h3",[e._v("情况一：我们的多次 commit 已经提交到远端")]),t("ul",[t("li",[e._v("涉及到危险操作 "),t("code",{pre:!0},[e._v("git push -f")])])]),t("blockquote",[t("p",[e._v("友情提示： 如果对变基不是很清楚，建议在变基之前对'"),t("code",{pre:!0},[e._v("user1")]),e._v("'的分支进行备份")])]),t("p",[e._v("通常情况下，一个新的功能分支不可能一直暂存在本地而不提交远端，就样子就会造成多次的 "),t("code",{pre:!0},[e._v("commit")]),e._v(" 都会被提交到远端，最终 "),t("code",{pre:!0},[e._v("merge")]),e._v(" 到 test 分支的时候也会附带的把之前的多次 "),t("code",{pre:!0},[e._v("commit")]),e._v(" 记录一并给提交上去了。而我们期望的是："),t("strong",[e._v("简化 commit 记录，在 "),t("code",{pre:!0},[e._v("merge")]),e._v(" 到 test 之前将之前的 "),t("code",{pre:!0},[e._v("commit")]),e._v(" 都合并为一个")])]),t("p",[e._v("但是"),t("code",{pre:!0},[e._v("git rebase")]),e._v("命令多用于"),t("strong",[e._v("未提交到远端之前")]),e._v("进行 "),t("code",{pre:!0},[e._v("commit")]),e._v(" 合并操作。")]),t("p",[e._v("所以就有了友情提示做个备份，以免操作失误不好挽回的局面。")]),t("h4",[e._v("第一步：找到需要变基的起点")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-sh"}},[e._v("948aa5a940eda8b7d92181a2cd0a272ebec38352 (HEAD -> feature/user1-test, origin/feature/user1-test) add user1.4\n60e6ec8520c94dcc54f8f76ab96ba393fe4e19b7 add user1.3\nfba4e9588c28d7dd076e5f8abc63a711bb1f0235 add user1.2\nd01d268ddf308d7fd612a9c5db2d27f7dc1bfd27 add user1.1\ne6edcd464317c119c4cfa3cb2b7a354003db9788 (origin/test, origin/master, "),t("span",{pre:!0,attrs:{class:"hljs-built_in"}},[e._v("test")]),e._v(", master) 修复you dont know js图片路径引入问题\n")])]),t("p",[e._v("由上可知我们要将"),t("code",{pre:!0},[e._v("add user1.1 ~ add user1.4")]),e._v("合并为一个 "),t("code",{pre:!0},[e._v("commit")]),e._v("，所以我们要选择的起点是 "),t("code",{pre:!0},[e._v("e6edcd464")])]),t("p",[e._v("1."),t("code",{pre:!0},[e._v("git rebase -i e6edcd464")]),e._v("会弹出以下提示")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-sh"}},[e._v("pick d01d268 add user1.1\npick fba4e95 add user1.2\npick 60e6ec8 add user1.3\npick 948aa5a add user1.4\n\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[e._v("# 变基 e6edcd4..948aa5a 到 948aa5a（4 个提交）")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[e._v("#")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[e._v("# 命令:")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[e._v("# p, pick <提交> = 使用提交")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[e._v("# r, reword <提交> = 使用提交，但修改提交说明")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[e._v("# e, edit <提交> = 使用提交，进入 shell 以便进行提交修补")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[e._v("# s, squash <提交> = 使用提交，但融合到前一个提交")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[e._v('# f, fixup <提交> = 类似于 "squash"，但丢弃提交说明日志')]),e._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[e._v("# x, exec <命令> = 使用 shell 运行命令（此行剩余部分）")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[e._v("# b, break = 在此处停止（使用 'git rebase --continue' 继续变基）")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[e._v("# d, drop <提交> = 删除提交")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[e._v("# l, label <label> = 为当前 HEAD 打上标记")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[e._v("# t, reset <label> = 重置 HEAD 到该标记")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[e._v("# m, merge [-C <commit> | -c <commit>] <label> [# <oneline>]")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[e._v("# .       创建一个合并提交，并使用原始的合并提交说明（如果没有指定")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[e._v("# .       原始提交，使用注释部分的 oneline 作为提交说明）。使用")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[e._v("# .       -c <提交> 可以编辑提交说明。")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[e._v("#")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[e._v("# 可以对这些行重新排序，将从上至下执行。")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[e._v("#")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[e._v("# 如果您在这里删除一行，对应的提交将会丢失。")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[e._v("#")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[e._v("# 然而，如果您删除全部内容，变基操作将会终止。")]),e._v("\n")])]),t("p",[e._v("2.将"),t("code",{pre:!0},[e._v("user1.2~user1.4")]),e._v("合并到"),t("code",{pre:!0},[e._v("user1.1")])]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-sh"}},[e._v("pick d01d268 add user1.1\ns fba4e95 add user1.2 ↑\ns 60e6ec8 add user1.3 ↑\ns 948aa5a add user1.4 ↑  "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[e._v("# s 表示向上合并，所以p(ick)都会在上 s(quash)在下，否则会出问题哈，不信可以自己尝试[狗头]")]),e._v("\n\n:wq //退出保存\n")])]),t("p",[e._v("3.退出保存后进入如下页面")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-sh"}},[t("span",{pre:!0,attrs:{class:"hljs-comment"}},[e._v("# 这是一个 4 个提交的组合。")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[e._v("# 这是第一个提交说明：")]),e._v("\n\nadd user1.1\n\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[e._v("# 这是提交说明 #2：")]),e._v("\n\nadd user1.2\n\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[e._v("# 这是提交说明 #3：")]),e._v("\n\nadd user1.3\n\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[e._v("# 这是提交说明 #4：")]),e._v("\n\nadd user1.4\n\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[e._v("# 请为您的变更输入提交说明。以 '#' 开始的行将被忽略，而一个空的提交")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[e._v("# 说明将会终止提交")]),e._v("\n:wq //退出保存\n")])]),t("p",[e._v("4.直接 "),t("code",{pre:!0},[e._v(":wq")]),e._v("退出保存走默认的即可")]),t("p",[e._v("5.最终效果前后对比")]),t("p",[t("img",{attrs:{src:"https://user-images.githubusercontent.com/24952644/127743271-54fc1a3f-277e-464c-95c1-54a285313b0f.png",alt:"19_git_rebase"}})]),t("p",[e._v("如上图所示")]),t("p",[t("img",{attrs:{src:"https://user-images.githubusercontent.com/24952644/127743273-bda6ac3e-f800-456c-8c77-6533f90713a9.png",alt:"20_git_rebase"}})]),t("p",[t("strong",[t("code",{pre:!0},[e._v("But")])]),e._v(" 这个时候 vscode 左下角会有提示告诉你 当前分支落后远端分支 4 次 "),t("code",{pre:!0},[e._v("commit")]),e._v("，且有一个未提交的 "),t("code",{pre:!0},[e._v("commit")]),e._v(" 如上图所示")]),t("p",[t("img",{attrs:{src:"https://user-images.githubusercontent.com/24952644/127743275-408035f1-2232-4b2d-bb38-1d58ed7de594.png",alt:"21_git_rebase"}})]),t("p",[e._v("因为这个分支是自己的，所以可以强制将当前变基后的分支 "),t("code",{pre:!0},[e._v("push")]),e._v(" 到远端覆盖，结果 如上图所示")]),t("h3",[e._v("情况二：我们的多次 commit 还在本地未提交到远端")]),t("p",[e._v("这种情况呢包含在情况一中，只是没有了强制 "),t("code",{pre:!0},[e._v("push")]),e._v(" 这一步，也不会出现落后远端分支 4 次 "),t("code",{pre:!0},[e._v("commit")]),e._v(" 的情况。")]),t("p",[e._v("所以不再重复赘述~~")]),t("h2",[e._v("5.两用户变基后的分支合并到 test 分支")]),t("p",[t("img",{attrs:{src:"https://user-images.githubusercontent.com/24952644/127743173-35e674d8-7400-4656-b141-2f9d46b2eba9.png",alt:"17_git_rebase"}})]),t("p",[e._v("最终变基合并后的效果 如上图所示：")])])])])}],!1,null,null,null);s.default=a.exports}}]);