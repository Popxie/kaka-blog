(window.webpackJsonp=window.webpackJsonp||[]).push([["chunk-2d217cab"],{c7de:function(s,e,a){"use strict";a.r(e);var r=a("2877"),t=Object(r.a)({},(function(){var s=this;s.$createElement;return s._self._c,s._m(0)}),[function(){var s=this,e=s.$createElement,a=s._self._c||e;return a("section",[a("html",[a("head"),a("body",[a("h1",[s._v("你真的很懂操作符??? [奸笑]")]),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/Popxie/kaka-img-repo/master/img/blogs/01_%E4%BD%A0%E7%9C%9F%E7%9A%84%E5%BE%88%E6%87%82%E6%93%8D%E4%BD%9C%E7%AC%A6.png",alt:"01_你真的很懂操作符"}})]),a("h2",[s._v("前言")]),a("blockquote",[a("p",[s._v("之前看到了一篇很棒的帖子，觉得不做就做了下笔记特与大家分享！通常情况下我都会在总结的同时，在文末附带【阅读原文】，这次是真找不到原文了（时间有点久远了），但是我还是有尊重原创的意识的[狗头]··· 希望本篇文章能够给大家带来一些收获~🌚")])]),a("p",[s._v("关键词： "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/%E5%8F%AF%E9%80%89%E9%93%BE"}},[s._v("可选链操作符")]),s._v(" , "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Nullish_coalescing_operator"}},[s._v("空值合并操作符")]),s._v(", ES2020")]),a("h2",[s._v("可选链操作符")]),a("p",[a("code",{pre:!0},[s._v("可选链操作符( ?. )")]),s._v("允许读取位于连接对象链深处的属性的值，而不必明确验证链中的每个引用是否有效。"),a("code",{pre:!0},[s._v("?.")]),s._v(" 操作符的功能类似于 "),a("code",{pre:!0},[s._v(".")]),s._v("链式操作符，不同之处在于，在引用为空("),a("code",{pre:!0},[s._v("nullish")]),s._v(" ) ("),a("code",{pre:!0},[s._v("null")]),s._v(" 或者 "),a("code",{pre:!0},[s._v("undefined")]),s._v(") 的情况下不会引起错误，该表达式短路返回值是"),a("code",{pre:!0},[s._v("undefined")]),s._v("。与函数调用一起使用时，如果给定的函数不存在，则返回 "),a("code",{pre:!0},[s._v("undefined")]),s._v("。")]),a("p",[s._v("当尝试访问可能不存在的对象属性时，可选链操作符将会使表达式更短、更简明。在探索一个对象的内容时，如果不能确定哪些属性必定存在，可选链操作符也是很有帮助的。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" adventurer = {\n  "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("name")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'Alice'")]),s._v(",\n  "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("cat")]),s._v(": {\n    "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("name")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'Dinah'")]),s._v("\n  }\n}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" dogName = adventurer."),a("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("dog")]),s._v("?."),a("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("name")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// expected output: undefined")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("console")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("log")]),s._v("(dogName) "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// undefined")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// expected output: undefined")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("console")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("log")]),s._v("(adventurer."),a("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("someNonExistentMethod")]),s._v("?.()) "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// undefined")]),s._v("\n")])]),a("h3",[s._v("语法")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[s._v("obj?."),a("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("prop")]),s._v("\nobj?.[expr]\narr?.[index]\nfunc?.(args)\n")])]),a("h3",[s._v("描述")]),a("p",[s._v("通过连接的对象的引用或函数可能是"),a("code",{pre:!0},[s._v("undefined")]),s._v("或"),a("code",{pre:!0},[s._v("null")]),s._v("时，可选链操作符提供了一种方法来简化被连接对象的值访问。")]),a("p",[s._v("比如，思考一个存在嵌套结构的对象"),a("code",{pre:!0},[s._v("obj")]),s._v("。不使用"),a("code",{pre:!0},[s._v("可选链")]),s._v("的话，查找一个深度嵌套的子属性时，需要验证之间的引用，例如：")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" nestedProp = obj."),a("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("first")]),s._v(" && obj."),a("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("first")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("second")]),s._v("\n")])]),a("p",[s._v("为了避免报错，在访问"),a("code",{pre:!0},[s._v("obj.first.second")]),s._v("之前，要保证"),a("code",{pre:!0},[s._v("obj.first")]),s._v("的值既不是"),a("code",{pre:!0},[s._v("null")]),s._v("，也不是 "),a("code",{pre:!0},[s._v("undefined")]),s._v("。如果只是直接访问 "),a("code",{pre:!0},[s._v("obj.first.second")]),s._v("，而不对 "),a("code",{pre:!0},[s._v("obj.first")]),s._v(" 进行校验，则有可能抛出错误。")]),a("p",[s._v("有了"),a("code",{pre:!0},[s._v("可选链操作符（?.）")]),s._v("，在访问 "),a("code",{pre:!0},[s._v("obj.first.second")]),s._v(" 之前，不再需要明确地校验 "),a("code",{pre:!0},[s._v("obj.first")]),s._v(" 的状态，再并用短路计算获取最终结果：")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" nestedProp = obj."),a("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("first")]),s._v("?."),a("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("second")]),s._v("\n")])]),a("p",[s._v("通过使用 "),a("code",{pre:!0},[s._v("?.")]),s._v(" 操作符取代 "),a("code",{pre:!0},[s._v(".")]),s._v(" 操作符，JavaScript 会在尝试访问"),a("code",{pre:!0},[s._v("obj.first.second")]),s._v(" 之前，先隐式地检查并确定 "),a("code",{pre:!0},[s._v("obj.first")]),s._v(" 既不是 "),a("code",{pre:!0},[s._v("null")]),s._v(" 也不是 "),a("code",{pre:!0},[s._v("undefined")]),s._v("。如果"),a("code",{pre:!0},[s._v("obj.first")]),s._v("是"),a("code",{pre:!0},[s._v("null")]),s._v("或者"),a("code",{pre:!0},[s._v("undefined")]),s._v("，表达式将会短路计算直接返回 "),a("code",{pre:!0},[s._v("undefined")]),s._v("。")]),a("p",[s._v("这等价于以下表达式，但实际上没有创建临时变量：")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" temp = obj."),a("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("first")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" nestedProp = temp === "),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("null")]),s._v(" || temp === "),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("undefined")]),s._v(" ? "),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("undefined")]),s._v(" : temp."),a("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("second")]),s._v("\n")])]),a("h3",[s._v("可选链与函数调用")]),a("p",[s._v("当尝试调用一个可能不存在的方法时也可以使用可选链。这将是很有帮助的，比如，当使用一个 API 的方法可能不可用时，要么因为实现的版本问题要么因为当前用户的设备不支持该功能。")]),a("p",[s._v("函数调用时如果被调用的方法不存在，使用可选链可以使表达式自动返回"),a("code",{pre:!0},[s._v("undefined")]),s._v("而不是抛出一个异常。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" result = someInterface."),a("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("customMethod")]),s._v("?.()\n")])]),a("blockquote",[a("p",[s._v("注意: 如果存在一个属性名且不是函数, 使用 ?. 仍然会产生一个 TypeError 异常 (x.y is not a function).")])]),a("h4",[s._v("处理可选的回调函数或者事件处理器")]),a("p",[s._v("如果使用"),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment"}},[s._v("解构赋值")]),s._v("来解构的一个对象的回调函数或 fetch 方法，你可能得到不能当做函数直接调用的不存在的值，除非你已经校验了他们的存在性。使用?.的你可以忽略这些额外的校验:")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//  ES2019的写法")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("doSomething")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("onContent, onError")]),s._v(") {\n  "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("try")]),s._v(" {\n    "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// ... do something with the data")]),s._v("\n  } "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("catch")]),s._v(" (err) {\n    "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" (onError) {\n      "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 校验onError是否真的存在")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("onError")]),s._v("(err."),a("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("message")]),s._v(")\n    }\n  }\n}\n")])]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// ES2020的写法 使用可选链进行函数调用")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("doSomething")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("onContent, onError")]),s._v(") {\n  "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("try")]),s._v(" {\n    "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// ... do something with the data")]),s._v("\n  } "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("catch")]),s._v(" (err) {\n    onError?.(err."),a("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("message")]),s._v(") "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 如果onError是undefined也不会有异常")]),s._v("\n  }\n}\n")])]),a("h3",[s._v("可选链和表达式")]),a("p",[s._v("当使用"),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Property_Accessors#%E6%96%B9%E6%8B%AC%E5%8F%B7%E8%A1%A8%E7%A4%BA%E6%B3%95"}},[s._v("方括号与属性名")]),s._v("的形式来访问属性时，你也可以使用可选链操作符：")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" nestedProp = obj?.["),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'prop'")]),s._v(" + "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'Name'")]),s._v("]\n")])]),a("h4",[s._v("可选链不能用于赋值")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" object = {}\nobject?."),a("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("property")]),s._v(" = "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// Uncaught SyntaxError: Invalid left-hand side in assignment")]),s._v("\n")])]),a("h4",[s._v("可选链访问数组元素")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" arrayItem = arr?.["),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("42")]),s._v("]\n")])]),a("h3",[s._v("例子")]),a("h4",[s._v("基本例子")]),a("p",[s._v("如下的例子在一个不含 "),a("code",{pre:!0},[s._v("bar")]),s._v(" 成员的 Map 中查找"),a("code",{pre:!0},[s._v("bar")]),s._v("成员的"),a("code",{pre:!0},[s._v("name")]),s._v("属性，因此结果是 "),a("code",{pre:!0},[s._v("undefined")]),s._v("。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" myMap = "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Map")]),s._v("()\nmyMap."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("set")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'foo'")]),s._v(", { "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("name")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'baz'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("desc")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'inga'")]),s._v(" })\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" nameBar = myMap."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("get")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'bar'")]),s._v(")?."),a("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("name")]),s._v("\n")])]),a("h4",[s._v("短路计算")]),a("p",[s._v("当在表达式中使用可选链时，如果左操作数是"),a("code",{pre:!0},[s._v("null")]),s._v("或"),a("code",{pre:!0},[s._v("undefined")]),s._v("，表达式将不会被计算，例如：")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" potentiallyNullObj = "),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("null")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" x = "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" prop = potentiallyNullObj?.[x++]\n\n"),a("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("console")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("log")]),s._v("(x) "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// x 将不会被递增，依旧输出 0")]),s._v("\n")])]),a("h4",[s._v("连用可选链操作符")]),a("p",[s._v("可以连续使用可选链读取多层嵌套结构：")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" customer = {\n  "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("name")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'Carl'")]),s._v(",\n  "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("details")]),s._v(": {\n    "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("age")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("82")]),s._v(",\n    "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("location")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'Paradise Falls'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// details 的 address 属性未有定义")]),s._v("\n  }\n}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" customerCity = customer."),a("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("details")]),s._v("?."),a("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("address")]),s._v("?."),a("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("city")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// … 可选链也可以和函数调用一起使用")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" duration = vacations."),a("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("trip")]),s._v("?."),a("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("getTime")]),s._v("?.()\n")])]),a("h4",[s._v("使用空值合并操作符")]),a("p",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Nullish_Coalescing_Operator"}},[s._v("空值合并操作符")]),s._v("可以在使用可选链时设置一个默认值：")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" customer = {\n  "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("name")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'Carl'")]),s._v(",\n  "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("details")]),s._v(": { "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("age")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("82")]),s._v(" }\n}\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" customerCity = customer?."),a("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("city")]),s._v(" ?? "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'暗之城'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("console")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("log")]),s._v("(customerCity) "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// “暗之城”")]),s._v("\n")])]),a("h2",[s._v("空值合并操作符")]),a("p",[a("code",{pre:!0},[s._v("空值合并操作符（??）")]),s._v("是一个逻辑操作符，当左侧的操作数为 null 或者 undefined 时，返回其右侧操作数，否则返回左侧操作数。")]),a("p",[s._v("与"),a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Logical_Operators#Logical_OR_2"}},[s._v("逻辑或操作符（"),a("code",{pre:!0},[s._v("||")]),s._v("）")]),s._v("不同，逻辑或操作符会在左侧操作数为"),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Glossary/Falsy"}},[s._v("假值")]),s._v("时返回右侧操作数。也就是说，如果使用 "),a("code",{pre:!0},[s._v("||")]),s._v(" 来为某些变量设置默认值，可能会遇到意料之外的行为。比如为假值（例如，"),a("code",{pre:!0},[s._v("''")]),s._v(" 或 "),a("code",{pre:!0},[s._v("0")]),s._v("）时。见下面的例子。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" foo = "),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("null")]),s._v(" ?? "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'default string'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('// expected output: "default string"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("console")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("log")]),s._v("(foo) "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('// "default string"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" baz = "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(" ?? "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("42")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// expected output: 0")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("console")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("log")]),s._v("(baz) "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 0")]),s._v("\n")])]),a("h3",[s._v("语法")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[s._v("leftExpr ?? rightExpr\n")])]),a("h3",[s._v("使用空值合并操作符")]),a("p",[s._v("在这个例子中，我们使用空值合并操作符为常量提供默认值，保证常量不为 "),a("code",{pre:!0},[s._v("null")]),s._v(" 或者 "),a("code",{pre:!0},[s._v("undefined")]),s._v("。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" nullValue = "),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("null")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" emptyText = "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("''")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('// 空字符串，是一个假值，Boolean("") === false')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" someNumber = "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("42")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" valA = nullValue ?? "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'valA 的默认值'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" valB = emptyText ?? "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'valB 的默认值'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" valC = someNumber ?? "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("console")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("log")]),s._v("(valA) "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('// "valA 的默认值"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("console")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("log")]),s._v("(valB) "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('// ""（空字符串虽然是假值，但不是 null 或者 undefined）')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("console")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("log")]),s._v("(valC) "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 42")]),s._v("\n")])]),a("h3",[s._v("为变量赋默认值")]),a("p",[s._v("以前，如果想为一个变量赋默认值，通常的做法是使用逻辑或操作符（"),a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Logical_Operators#Logical_OR_2"}},[s._v("||")]),s._v("）：")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" foo\n\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//  foo is never assigned any value so it is still undefined")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" someDummyText = foo || "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'Hello!'")]),s._v("\n")])]),a("p",[s._v("然而，由于 "),a("code",{pre:!0},[s._v("||")]),s._v(" 是一个布尔逻辑运算符，左侧的操作数会被强制转换成布尔值用于求值。任何假值（"),a("code",{pre:!0},[s._v("0")]),s._v("， "),a("code",{pre:!0},[s._v("''")]),s._v("， "),a("code",{pre:!0},[s._v("NaN")]),s._v("， "),a("code",{pre:!0},[s._v("null")]),s._v("， "),a("code",{pre:!0},[s._v("undefined")]),s._v("）都不会被返回。这导致如果你使用"),a("code",{pre:!0},[s._v("0")]),s._v("，"),a("code",{pre:!0},[s._v("''")]),s._v("或"),a("code",{pre:!0},[s._v("NaN")]),s._v("作为有效值，就会出现不可预料的后果。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" count = "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" text = "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("''")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" qty = count || "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("42")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" message = text || "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'hi!'")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("console")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("log")]),s._v("(qty) "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 42，而不是 0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("console")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("log")]),s._v("(message) "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('// "hi!"，而不是 ""')]),s._v("\n")])]),a("p",[s._v("空值合并操作符可以避免这种陷阱，其只在第一个操作数为"),a("code",{pre:!0},[s._v("null")]),s._v(" 或 "),a("code",{pre:!0},[s._v("undefined")]),s._v(" 时（而不是其它假值）返回第二个操作数：")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" myText = "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("''")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// An empty string (which is also a falsy value)")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" notFalsyText = myText || "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'Hello world'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("console")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("log")]),s._v("(notFalsyText) "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// Hello world")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" preservingFalsy = myText ?? "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'Hi neighborhood'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("console")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("log")]),s._v("(preservingFalsy) "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// '' (as myText is neither undefined nor null)")]),s._v("\n")])]),a("h3",[s._v("短路")]),a("p",[s._v("与 OR 和 AND 逻辑操作符相似，当左表达式不为 "),a("code",{pre:!0},[s._v("null")]),s._v(" 或 "),a("code",{pre:!0},[s._v("undefined")]),s._v(" 时，不会对右表达式进行求值。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("A")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n  "),a("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("console")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("log")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'函数 A 被调用了'")]),s._v(")\n  "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("undefined")]),s._v("\n}\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("B")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n  "),a("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("console")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("log")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'函数 B 被调用了'")]),s._v(")\n  "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("false")]),s._v("\n}\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("C")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n  "),a("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("console")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("log")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'函数 C 被调用了'")]),s._v(")\n  "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'foo'")]),s._v("\n}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("console")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("log")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("A")]),s._v("() ?? "),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("C")]),s._v("())\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('// 依次打印 "函数 A 被调用了"、"函数 C 被调用了"、"foo"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// A() 返回了 undefined，所以操作符两边的表达式都被执行了")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("console")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("log")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("B")]),s._v("() ?? "),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("C")]),s._v("())\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('// 依次打印 "函数 B 被调用了"、"false"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// B() 返回了 false（既不是 null 也不是 undefined）")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 所以右侧表达式没有被执行")]),s._v("\n")])]),a("h3",[s._v("不能与 AND 或 OR 操作符共用")]),a("p",[s._v("将 "),a("code",{pre:!0},[s._v("??")]),s._v(" 直接与 AND（"),a("code",{pre:!0},[s._v("&&")]),s._v("）和 OR（"),a("code",{pre:!0},[s._v("||")]),s._v("）操作符组合使用是不可取的。（译者注：应当是因为空值合并操作符和其他逻辑操作符之间的运算优先级/运算顺序是未定义的）这种情况下会抛出 SyntaxError 。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// bad")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("null")]),s._v(" || "),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("undefined")]),s._v(" ?? "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"foo"')]),s._v("; "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 抛出 SyntaxError")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("true")]),s._v(" || "),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("undefined")]),s._v(" ?? "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"foo"')]),s._v("; "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 抛出 SyntaxError")]),s._v("\n")])]),a("p",[s._v("但是，如果使用括号来显式表明运算优先级，是没有问题的：")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// good")]),s._v("\n;("),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("null")]),s._v(" || "),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("undefined")]),s._v(") ?? "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'foo'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('// 返回 "foo"')]),s._v("\n")])]),a("h3",[s._v("与可选链式操作符（?.）的关系")]),a("p",[s._v("空值合并操作符针对 "),a("code",{pre:!0},[s._v("undefined")]),s._v(" 与 "),a("code",{pre:!0},[s._v("null")]),s._v(" 这两个值，"),a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Optional_chaining"}},[s._v("可选链式操作符（?.）")]),s._v(" 也是如此。在这访问属性可能为 "),a("code",{pre:!0},[s._v("undefined")]),s._v(" 与 "),a("code",{pre:!0},[s._v("null")]),s._v(" 的对象时，可选链式操作符非常有用。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" foo = { "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("someFooProp")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'hi'")]),s._v(" }\n\n"),a("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("console")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("log")]),s._v("(foo."),a("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("someFooProp")]),s._v("?."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("toUpperCase")]),s._v("()) "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('// "HI"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("console")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("log")]),s._v("(foo."),a("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("someBarProp")]),s._v("?."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("toUpperCase")]),s._v("()) "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// undefined")]),s._v("\n")])]),a("p",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators"}},[s._v("表达式和运算符分类·MDN")])])])])])}],!1,null,null,null);e.default=t.exports}}]);