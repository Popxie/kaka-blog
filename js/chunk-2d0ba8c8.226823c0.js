(window.webpackJsonp=window.webpackJsonp||[]).push([["chunk-2d0ba8c8"],{"384a":function(s,t,a){"use strict";a.r(t);var n=a("2877"),r=Object(n.a)({},(function(){var s=this;s.$createElement;return s._self._c,s._m(0)}),[function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",[a("html",[a("head"),a("body",[a("h1",[s._v("02 运行多个 npm script 的各种姿势")]),a("p",[s._v("前端项目通常会包括多个 "),a("code",{pre:!0},[s._v("npm script")]),s._v("，对多个命令进行编排是很自然的需求，有时候需要将多个命令串行，即脚本遵循严格的执行顺序；有时候则需要让它们并行来提高速度，比如不相互阻塞的 "),a("code",{pre:!0},[s._v("npm script")]),s._v("。社区中也有比 npm 内置的多命令运行机制更好用的解决方案："),a("code",{pre:!0},[s._v("npm-run-all")]),s._v("。")]),a("h2",[s._v("哪来那么多命令？")]),a("p",[s._v("通常来说，前端项目会包含 "),a("code",{pre:!0},[s._v("js")]),s._v("、"),a("code",{pre:!0},[s._v("css")]),s._v("、"),a("code",{pre:!0},[s._v("less")]),s._v("、"),a("code",{pre:!0},[s._v("scss")]),s._v("、"),a("code",{pre:!0},[s._v("json")]),s._v("、"),a("code",{pre:!0},[s._v("markdown")]),s._v(" 等格式的文件，为保障代码质量，给不同的代码添加检查是很有必要的，代码检查不仅保障代码没有低级的语法错误，还可确保代码都遵守社区的最佳实践和一致的编码风格，在团队协作中尤其有用，即使是个人项目，加上代码检查，也会提高你的效率和质量。")]),a("p",[s._v("我通常会给前端项目加上下面 4 种代码检查：")]),a("ul",[a("li",[a("a",{attrs:{href:"https://eslint.org"}},[s._v("eslint")]),s._v("，可定制的 "),a("code",{pre:!0},[s._v("js")]),s._v(" 代码检查，1.1 中有详细的配置步骤；")]),a("li",[a("a",{attrs:{href:"https://stylelint.io"}},[s._v("stylelint")]),s._v("，可定制的样式文件检查，支持 "),a("code",{pre:!0},[s._v("css")]),s._v("、"),a("code",{pre:!0},[s._v("less")]),s._v("、"),a("code",{pre:!0},[s._v("scss")]),s._v("；")]),a("li",[a("a",{attrs:{href:"https://github.com/zaach/jsonlint"}},[s._v("jsonlint")]),s._v("，"),a("code",{pre:!0},[s._v("json")]),s._v(" 文件语法检查，踩过坑的同学会清楚，"),a("code",{pre:!0},[s._v("json")]),s._v(" 文件语法错误会知道导致各种失败；")]),a("li",[a("a",{attrs:{href:"https://github.com/igorshubovych/markdownlint-cli"}},[s._v("markdownlint-cli")]),s._v("，"),a("code",{pre:!0},[s._v("Markdown")]),s._v(" 文件最佳实践检查，个人偏好；")])]),a("p",[s._v("需要注意的是，html 代码也应该检查，但是工具支持薄弱，就略过不表。此外，为代码添加必要的单元测试也是质量保障的重要手段，常用的单测技术栈是：")]),a("ul",[a("li",[a("a",{attrs:{href:"https://mochajs.org"}},[s._v("mocha")]),s._v("，测试用例组织，测试用例运行和结果收集的框架；")]),a("li",[a("a",{attrs:{href:"https://www.chaijs.com/"}},[s._v("chai")]),s._v("，测试断言库，必要的时候可以结合 "),a("code",{pre:!0},[s._v("sinon")]),s._v(" 使用；")])]),a("blockquote",[a("p",[s._v("TIP#4：测试工具如 "),a("a",{attrs:{href:"http://www.node-tap.org"}},[s._v("tap")]),s._v("、"),a("a",{attrs:{href:"https://github.com/avajs/ava"}},[s._v("ava")]),s._v(" 也都提供了命令行接口，能很好的集成到 "),a("code",{pre:!0},[s._v("npm script")]),s._v(" 中，原理是相通的。")])]),a("p",[s._v("包含了基本的代码检查、单元测试命令的 "),a("code",{pre:!0},[s._v("package.json")]),s._v(" 如下：")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-json"}},[a("span",{pre:!0,attrs:{class:"hljs-punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v('"name"')]),a("span",{pre:!0,attrs:{class:"hljs-punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"hello-npm-script"')]),a("span",{pre:!0,attrs:{class:"hljs-punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v('"version"')]),a("span",{pre:!0,attrs:{class:"hljs-punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"0.1.0"')]),a("span",{pre:!0,attrs:{class:"hljs-punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v('"main"')]),a("span",{pre:!0,attrs:{class:"hljs-punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"index.js"')]),a("span",{pre:!0,attrs:{class:"hljs-punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v('"scripts"')]),a("span",{pre:!0,attrs:{class:"hljs-punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v('"lint:js"')]),a("span",{pre:!0,attrs:{class:"hljs-punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"eslint *.js"')]),a("span",{pre:!0,attrs:{class:"hljs-punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v('"lint:css"')]),a("span",{pre:!0,attrs:{class:"hljs-punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"stylelint *.less"')]),a("span",{pre:!0,attrs:{class:"hljs-punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v('"lint:json"')]),a("span",{pre:!0,attrs:{class:"hljs-punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"jsonlint --quiet *.json"')]),a("span",{pre:!0,attrs:{class:"hljs-punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v('"lint:markdown"')]),a("span",{pre:!0,attrs:{class:"hljs-punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"markdownlint --config .markdownlint.json *.md"')]),a("span",{pre:!0,attrs:{class:"hljs-punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v('"test"')]),a("span",{pre:!0,attrs:{class:"hljs-punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"mocha tests/"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"hljs-punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"hljs-punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v('"devDependencies"')]),a("span",{pre:!0,attrs:{class:"hljs-punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v('"chai"')]),a("span",{pre:!0,attrs:{class:"hljs-punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"^4.1.2"')]),a("span",{pre:!0,attrs:{class:"hljs-punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v('"eslint"')]),a("span",{pre:!0,attrs:{class:"hljs-punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"^4.11.0"')]),a("span",{pre:!0,attrs:{class:"hljs-punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v('"jsonlint"')]),a("span",{pre:!0,attrs:{class:"hljs-punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"^1.6.2"')]),a("span",{pre:!0,attrs:{class:"hljs-punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v('"markdownlint-cli"')]),a("span",{pre:!0,attrs:{class:"hljs-punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"^0.5.0"')]),a("span",{pre:!0,attrs:{class:"hljs-punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v('"mocha"')]),a("span",{pre:!0,attrs:{class:"hljs-punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"^4.0.1"')]),a("span",{pre:!0,attrs:{class:"hljs-punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v('"stylelint"')]),a("span",{pre:!0,attrs:{class:"hljs-punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"^8.2.0"')]),a("span",{pre:!0,attrs:{class:"hljs-punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v('"stylelint-config-standard"')]),a("span",{pre:!0,attrs:{class:"hljs-punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"^17.0.0"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"hljs-punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-punctuation"}},[s._v("}")]),s._v("\n")])]),a("h2",[s._v("让多个 npm script 串行？")]),a("p",[s._v("在我们运行测试之前确保我们的代码都通过代码检查会是比较不错的实践，这也是让多个 "),a("code",{pre:!0},[s._v("npm script")]),s._v(" 串行的典型用例，实现方式也比较简单，只需要用 "),a("code",{pre:!0},[s._v("&&")]),s._v(" 符号把多条 "),a("code",{pre:!0},[s._v("npm script")]),s._v(" 按先后顺序串起来即可，具体到我们的项目，修改如下图所示：")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-bash"}},[s._v("diff --git a/package.json b/package.json\nindex c904250..023d71e 100644\n--- a/package.json\n+++ b/package.json\n@@ -8,7 +8,7 @@\n-    "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"test"')]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"mocha tests/"')]),s._v("\n+    "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"test"')]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"npm run lint:js && npm run lint:css && npm run lint:json && npm run lint:markdown && mocha tests/"')]),s._v("\n  },\n")])]),a("p",[s._v("然后直接执行 "),a("code",{pre:!0},[s._v("npm test")]),s._v(" 或 "),a("code",{pre:!0},[s._v("npm t")]),s._v("，从输出可以看到子命令的执行顺序是严格按照我们在 "),a("code",{pre:!0},[s._v("scripts")]),s._v(" 中声明的先后顺序来的：")]),a("p",[a("code",{pre:!0},[s._v("eslint ==> stylelint ==> jsonlint ==> markdownlint ==> mocha")])]),a("p",[a("img",{attrs:{src:"https://user-images.githubusercontent.com/24952644/130343965-85326fda-f5cb-4378-b70d-136991918cba.png",alt:"001"}})]),a("p",[s._v("需要注意的是，串行执行的时候如果前序命令失败（通常进程退出码非 0），后续全部命令都会终止，我们可以尝试在 "),a("code",{pre:!0},[s._v("index.js")]),s._v(" 中引入错误（删掉行末的分号）：")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[s._v("diff --git a/index."),a("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("js")]),s._v(" b/index."),a("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("js")]),s._v("\nindex ab8bd0e.."),a("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("b817ea4")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("100644")]),s._v("\n--- a/index."),a("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("js")]),s._v("\n+++ b/index."),a("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("js")]),s._v("\n@@ -"),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("4")]),s._v(","),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("7")]),s._v(" +"),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("4")]),s._v(","),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("7")]),s._v(" @@ "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("add")]),s._v(" = ("),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("a, b")]),s._v(") => {\n   }\n\n   "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Na")]),s._v("N;\n-};\n+}\n\n "),a("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("module")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("exports")]),s._v(" = { add  };\n")])]),a("p",[s._v("然后重新运行 "),a("code",{pre:!0},[s._v("npm t")]),s._v("，结果如下，"),a("code",{pre:!0},[s._v("npm run lint:js")]),s._v(" 失败之后，后续命令都没有执行：")]),a("p",[a("img",{attrs:{src:"https://user-images.githubusercontent.com/24952644/130344020-766922a4-96c0-4572-bba9-c48e9c0ee985.png",alt:"002"}})]),a("h2",[s._v("让多个 npm script 并行？")]),a("p",[s._v("在严格串行的情况下，我们必须要确保代码中没有编码规范问题才能运行测试，在某些时候可能并不是我们想要的，因为我们真正需要的是，代码变更时同时给出测试结果和测试运行结果。这就需要把子命令的运行从串行改成并行，实现方式更简单，把连接多条命令的 "),a("code",{pre:!0},[s._v("&&")]),s._v(" 符号替换成 "),a("code",{pre:!0},[s._v("&")]),s._v(" 即可。")]),a("p",[s._v("代码变更如下：")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-bash"}},[s._v("diff --git a/package.json b/package.json\nindex 023d71e..2d9bd6f 100644\n--- a/package.json\n+++ b/package.json\n@@ -8,7 +8,7 @@\n-    "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"test"')]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"npm run lint:js && npm run lint:css && npm run lint:json && npm run lint:markdown && mocha tests/"')]),s._v("\n+    "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"test"')]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"npm run lint:js & npm run lint:css & npm run lint:json & npm run lint:markdown & mocha tests/"')]),s._v("\n  }\n")])]),a("p",[s._v("重新运行 "),a("code",{pre:!0},[s._v("npm t")]),s._v("，我们得到如下结果：")]),a("p",[a("img",{attrs:{src:"https://user-images.githubusercontent.com/24952644/130343991-df08851e-e553-41ed-94c9-b6351e06745c.png",alt:"003"}})]),a("p",[s._v("细心的同学可能已经发现上图中哪里不对，"),a("code",{pre:!0},[s._v("npm run lint:js")]),s._v(" 的结果在进程退出之后才输出，如果你自己运行，不一定能稳定复现这个问题，但 "),a("code",{pre:!0},[s._v("npm")]),s._v(" 内置支持的多条命令并行跟 "),a("code",{pre:!0},[s._v("js")]),s._v(" 里面同时发起多个异步请求非常类似，它只负责触发多条命令，而不管结果的收集，如果并行的命令执行时间差异非常大，上面的问题就会稳定复现。怎么解决这个问题呢？")]),a("p",[s._v("答案也很简单，在命令的增加 "),a("code",{pre:!0},[s._v("& wait")]),s._v(" 即可，这样我们的 "),a("code",{pre:!0},[s._v("test")]),s._v(" 命令长这样：")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-bash"}},[s._v("npm run lint:js & npm run lint:css & npm run lint:json & npm run lint:markdown & mocha tests/ & "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("wait")]),s._v("\n")])]),a("p",[s._v("加上 wait 的额外好处是，如果我们在任何子命令中启动了长时间运行的进程，比如启用了 "),a("code",{pre:!0},[s._v("mocha")]),s._v(" 的 "),a("code",{pre:!0},[s._v("--watch")]),s._v(" 配置，可以使用 "),a("code",{pre:!0},[s._v("ctrl + c")]),s._v(" 来结束进程，如果没加的话，你就没办法直接结束启动到后台的进程。")]),a("h2",[s._v("有没有更好的管理方式？")]),a("p",[s._v("有强迫症的同学可能会觉得像上面这样用原生方式来运行多条命令很臃肿，幸运的是，我们可以使用 "),a("code",{pre:!0},[s._v("npm-run-all")]),s._v(" 实现更轻量和简洁的多命令运行。")]),a("p",[s._v("用如下命令将 "),a("code",{pre:!0},[s._v("npm-run-all")]),s._v(" 添加到项目依赖中：")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-bash"}},[s._v("npm i npm-run-all -D\n")])]),a("p",[s._v("然后修改 package.json 实现多命令的串行执行：")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-bash"}},[s._v("diff --git a/package.json b/package.json\nindex b3b1272..83974d6 100644\n--- a/package.json\n+++ b/package.json\n@@ -8,7 +8,8 @@\n-    "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"test"')]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"npm run lint:js & npm run lint:css & npm run lint:json & npm run lint:markdown & mocha tests/ & wait"')]),s._v("\n+    "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"mocha"')]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"mocha tests/"')]),s._v(",\n+    "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"test"')]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"npm-run-all lint:js lint:css lint:json lint:markdown mocha"')]),s._v("\n  },\n")])]),a("p",[a("code",{pre:!0},[s._v("npm-run-all")]),s._v(" 还支持通配符匹配分组的 "),a("code",{pre:!0},[s._v("npm script")]),s._v("，上面的脚本可以进一步简化成：")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-bash"}},[s._v("diff --git a/package.json b/package.json\nindex 83974d6..7b327cd 100644\n--- a/package.json\n+++ b/package.json\n@@ -9,7 +9,7 @@\n-    "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"test"')]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"npm-run-all lint:js lint:css lint:json lint:markdown mocha"')]),s._v("\n+    "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"test"')]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"npm-run-all lint:* mocha"')]),s._v("\n  },\n")])]),a("p",[s._v("如何让多个 "),a("code",{pre:!0},[s._v("npm script")]),s._v(" 并行执行？也很简单：")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-bash"}},[s._v("diff --git a/package.json b/package.json\nindex 7b327cd..c32da1c 100644\n--- a/package.json\n+++ b/package.json\n@@ -9,7 +9,7 @@\n-    "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"test"')]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"npm-run-all lint:* mocha"')]),s._v("\n+    "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"test"')]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"npm-run-all --parallel lint:* mocha"')]),s._v("\n  },\n")])]),a("p",[s._v("并行执行的时候，我们并不需要在后面增加 "),a("code",{pre:!0},[s._v("& wait")]),s._v("，因为 "),a("code",{pre:!0},[s._v("npm-run-all")]),s._v(" 已经帮我们做了。")]),a("blockquote",[a("p",[s._v("TIP#5：npm-run-all 还提供了很多配置项支持更复杂的命令编排，比如多个命令并行之后接串行的命令，感兴趣的同学请阅读"),a("a",{attrs:{href:"https://github.com/mysticatea/npm-run-all/blob/HEAD/docs/npm-run-all.md"}},[s._v("文档")]),s._v("，自己玩儿。")])])])])])}],!1,null,null,null);t.default=r.exports}}]);