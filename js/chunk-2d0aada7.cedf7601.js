(window.webpackJsonp=window.webpackJsonp||[]).push([["chunk-2d0aada7"],{"137f":function(s,a,r){"use strict";r.r(a);var t=r("2877"),e=Object(t.a)({},(function(){var s=this;s.$createElement;return s._self._c,s._m(0)}),[function(){var s=this,a=s.$createElement,r=s._self._c||a;return r("section",[r("html",[r("head"),r("body",[r("h1",[s._v("Class 的继承")]),r("h2",[s._v("简介")]),r("p",[s._v("Class 可以通过"),r("code",{pre:!0},[s._v("extends")]),s._v("关键字实现继承，这比 ES5 的通过修改原型链实现继承，要清晰和方便很多。")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Point")]),s._v(" {\n}\n\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("ColorPoint")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("extends")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_ inherited__"}},[s._v("Point")]),s._v(" {\n}\n")])]),r("p",[s._v("上面代码定义了一个"),r("code",{pre:!0},[s._v("ColorPoint")]),s._v("类，该类通过"),r("code",{pre:!0},[s._v("extends")]),s._v("关键字，继承了"),r("code",{pre:!0},[s._v("Point")]),s._v("类的所有属性和方法。但是由于没有部署任何代码，所以这两个类完全一样，等于复制了一个"),r("code",{pre:!0},[s._v("Point")]),s._v("类。下面，我们在"),r("code",{pre:!0},[s._v("ColorPoint")]),s._v("内部加上代码。")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("ColorPoint")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("extends")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_ inherited__"}},[s._v("Point")]),s._v(" {\n  "),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("constructor")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("x, y, color")]),s._v(") {\n    "),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("super")]),s._v("(x, y); "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 调用父类的constructor(x, y)")]),s._v("\n    "),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("color")]),s._v(" = color;\n  }\n\n  "),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("toString")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("color")]),s._v(" + "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("' '")]),s._v(" + "),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("super")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("toString")]),s._v("(); "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 调用父类的toString()")]),s._v("\n  }\n}\n")])]),r("p",[s._v("上面代码中，"),r("code",{pre:!0},[s._v("constructor")]),s._v("方法和"),r("code",{pre:!0},[s._v("toString")]),s._v("方法之中，都出现了"),r("code",{pre:!0},[s._v("super")]),s._v("关键字，它在这里表示父类的构造函数，用来新建父类的"),r("code",{pre:!0},[s._v("this")]),s._v("对象。")]),r("p",[s._v("子类必须在"),r("code",{pre:!0},[s._v("constructor")]),s._v("方法中调用"),r("code",{pre:!0},[s._v("super")]),s._v("方法，否则新建实例时会报错。这是因为子类自己的"),r("code",{pre:!0},[s._v("this")]),s._v("对象，必须先通过父类的构造函数完成塑造，得到与父类同样的实例属性和方法，然后再对其进行加工，加上子类自己的实例属性和方法。如果不调用"),r("code",{pre:!0},[s._v("super")]),s._v("方法，子类就得不到"),r("code",{pre:!0},[s._v("this")]),s._v("对象。")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Point")]),s._v(" { "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/* ... */")]),s._v(" }\n\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("ColorPoint")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("extends")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_ inherited__"}},[s._v("Point")]),s._v(" {\n  "),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("constructor")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n  }\n}\n\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" cp = "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("ColorPoint")]),s._v("(); "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// ReferenceError")]),s._v("\n")])]),r("p",[s._v("上面代码中，"),r("code",{pre:!0},[s._v("ColorPoint")]),s._v("继承了父类"),r("code",{pre:!0},[s._v("Point")]),s._v("，但是它的构造函数没有调用"),r("code",{pre:!0},[s._v("super")]),s._v("方法，导致新建实例时报错。")]),r("p",[s._v("ES5 的继承，实质是先创造子类的实例对象"),r("code",{pre:!0},[s._v("this")]),s._v("，然后再将父类的方法添加到"),r("code",{pre:!0},[s._v("this")]),s._v("上面（"),r("code",{pre:!0},[s._v("Parent.apply(this)")]),s._v("）。ES6 的继承机制完全不同，实质是先将父类实例对象的属性和方法，加到"),r("code",{pre:!0},[s._v("this")]),s._v("上面（所以必须先调用"),r("code",{pre:!0},[s._v("super")]),s._v("方法），然后再用子类的构造函数修改"),r("code",{pre:!0},[s._v("this")]),s._v("。")]),r("p",[s._v("如果子类没有定义"),r("code",{pre:!0},[s._v("constructor")]),s._v("方法，这个方法会被默认添加，代码如下。也就是说，不管有没有显式定义，任何一个子类都有"),r("code",{pre:!0},[s._v("constructor")]),s._v("方法。")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("ColorPoint")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("extends")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_ inherited__"}},[s._v("Point")]),s._v(" {\n}\n\n"),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 等同于")]),s._v("\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("ColorPoint")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("extends")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_ inherited__"}},[s._v("Point")]),s._v(" {\n  "),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("constructor")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("...args")]),s._v(") {\n    "),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("super")]),s._v("(...args);\n  }\n}\n")])]),r("p",[s._v("另一个需要注意的地方是，在子类的构造函数中，只有调用"),r("code",{pre:!0},[s._v("super")]),s._v("之后，才可以使用"),r("code",{pre:!0},[s._v("this")]),s._v("关键字，否则会报错。这是因为子类实例的构建，基于父类实例，只有"),r("code",{pre:!0},[s._v("super")]),s._v("方法才能调用父类实例。")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Point")]),s._v(" {\n  "),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("constructor")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("x, y")]),s._v(") {\n    "),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("x")]),s._v(" = x;\n    "),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("y")]),s._v(" = y;\n  }\n}\n\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("ColorPoint")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("extends")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_ inherited__"}},[s._v("Point")]),s._v(" {\n  "),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("constructor")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("x, y, color")]),s._v(") {\n    "),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("color")]),s._v(" = color; "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// ReferenceError")]),s._v("\n    "),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("super")]),s._v("(x, y);\n    "),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("color")]),s._v(" = color; "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 正确")]),s._v("\n  }\n}\n")])]),r("p",[s._v("上面代码中，子类的"),r("code",{pre:!0},[s._v("constructor")]),s._v("方法没有调用"),r("code",{pre:!0},[s._v("super")]),s._v("之前，就使用"),r("code",{pre:!0},[s._v("this")]),s._v("关键字，结果报错，而放在"),r("code",{pre:!0},[s._v("super")]),s._v("方法之后就是正确的。")]),r("p",[s._v("下面是生成子类实例的代码。")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" cp = "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("ColorPoint")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("25")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("8")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'green'")]),s._v(");\n\ncp "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("instanceof")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("ColorPoint")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// true")]),s._v("\ncp "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("instanceof")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Point")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// true")]),s._v("\n")])]),r("p",[s._v("上面代码中，实例对象"),r("code",{pre:!0},[s._v("cp")]),s._v("同时是"),r("code",{pre:!0},[s._v("ColorPoint")]),s._v("和"),r("code",{pre:!0},[s._v("Point")]),s._v("两个类的实例，这与 ES5 的行为完全一致。")]),r("p",[s._v("最后，父类的静态方法，也会被子类继承。")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("A")]),s._v(" {\n  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("hello")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n    "),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("console")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("log")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'hello world'")]),s._v(");\n  }\n}\n\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("B")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("extends")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_ inherited__"}},[s._v("A")]),s._v(" {\n}\n\nB."),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("hello")]),s._v("()  "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// hello world")]),s._v("\n")])]),r("p",[s._v("上面代码中，"),r("code",{pre:!0},[s._v("hello()")]),s._v("是"),r("code",{pre:!0},[s._v("A")]),s._v("类的静态方法，"),r("code",{pre:!0},[s._v("B")]),s._v("继承"),r("code",{pre:!0},[s._v("A")]),s._v("，也继承了"),r("code",{pre:!0},[s._v("A")]),s._v("的静态方法。")]),r("h2",[s._v("Object.getPrototypeOf()")]),r("p",[r("code",{pre:!0},[s._v("Object.getPrototypeOf")]),s._v("方法可以用来从子类上获取父类。")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("getPrototypeOf")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("ColorPoint")]),s._v(") === "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Point")]),s._v("\n"),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// true")]),s._v("\n")])]),r("p",[s._v("因此，可以使用这个方法判断，一个类是否继承了另一个类。")]),r("h2",[s._v("super 关键字")]),r("p",[r("code",{pre:!0},[s._v("super")]),s._v("这个关键字，既可以当作函数使用，也可以当作对象使用。在这两种情况下，它的用法完全不同。")]),r("p",[s._v("第一种情况，"),r("code",{pre:!0},[s._v("super")]),s._v("作为函数调用时，代表父类的构造函数。ES6 要求，子类的构造函数必须执行一次"),r("code",{pre:!0},[s._v("super")]),s._v("函数。")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("A")]),s._v(" {}\n\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("B")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("extends")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_ inherited__"}},[s._v("A")]),s._v(" {\n  "),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("constructor")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n    "),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("super")]),s._v("();\n  }\n}\n")])]),r("p",[s._v("上面代码中，子类"),r("code",{pre:!0},[s._v("B")]),s._v("的构造函数之中的"),r("code",{pre:!0},[s._v("super()")]),s._v("，代表调用父类的构造函数。这是必须的，否则 JavaScript 引擎会报错。")]),r("p",[s._v("注意，"),r("code",{pre:!0},[s._v("super")]),s._v("虽然代表了父类"),r("code",{pre:!0},[s._v("A")]),s._v("的构造函数，但是返回的是子类"),r("code",{pre:!0},[s._v("B")]),s._v("的实例，即"),r("code",{pre:!0},[s._v("super")]),s._v("内部的"),r("code",{pre:!0},[s._v("this")]),s._v("指的是"),r("code",{pre:!0},[s._v("B")]),s._v("的实例，因此"),r("code",{pre:!0},[s._v("super()")]),s._v("在这里相当于"),r("code",{pre:!0},[s._v("A.prototype.constructor.call(this)")]),s._v("。")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("A")]),s._v(" {\n  "),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("constructor")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n    "),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("console")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("log")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("target")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("name")]),s._v(");\n  }\n}\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("B")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("extends")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_ inherited__"}},[s._v("A")]),s._v(" {\n  "),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("constructor")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n    "),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("super")]),s._v("();\n  }\n}\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("A")]),s._v("() "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// A")]),s._v("\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("B")]),s._v("() "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// B")]),s._v("\n")])]),r("p",[s._v("上面代码中，"),r("code",{pre:!0},[s._v("new.target")]),s._v("指向当前正在执行的函数。可以看到，在"),r("code",{pre:!0},[s._v("super()")]),s._v("执行时，它指向的是子类"),r("code",{pre:!0},[s._v("B")]),s._v("的构造函数，而不是父类"),r("code",{pre:!0},[s._v("A")]),s._v("的构造函数。也就是说，"),r("code",{pre:!0},[s._v("super()")]),s._v("内部的"),r("code",{pre:!0},[s._v("this")]),s._v("指向的是"),r("code",{pre:!0},[s._v("B")]),s._v("。")]),r("p",[s._v("作为函数时，"),r("code",{pre:!0},[s._v("super()")]),s._v("只能用在子类的构造函数之中，用在其他地方就会报错。")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("A")]),s._v(" {}\n\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("B")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("extends")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_ inherited__"}},[s._v("A")]),s._v(" {\n  "),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("m")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n    "),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("super")]),s._v("(); "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 报错")]),s._v("\n  }\n}\n")])]),r("p",[s._v("上面代码中，"),r("code",{pre:!0},[s._v("super()")]),s._v("用在"),r("code",{pre:!0},[s._v("B")]),s._v("类的"),r("code",{pre:!0},[s._v("m")]),s._v("方法之中，就会造成语法错误。")]),r("p",[s._v("第二种情况，"),r("code",{pre:!0},[s._v("super")]),s._v("作为对象时，在普通方法中，指向父类的原型对象；在静态方法中，指向父类。")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("A")]),s._v(" {\n  "),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("p")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(";\n  }\n}\n\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("B")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("extends")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_ inherited__"}},[s._v("A")]),s._v(" {\n  "),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("constructor")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n    "),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("super")]),s._v("();\n    "),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("console")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("log")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("super")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("p")]),s._v("()); "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 2")]),s._v("\n  }\n}\n\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" b = "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("B")]),s._v("();\n")])]),r("p",[s._v("上面代码中，子类"),r("code",{pre:!0},[s._v("B")]),s._v("当中的"),r("code",{pre:!0},[s._v("super.p()")]),s._v("，就是将"),r("code",{pre:!0},[s._v("super")]),s._v("当作一个对象使用。这时，"),r("code",{pre:!0},[s._v("super")]),s._v("在普通方法之中，指向"),r("code",{pre:!0},[s._v("A.prototype")]),s._v("，所以"),r("code",{pre:!0},[s._v("super.p()")]),s._v("就相当于"),r("code",{pre:!0},[s._v("A.prototype.p()")]),s._v("。")]),r("p",[s._v("这里需要注意，由于"),r("code",{pre:!0},[s._v("super")]),s._v("指向父类的原型对象，所以定义在父类实例上的方法或属性，是无法通过"),r("code",{pre:!0},[s._v("super")]),s._v("调用的。")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("A")]),s._v(" {\n  "),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("constructor")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n    "),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("p")]),s._v(" = "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(";\n  }\n}\n\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("B")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("extends")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_ inherited__"}},[s._v("A")]),s._v(" {\n  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("get")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("m")]),s._v("() {\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("super")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("p")]),s._v(";\n  }\n}\n\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" b = "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("B")]),s._v("();\nb."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("m")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// undefined")]),s._v("\n")])]),r("p",[s._v("上面代码中，"),r("code",{pre:!0},[s._v("p")]),s._v("是父类"),r("code",{pre:!0},[s._v("A")]),s._v("实例的属性，"),r("code",{pre:!0},[s._v("super.p")]),s._v("就引用不到它。")]),r("p",[s._v("如果属性定义在父类的原型对象上，"),r("code",{pre:!0},[s._v("super")]),s._v("就可以取到。")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("A")]),s._v(" {}\nA."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("prototype")])]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("x")]),s._v(" = "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(";\n\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("B")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("extends")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_ inherited__"}},[s._v("A")]),s._v(" {\n  "),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("constructor")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n    "),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("super")]),s._v("();\n    "),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("console")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("log")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("super")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("x")]),s._v(") "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 2")]),s._v("\n  }\n}\n\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" b = "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("B")]),s._v("();\n")])]),r("p",[s._v("上面代码中，属性"),r("code",{pre:!0},[s._v("x")]),s._v("是定义在"),r("code",{pre:!0},[s._v("A.prototype")]),s._v("上面的，所以"),r("code",{pre:!0},[s._v("super.x")]),s._v("可以取到它的值。")]),r("p",[s._v("ES6 规定，在子类普通方法中通过"),r("code",{pre:!0},[s._v("super")]),s._v("调用父类的方法时，方法内部的"),r("code",{pre:!0},[s._v("this")]),s._v("指向当前的子类实例。")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("A")]),s._v(" {\n  "),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("constructor")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n    "),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("x")]),s._v(" = "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(";\n  }\n  "),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("print")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n    "),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("console")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("log")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("x")]),s._v(");\n  }\n}\n\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("B")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("extends")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_ inherited__"}},[s._v("A")]),s._v(" {\n  "),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("constructor")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n    "),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("super")]),s._v("();\n    "),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("x")]),s._v(" = "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(";\n  }\n  "),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("m")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n    "),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("super")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("print")]),s._v("();\n  }\n}\n\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" b = "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("B")]),s._v("();\nb."),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("m")]),s._v("() "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 2")]),s._v("\n")])]),r("p",[s._v("上面代码中，"),r("code",{pre:!0},[s._v("super.print()")]),s._v("虽然调用的是"),r("code",{pre:!0},[s._v("A.prototype.print()")]),s._v("，但是"),r("code",{pre:!0},[s._v("A.prototype.print()")]),s._v("内部的"),r("code",{pre:!0},[s._v("this")]),s._v("指向子类"),r("code",{pre:!0},[s._v("B")]),s._v("的实例，导致输出的是"),r("code",{pre:!0},[s._v("2")]),s._v("，而不是"),r("code",{pre:!0},[s._v("1")]),s._v("。也就是说，实际上执行的是"),r("code",{pre:!0},[s._v("super.print.call(this)")]),s._v("。")]),r("p",[s._v("由于"),r("code",{pre:!0},[s._v("this")]),s._v("指向子类实例，所以如果通过"),r("code",{pre:!0},[s._v("super")]),s._v("对某个属性赋值，这时"),r("code",{pre:!0},[s._v("super")]),s._v("就是"),r("code",{pre:!0},[s._v("this")]),s._v("，赋值的属性会变成子类实例的属性。")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("A")]),s._v(" {\n  "),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("constructor")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n    "),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("x")]),s._v(" = "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(";\n  }\n}\n\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("B")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("extends")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_ inherited__"}},[s._v("A")]),s._v(" {\n  "),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("constructor")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n    "),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("super")]),s._v("();\n    "),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("x")]),s._v(" = "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(";\n    "),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("super")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("x")]),s._v(" = "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("3")]),s._v(";\n    "),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("console")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("log")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("super")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("x")]),s._v("); "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// undefined")]),s._v("\n    "),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("console")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("log")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("x")]),s._v("); "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 3")]),s._v("\n  }\n}\n\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" b = "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("B")]),s._v("();\n")])]),r("p",[s._v("上面代码中，"),r("code",{pre:!0},[s._v("super.x")]),s._v("赋值为"),r("code",{pre:!0},[s._v("3")]),s._v("，这时等同于对"),r("code",{pre:!0},[s._v("this.x")]),s._v("赋值为"),r("code",{pre:!0},[s._v("3")]),s._v("。而当读取"),r("code",{pre:!0},[s._v("super.x")]),s._v("的时候，读的是"),r("code",{pre:!0},[s._v("A.prototype.x")]),s._v("，所以返回"),r("code",{pre:!0},[s._v("undefined")]),s._v("。")]),r("p",[s._v("如果"),r("code",{pre:!0},[s._v("super")]),s._v("作为对象，用在静态方法之中，这时"),r("code",{pre:!0},[s._v("super")]),s._v("将指向父类，而不是父类的原型对象。")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Parent")]),s._v(" {\n  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("myMethod")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("msg")]),s._v(") {\n    "),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("console")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("log")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'static'")]),s._v(", msg);\n  }\n\n  "),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("myMethod")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("msg")]),s._v(") {\n    "),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("console")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("log")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'instance'")]),s._v(", msg);\n  }\n}\n\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Child")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("extends")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_ inherited__"}},[s._v("Parent")]),s._v(" {\n  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("myMethod")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("msg")]),s._v(") {\n    "),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("super")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("myMethod")]),s._v("(msg);\n  }\n\n  "),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("myMethod")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("msg")]),s._v(") {\n    "),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("super")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("myMethod")]),s._v("(msg);\n  }\n}\n\n"),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Child")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("myMethod")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v("); "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// static 1")]),s._v("\n\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" child = "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Child")]),s._v("();\nchild."),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("myMethod")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v("); "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// instance 2")]),s._v("\n")])]),r("p",[s._v("上面代码中，"),r("code",{pre:!0},[s._v("super")]),s._v("在静态方法之中指向父类，在普通方法之中指向父类的原型对象。")]),r("p",[s._v("另外，在子类的静态方法中通过"),r("code",{pre:!0},[s._v("super")]),s._v("调用父类的方法时，方法内部的"),r("code",{pre:!0},[s._v("this")]),s._v("指向当前的子类，而不是子类的实例。")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("A")]),s._v(" {\n  "),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("constructor")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n    "),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("x")]),s._v(" = "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(";\n  }\n  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("print")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n    "),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("console")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("log")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("x")]),s._v(");\n  }\n}\n\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("B")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("extends")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_ inherited__"}},[s._v("A")]),s._v(" {\n  "),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("constructor")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n    "),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("super")]),s._v("();\n    "),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("x")]),s._v(" = "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(";\n  }\n  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("m")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n    "),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("super")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("print")]),s._v("();\n  }\n}\n\nB."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("x")]),s._v(" = "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("3")]),s._v(";\nB."),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("m")]),s._v("() "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 3")]),s._v("\n")])]),r("p",[s._v("上面代码中，静态方法"),r("code",{pre:!0},[s._v("B.m")]),s._v("里面，"),r("code",{pre:!0},[s._v("super.print")]),s._v("指向父类的静态方法。这个方法里面的"),r("code",{pre:!0},[s._v("this")]),s._v("指向的是"),r("code",{pre:!0},[s._v("B")]),s._v("，而不是"),r("code",{pre:!0},[s._v("B")]),s._v("的实例。")]),r("p",[s._v("注意，使用"),r("code",{pre:!0},[s._v("super")]),s._v("的时候，必须显式指定是作为函数、还是作为对象使用，否则会报错。")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("A")]),s._v(" {}\n\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("B")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("extends")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_ inherited__"}},[s._v("A")]),s._v(" {\n  "),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("constructor")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n    "),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("super")]),s._v("();\n    "),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("console")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("log")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("super")]),s._v("); "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 报错")]),s._v("\n  }\n}\n")])]),r("p",[s._v("上面代码中，"),r("code",{pre:!0},[s._v("console.log(super)")]),s._v("当中的"),r("code",{pre:!0},[s._v("super")]),s._v("，无法看出是作为函数使用，还是作为对象使用，所以 JavaScript 引擎解析代码的时候就会报错。这时，如果能清晰地表明"),r("code",{pre:!0},[s._v("super")]),s._v("的数据类型，就不会报错。")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("A")]),s._v(" {}\n\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("B")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("extends")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_ inherited__"}},[s._v("A")]),s._v(" {\n  "),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("constructor")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n    "),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("super")]),s._v("();\n    "),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("console")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("log")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("super")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("valueOf")]),s._v("() "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("instanceof")]),s._v(" B); "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// true")]),s._v("\n  }\n}\n\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" b = "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("B")]),s._v("();\n")])]),r("p",[s._v("上面代码中，"),r("code",{pre:!0},[s._v("super.valueOf()")]),s._v("表明"),r("code",{pre:!0},[s._v("super")]),s._v("是一个对象，因此就不会报错。同时，由于"),r("code",{pre:!0},[s._v("super")]),s._v("使得"),r("code",{pre:!0},[s._v("this")]),s._v("指向"),r("code",{pre:!0},[s._v("B")]),s._v("的实例，所以"),r("code",{pre:!0},[s._v("super.valueOf()")]),s._v("返回的是一个"),r("code",{pre:!0},[s._v("B")]),s._v("的实例。")]),r("p",[s._v("最后，由于对象总是继承其他对象的，所以可以在任意一个对象中，使用"),r("code",{pre:!0},[s._v("super")]),s._v("关键字。")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" obj = {\n  "),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("toString")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"MyObject: "')]),s._v(" + "),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("super")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("toString")]),s._v("();\n  }\n};\n\nobj."),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("toString")]),s._v("(); "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// MyObject: [object Object]")]),s._v("\n")])]),r("h2",[s._v("类的 prototype 属性和__proto__属性")]),r("p",[s._v("大多数浏览器的 ES5 实现之中，每一个对象都有"),r("code",{pre:!0},[s._v("__proto__")]),s._v("属性，指向对应的构造函数的"),r("code",{pre:!0},[s._v("prototype")]),s._v("属性。Class 作为构造函数的语法糖，同时有"),r("code",{pre:!0},[s._v("prototype")]),s._v("属性和"),r("code",{pre:!0},[s._v("__proto__")]),s._v("属性，因此同时存在两条继承链。")]),r("p",[s._v("（1）子类的"),r("code",{pre:!0},[s._v("__proto__")]),s._v("属性，表示构造函数的继承，总是指向父类。")]),r("p",[s._v("（2）子类"),r("code",{pre:!0},[s._v("prototype")]),s._v("属性的"),r("code",{pre:!0},[s._v("__proto__")]),s._v("属性，表示方法的继承，总是指向父类的"),r("code",{pre:!0},[s._v("prototype")]),s._v("属性。")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("A")]),s._v(" {\n}\n\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("B")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("extends")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_ inherited__"}},[s._v("A")]),s._v(" {\n}\n\nB."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("__proto__")]),s._v(" === A "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// true")]),s._v("\nB."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("prototype")])]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("__proto__")]),s._v(" === A."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("prototype")])]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// true")]),s._v("\n")])]),r("p",[s._v("上面代码中，子类"),r("code",{pre:!0},[s._v("B")]),s._v("的"),r("code",{pre:!0},[s._v("__proto__")]),s._v("属性指向父类"),r("code",{pre:!0},[s._v("A")]),s._v("，子类"),r("code",{pre:!0},[s._v("B")]),s._v("的"),r("code",{pre:!0},[s._v("prototype")]),s._v("属性的"),r("code",{pre:!0},[s._v("__proto__")]),s._v("属性指向父类"),r("code",{pre:!0},[s._v("A")]),s._v("的"),r("code",{pre:!0},[s._v("prototype")]),s._v("属性。")]),r("p",[s._v("这样的结果是因为，类的继承是按照下面的模式实现的。")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("A")]),s._v(" {\n}\n\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("B")]),s._v(" {\n}\n\n"),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// B 的实例继承 A 的实例")]),s._v("\n"),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("setPrototypeOf")]),s._v("(B."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("prototype")])]),s._v(", A."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("prototype")])]),s._v(");\n\n"),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// B 继承 A 的静态属性")]),s._v("\n"),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("setPrototypeOf")]),s._v("(B, A);\n\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" b = "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("B")]),s._v("();\n")])]),r("p",[s._v("《对象的扩展》一章给出过"),r("code",{pre:!0},[s._v("Object.setPrototypeOf")]),s._v("方法的实现。")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("setPrototypeOf")]),s._v(" = "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" ("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("obj, proto")]),s._v(") {\n  obj."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("__proto__")]),s._v(" = proto;\n  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" obj;\n}\n")])]),r("p",[s._v("因此，就得到了上面的结果。")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("setPrototypeOf")]),s._v("(B."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("prototype")])]),s._v(", A."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("prototype")])]),s._v(");\n"),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 等同于")]),s._v("\nB."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("prototype")])]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("__proto__")]),s._v(" = A."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("prototype")])]),s._v(";\n\n"),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("setPrototypeOf")]),s._v("(B, A);\n"),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 等同于")]),s._v("\nB."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("__proto__")]),s._v(" = A;\n")])]),r("p",[s._v("这两条继承链，可以这样理解：作为一个对象，子类（"),r("code",{pre:!0},[s._v("B")]),s._v("）的原型（"),r("code",{pre:!0},[s._v("__proto__")]),s._v("属性）是父类（"),r("code",{pre:!0},[s._v("A")]),s._v("）；作为一个构造函数，子类（"),r("code",{pre:!0},[s._v("B")]),s._v("）的原型对象（"),r("code",{pre:!0},[s._v("prototype")]),s._v("属性）是父类的原型对象（"),r("code",{pre:!0},[s._v("prototype")]),s._v("属性）的实例。")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[s._v("B."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("prototype")])]),s._v(" = "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("create")]),s._v("(A."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("prototype")])]),s._v(");\n"),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 等同于")]),s._v("\nB."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("prototype")])]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("__proto__")]),s._v(" = A."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("prototype")])]),s._v(";\n")])]),r("p",[r("code",{pre:!0},[s._v("extends")]),s._v("关键字后面可以跟多种类型的值。")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("B")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("extends")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_ inherited__"}},[s._v("A")]),s._v(" {\n}\n")])]),r("p",[s._v("上面代码的"),r("code",{pre:!0},[s._v("A")]),s._v("，只要是一个有"),r("code",{pre:!0},[s._v("prototype")]),s._v("属性的函数，就能被"),r("code",{pre:!0},[s._v("B")]),s._v("继承。由于函数都有"),r("code",{pre:!0},[s._v("prototype")]),s._v("属性（除了"),r("code",{pre:!0},[s._v("Function.prototype")]),s._v("函数），因此"),r("code",{pre:!0},[s._v("A")]),s._v("可以是任意函数。")]),r("p",[s._v("下面，讨论两种情况。第一种，子类继承"),r("code",{pre:!0},[s._v("Object")]),s._v("类。")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("A")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("extends")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_ inherited__"}},[s._v("Object")]),s._v(" {\n}\n\nA."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("__proto__")]),s._v(" === "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// true")]),s._v("\nA."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("prototype")])]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("__proto__")]),s._v(" === "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("prototype")])]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// true")]),s._v("\n")])]),r("p",[s._v("这种情况下，"),r("code",{pre:!0},[s._v("A")]),s._v("其实就是构造函数"),r("code",{pre:!0},[s._v("Object")]),s._v("的复制，"),r("code",{pre:!0},[s._v("A")]),s._v("的实例就是"),r("code",{pre:!0},[s._v("Object")]),s._v("的实例。")]),r("p",[s._v("第二种情况，不存在任何继承。")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("A")]),s._v(" {\n}\n\nA."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("__proto__")]),s._v(" === "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Function")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("prototype")])]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// true")]),s._v("\nA."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("prototype")])]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("__proto__")]),s._v(" === "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("prototype")])]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// true")]),s._v("\n")])]),r("p",[s._v("这种情况下，"),r("code",{pre:!0},[s._v("A")]),s._v("作为一个基类（即不存在任何继承），就是一个普通函数，所以直接继承"),r("code",{pre:!0},[s._v("Function.prototype")]),s._v("。但是，"),r("code",{pre:!0},[s._v("A")]),s._v("调用后返回一个空对象（即"),r("code",{pre:!0},[s._v("Object")]),s._v("实例），所以"),r("code",{pre:!0},[s._v("A.prototype.__proto__")]),s._v("指向构造函数（"),r("code",{pre:!0},[s._v("Object")]),s._v("）的"),r("code",{pre:!0},[s._v("prototype")]),s._v("属性。")]),r("h3",[s._v("实例的 __proto__ 属性")]),r("p",[s._v("子类实例的"),r("code",{pre:!0},[s._v("__proto__")]),s._v("属性的"),r("code",{pre:!0},[s._v("__proto__")]),s._v("属性，指向父类实例的"),r("code",{pre:!0},[s._v("__proto__")]),s._v("属性。也就是说，子类的原型的原型，是父类的原型。")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" p1 = "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Point")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("3")]),s._v(");\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" p2 = "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("ColorPoint")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("3")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'red'")]),s._v(");\n\np2."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("__proto__")]),s._v(" === p1."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("__proto__")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// false")]),s._v("\np2."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("__proto__")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("__proto__")]),s._v(" === p1."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("__proto__")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// true")]),s._v("\n")])]),r("p",[s._v("上面代码中，"),r("code",{pre:!0},[s._v("ColorPoint")]),s._v("继承了"),r("code",{pre:!0},[s._v("Point")]),s._v("，导致前者原型的原型是后者的原型。")]),r("p",[s._v("因此，通过子类实例的"),r("code",{pre:!0},[s._v("__proto__.__proto__")]),s._v("属性，可以修改父类实例的行为。")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[s._v("p2."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("__proto__")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("__proto__")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("printName")]),s._v(" = "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" ("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n  "),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("console")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("log")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'Ha'")]),s._v(");\n};\n\np1."),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("printName")]),s._v("() "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('// "Ha"')]),s._v("\n")])]),r("p",[s._v("上面代码在"),r("code",{pre:!0},[s._v("ColorPoint")]),s._v("的实例"),r("code",{pre:!0},[s._v("p2")]),s._v("上向"),r("code",{pre:!0},[s._v("Point")]),s._v("类添加方法，结果影响到了"),r("code",{pre:!0},[s._v("Point")]),s._v("的实例"),r("code",{pre:!0},[s._v("p1")]),s._v("。")]),r("h2",[s._v("原生构造函数的继承")]),r("p",[s._v("原生构造函数是指语言内置的构造函数，通常用来生成数据结构。ECMAScript 的原生构造函数大致有下面这些。")]),r("ul",[r("li",[s._v("Boolean()")]),r("li",[s._v("Number()")]),r("li",[s._v("String()")]),r("li",[s._v("Array()")]),r("li",[s._v("Date()")]),r("li",[s._v("Function()")]),r("li",[s._v("RegExp()")]),r("li",[s._v("Error()")]),r("li",[s._v("Object()")])]),r("p",[s._v("以前，这些原生构造函数是无法继承的，比如，不能自己定义一个"),r("code",{pre:!0},[s._v("Array")]),s._v("的子类。")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("MyArray")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n  "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Array")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("apply")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("arguments")]),s._v(");\n}\n\n"),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("MyArray")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("prototype")])]),s._v(" = "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("create")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Array")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("prototype")])]),s._v(", {\n  "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("constructor")]),s._v(": {\n    "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("value")]),s._v(": "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("MyArray")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("writable")]),s._v(": "),r("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("true")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("configurable")]),s._v(": "),r("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("true")]),s._v(",\n    "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("enumerable")]),s._v(": "),r("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("true")]),s._v("\n  }\n});\n")])]),r("p",[s._v("上面代码定义了一个继承 Array 的"),r("code",{pre:!0},[s._v("MyArray")]),s._v("类。但是，这个类的行为与"),r("code",{pre:!0},[s._v("Array")]),s._v("完全不一致。")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" colors = "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("MyArray")]),s._v("();\ncolors["),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("] = "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"red"')]),s._v(";\ncolors."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("length")]),s._v("  "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 0")]),s._v("\n\ncolors."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("length")]),s._v(" = "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(";\ncolors["),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("]  "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('// "red"')]),s._v("\n")])]),r("p",[s._v("之所以会发生这种情况，是因为子类无法获得原生构造函数的内部属性，通过"),r("code",{pre:!0},[s._v("Array.apply()")]),s._v("或者分配给原型对象都不行。原生构造函数会忽略"),r("code",{pre:!0},[s._v("apply")]),s._v("方法传入的"),r("code",{pre:!0},[s._v("this")]),s._v("，也就是说，原生构造函数的"),r("code",{pre:!0},[s._v("this")]),s._v("无法绑定，导致拿不到内部属性。")]),r("p",[s._v("ES5 是先新建子类的实例对象"),r("code",{pre:!0},[s._v("this")]),s._v("，再将父类的属性添加到子类上，由于父类的内部属性无法获取，导致无法继承原生的构造函数。比如，"),r("code",{pre:!0},[s._v("Array")]),s._v("构造函数有一个内部属性"),r("code",{pre:!0},[s._v("[[DefineOwnProperty]]")]),s._v("，用来定义新属性时，更新"),r("code",{pre:!0},[s._v("length")]),s._v("属性，这个内部属性无法在子类获取，导致子类的"),r("code",{pre:!0},[s._v("length")]),s._v("属性行为不正常。")]),r("p",[s._v("下面的例子中，我们想让一个普通对象继承"),r("code",{pre:!0},[s._v("Error")]),s._v("对象。")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" e = {};\n\n"),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("getOwnPropertyNames")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Error")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("call")]),s._v("(e))\n"),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// [ 'stack' ]")]),s._v("\n\n"),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("getOwnPropertyNames")]),s._v("(e)\n"),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// []")]),s._v("\n")])]),r("p",[s._v("上面代码中，我们想通过"),r("code",{pre:!0},[s._v("Error.call(e)")]),s._v("这种写法，让普通对象"),r("code",{pre:!0},[s._v("e")]),s._v("具有"),r("code",{pre:!0},[s._v("Error")]),s._v("对象的实例属性。但是，"),r("code",{pre:!0},[s._v("Error.call()")]),s._v("完全忽略传入的第一个参数，而是返回一个新对象，"),r("code",{pre:!0},[s._v("e")]),s._v("本身没有任何变化。这证明了"),r("code",{pre:!0},[s._v("Error.call(e)")]),s._v("这种写法，无法继承原生构造函数。")]),r("p",[s._v("ES6 允许继承原生构造函数定义子类，因为 ES6 是先新建父类的实例对象"),r("code",{pre:!0},[s._v("this")]),s._v("，然后再用子类的构造函数修饰"),r("code",{pre:!0},[s._v("this")]),s._v("，使得父类的所有行为都可以继承。下面是一个继承"),r("code",{pre:!0},[s._v("Array")]),s._v("的例子。")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("MyArray")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("extends")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_ inherited__"}},[s._v("Array")]),s._v(" {\n  "),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("constructor")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("...args")]),s._v(") {\n    "),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("super")]),s._v("(...args);\n  }\n}\n\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" arr = "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("MyArray")]),s._v("();\narr["),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("] = "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("12")]),s._v(";\narr."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("length")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 1")]),s._v("\n\narr."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("length")]),s._v(" = "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(";\narr["),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("] "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// undefined")]),s._v("\n")])]),r("p",[s._v("上面代码定义了一个"),r("code",{pre:!0},[s._v("MyArray")]),s._v("类，继承了"),r("code",{pre:!0},[s._v("Array")]),s._v("构造函数，因此就可以从"),r("code",{pre:!0},[s._v("MyArray")]),s._v("生成数组的实例。这意味着，ES6 可以自定义原生数据结构（比如"),r("code",{pre:!0},[s._v("Array")]),s._v("、"),r("code",{pre:!0},[s._v("String")]),s._v("等）的子类，这是 ES5 无法做到的。")]),r("p",[s._v("上面这个例子也说明，"),r("code",{pre:!0},[s._v("extends")]),s._v("关键字不仅可以用来继承类，还可以用来继承原生的构造函数。因此可以在原生数据结构的基础上，定义自己的数据结构。下面就是定义了一个带版本功能的数组。")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("VersionedArray")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("extends")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_ inherited__"}},[s._v("Array")]),s._v(" {\n  "),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("constructor")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n    "),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("super")]),s._v("();\n    "),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("history")]),s._v(" = [[]];\n  }\n  "),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("commit")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n    "),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("history")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("push")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("slice")]),s._v("());\n  }\n  "),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("revert")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n    "),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("splice")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("length")]),s._v(", ..."),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("history")]),s._v("["),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("history")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("length")]),s._v(" - "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v("]);\n  }\n}\n\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" x = "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("VersionedArray")]),s._v("();\n\nx."),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("push")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(");\nx."),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("push")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(");\nx "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// [1, 2]")]),s._v("\nx."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("history")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// [[]]")]),s._v("\n\nx."),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("commit")]),s._v("();\nx."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("history")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// [[], [1, 2]]")]),s._v("\n\nx."),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("push")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("3")]),s._v(");\nx "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// [1, 2, 3]")]),s._v("\nx."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("history")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// [[], [1, 2]]")]),s._v("\n\nx."),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("revert")]),s._v("();\nx "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// [1, 2]")]),s._v("\n")])]),r("p",[s._v("上面代码中，"),r("code",{pre:!0},[s._v("VersionedArray")]),s._v("会通过"),r("code",{pre:!0},[s._v("commit")]),s._v("方法，将自己的当前状态生成一个版本快照，存入"),r("code",{pre:!0},[s._v("history")]),s._v("属性。"),r("code",{pre:!0},[s._v("revert")]),s._v("方法用来将数组重置为最新一次保存的版本。除此之外，"),r("code",{pre:!0},[s._v("VersionedArray")]),s._v("依然是一个普通数组，所有原生的数组方法都可以在它上面调用。")]),r("p",[s._v("下面是一个自定义"),r("code",{pre:!0},[s._v("Error")]),s._v("子类的例子，可以用来定制报错时的行为。")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("ExtendableError")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("extends")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_ inherited__"}},[s._v("Error")]),s._v(" {\n  "),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("constructor")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("message")]),s._v(") {\n    "),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("super")]),s._v("();\n    "),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("message")]),s._v(" = message;\n    "),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("stack")]),s._v(" = ("),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Error")]),s._v("())."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("stack")]),s._v(";\n    "),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("name")]),s._v(" = "),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("constructor")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("name")]),s._v(";\n  }\n}\n\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("MyError")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("extends")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_ inherited__"}},[s._v("ExtendableError")]),s._v(" {\n  "),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("constructor")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("m")]),s._v(") {\n    "),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("super")]),s._v("(m);\n  }\n}\n\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" myerror = "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("MyError")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'ll'")]),s._v(");\nmyerror."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("message")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('// "ll"')]),s._v("\nmyerror "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("instanceof")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Error")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// true")]),s._v("\nmyerror."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("name")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('// "MyError"')]),s._v("\nmyerror."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("stack")]),s._v("\n"),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// Error")]),s._v("\n"),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//     at MyError.ExtendableError")]),s._v("\n"),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//     ...")]),s._v("\n")])]),r("p",[s._v("注意，继承"),r("code",{pre:!0},[s._v("Object")]),s._v("的子类，有一个"),r("a",{attrs:{href:"http://stackoverflow.com/questions/36203614/super-does-not-pass-arguments-when-instantiating-a-class-extended-from-object"}},[s._v("行为差异")]),s._v("。")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("NewObj")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("extends")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_ inherited__"}},[s._v("Object")]),s._v("{\n  "),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("constructor")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v("){\n    "),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("super")]),s._v("(..."),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("arguments")]),s._v(");\n  }\n}\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" o = "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("NewObj")]),s._v("({"),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("attr")]),s._v(": "),r("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("true")]),s._v("});\no."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("attr")]),s._v(" === "),r("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("true")]),s._v("  "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// false")]),s._v("\n")])]),r("p",[s._v("上面代码中，"),r("code",{pre:!0},[s._v("NewObj")]),s._v("继承了"),r("code",{pre:!0},[s._v("Object")]),s._v("，但是无法通过"),r("code",{pre:!0},[s._v("super")]),s._v("方法向父类"),r("code",{pre:!0},[s._v("Object")]),s._v("传参。这是因为 ES6 改变了"),r("code",{pre:!0},[s._v("Object")]),s._v("构造函数的行为，一旦发现"),r("code",{pre:!0},[s._v("Object")]),s._v("方法不是通过"),r("code",{pre:!0},[s._v("new Object()")]),s._v("这种形式调用，ES6 规定"),r("code",{pre:!0},[s._v("Object")]),s._v("构造函数会忽略参数。")]),r("h2",[s._v("Mixin 模式的实现")]),r("p",[s._v("Mixin 指的是多个对象合成一个新的对象，新对象具有各个组成成员的接口。它的最简单实现如下。")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" a = {\n  "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("a")]),s._v(": "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'a'")]),s._v("\n};\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" b = {\n  "),r("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("b")]),s._v(": "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'b'")]),s._v("\n};\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" c = {...a, ...b}; "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// {a: 'a', b: 'b'}")]),s._v("\n")])]),r("p",[s._v("上面代码中，"),r("code",{pre:!0},[s._v("c")]),s._v("对象是"),r("code",{pre:!0},[s._v("a")]),s._v("对象和"),r("code",{pre:!0},[s._v("b")]),s._v("对象的合成，具有两者的接口。")]),r("p",[s._v("下面是一个更完备的实现，将多个类的接口“混入”（mix in）另一个类。")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("mix")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("...mixins")]),s._v(") {\n  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Mix")]),s._v(" {\n    "),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("constructor")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n      "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" mixin "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("of")]),s._v(" mixins) {\n        "),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("copyProperties")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("mixin")]),s._v("()); "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 拷贝实例属性")]),s._v("\n      }\n    }\n  }\n\n  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" mixin "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("of")]),s._v(" mixins) {\n    "),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("copyProperties")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Mix")]),s._v(", mixin); "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 拷贝静态属性")]),s._v("\n    "),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("copyProperties")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Mix")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("prototype")])]),s._v(", mixin."),r("span",{pre:!0,attrs:{class:"hljs-property"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("prototype")])]),s._v("); "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 拷贝原型属性")]),s._v("\n  }\n\n  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Mix")]),s._v(";\n}\n\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("copyProperties")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("target, source")]),s._v(") {\n  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" key "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("of")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Reflect")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("ownKeys")]),s._v("(source)) {\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" ( key !== "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'constructor'")]),s._v("\n      && key !== "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'prototype'")]),s._v("\n      && key !== "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'name'")]),s._v("\n    ) {\n      "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" desc = "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("getOwnPropertyDescriptor")]),s._v("(source, key);\n      "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),r("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("defineProperty")]),s._v("(target, key, desc);\n    }\n  }\n}\n")])]),r("p",[s._v("上面代码的"),r("code",{pre:!0},[s._v("mix")]),s._v("函数，可以将多个对象合成为一个类。使用的时候，只要继承这个类即可。")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("DistributedEdit")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("extends")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title class_ inherited__"}},[s._v("mix")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Loggable")]),s._v(", "),r("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Serializable")]),s._v(") {\n  "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// ...")]),s._v("\n}\n")])])])])])}],!1,null,null,null);a.default=e.exports}}]);