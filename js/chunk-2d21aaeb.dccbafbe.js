(window.webpackJsonp=window.webpackJsonp||[]).push([["chunk-2d21aaeb"],{bd0c:function(s,t,a){"use strict";a.r(t);var r=a("2877"),e=Object(r.a)({},(function(){var s=this;s.$createElement;return s._self._c,s._m(0)}),[function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",[a("html",[a("head"),a("body",[a("h1",[s._v("对象的新增方法")]),a("p",[s._v("本章介绍 Object 对象的新增方法。")]),a("h2",[s._v("Object.is()")]),a("p",[s._v("ES5 比较两个值是否相等，只有两个运算符：相等运算符（"),a("code",{pre:!0},[s._v("==")]),s._v("）和严格相等运算符（"),a("code",{pre:!0},[s._v("===")]),s._v("）。它们都有缺点，前者会自动转换数据类型，后者的"),a("code",{pre:!0},[s._v("NaN")]),s._v("不等于自身，以及"),a("code",{pre:!0},[s._v("+0")]),s._v("等于"),a("code",{pre:!0},[s._v("-0")]),s._v("。JavaScript 缺乏一种运算，在所有环境中，只要两个值是一样的，它们就应该相等。")]),a("p",[s._v("ES6 提出“Same-value equality”（同值相等）算法，用来解决这个问题。"),a("code",{pre:!0},[s._v("Object.is")]),s._v("就是部署这个算法的新方法。它用来比较两个值是否严格相等，与严格比较运算符（===）的行为基本一致。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("is")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'foo'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'foo'")]),s._v(")\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// true")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("is")]),s._v("({}, {})\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// false")]),s._v("\n")])]),a("p",[s._v("不同之处只有两个：一是"),a("code",{pre:!0},[s._v("+0")]),s._v("不等于"),a("code",{pre:!0},[s._v("-0")]),s._v("，二是"),a("code",{pre:!0},[s._v("NaN")]),s._v("等于自身。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[s._v("+"),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(" === -"),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//true")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Na")]),s._v("N === "),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Na")]),s._v("N "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// false")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("is")]),s._v("(+"),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(", -"),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(") "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// false")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("is")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Na")]),s._v("N, "),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Na")]),s._v("N) "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// true")]),s._v("\n")])]),a("p",[s._v("ES5 可以通过下面的代码，部署"),a("code",{pre:!0},[s._v("Object.is")]),s._v("。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("defineProperty")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'is'")]),s._v(", {\n  "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("value")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("x, y")]),s._v(") {\n    "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" (x === y) {\n      "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 针对+0 不等于 -0的情况")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" x !== "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(" || "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(" / x === "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(" / y;\n    }\n    "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 针对NaN的情况")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" x !== x && y !== y;\n  },\n  "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("configurable")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("true")]),s._v(",\n  "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("enumerable")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("false")]),s._v(",\n  "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("writable")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("true")]),s._v("\n});\n")])]),a("h2",[s._v("Object.assign()")]),a("h3",[s._v("基本用法")]),a("p",[a("code",{pre:!0},[s._v("Object.assign()")]),s._v("方法用于对象的合并，将源对象（source）的所有可枚举属性，复制到目标对象（target）。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" target = { "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("a")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(" };\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" source1 = { "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("b")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(" };\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" source2 = { "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("c")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("3")]),s._v(" };\n\n"),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("assign")]),s._v("(target, source1, source2);\ntarget "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// {a:1, b:2, c:3}")]),s._v("\n")])]),a("p",[a("code",{pre:!0},[s._v("Object.assign()")]),s._v("方法的第一个参数是目标对象，后面的参数都是源对象。")]),a("p",[s._v("注意，如果目标对象与源对象有同名属性，或多个源对象有同名属性，则后面的属性会覆盖前面的属性。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" target = { "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("a")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("b")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(" };\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" source1 = { "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("b")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("c")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(" };\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" source2 = { "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("c")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("3")]),s._v(" };\n\n"),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("assign")]),s._v("(target, source1, source2);\ntarget "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// {a:1, b:2, c:3}")]),s._v("\n")])]),a("p",[s._v("如果只有一个参数，"),a("code",{pre:!0},[s._v("Object.assign()")]),s._v("会直接返回该参数。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" obj = {"),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("a")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v("};\n"),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("assign")]),s._v("(obj) === obj "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// true")]),s._v("\n")])]),a("p",[s._v("如果该参数不是对象，则会先转成对象，然后返回。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("typeof")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("assign")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(") "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('// "object"')]),s._v("\n")])]),a("p",[s._v("由于"),a("code",{pre:!0},[s._v("undefined")]),s._v("和"),a("code",{pre:!0},[s._v("null")]),s._v("无法转成对象，所以如果它们作为参数，就会报错。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("assign")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("undefined")]),s._v(") "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 报错")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("assign")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("null")]),s._v(") "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 报错")]),s._v("\n")])]),a("p",[s._v("如果非对象参数出现在源对象的位置（即非首参数），那么处理规则有所不同。首先，这些参数都会转成对象，如果无法转成对象，就会跳过。这意味着，如果"),a("code",{pre:!0},[s._v("undefined")]),s._v("和"),a("code",{pre:!0},[s._v("null")]),s._v("不在首参数，就不会报错。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" obj = {"),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("a")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v("};\n"),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("assign")]),s._v("(obj, "),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("undefined")]),s._v(") === obj "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// true")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("assign")]),s._v("(obj, "),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("null")]),s._v(") === obj "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// true")]),s._v("\n")])]),a("p",[s._v("其他类型的值（即数值、字符串和布尔值）不在首参数，也不会报错。但是，除了字符串会以数组形式，拷贝入目标对象，其他值都不会产生效果。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" v1 = "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'abc'")]),s._v(";\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" v2 = "),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("true")]),s._v(";\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" v3 = "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("10")]),s._v(";\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" obj = "),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("assign")]),s._v("({}, v1, v2, v3);\n"),a("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("console")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("log")]),s._v("(obj); "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('// { "0": "a", "1": "b", "2": "c" }')]),s._v("\n")])]),a("p",[s._v("上面代码中，"),a("code",{pre:!0},[s._v("v1")]),s._v("、"),a("code",{pre:!0},[s._v("v2")]),s._v("、"),a("code",{pre:!0},[s._v("v3")]),s._v("分别是字符串、布尔值和数值，结果只有字符串合入目标对象（以字符数组的形式），数值和布尔值都会被忽略。这是因为只有字符串的包装对象，会产生可枚举属性。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("true")]),s._v(") "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// {[[PrimitiveValue]]: true}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("10")]),s._v(")  "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//  {[[PrimitiveValue]]: 10}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'abc'")]),s._v(") "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('// {0: "a", 1: "b", 2: "c", length: 3, [[PrimitiveValue]]: "abc"}')]),s._v("\n")])]),a("p",[s._v("上面代码中，布尔值、数值、字符串分别转成对应的包装对象，可以看到它们的原始值都在包装对象的内部属性"),a("code",{pre:!0},[s._v("[[PrimitiveValue]]")]),s._v("上面，这个属性是不会被"),a("code",{pre:!0},[s._v("Object.assign()")]),s._v("拷贝的。只有字符串的包装对象，会产生可枚举的实义属性，那些属性则会被拷贝。")]),a("p",[a("code",{pre:!0},[s._v("Object.assign()")]),s._v("拷贝的属性是有限制的，只拷贝源对象的自身属性（不拷贝继承属性），也不拷贝不可枚举的属性（"),a("code",{pre:!0},[s._v("enumerable: false")]),s._v("）。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("assign")]),s._v("({"),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("b")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'c'")]),s._v("},\n  "),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("defineProperty")]),s._v("({}, "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'invisible'")]),s._v(", {\n    "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("enumerable")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("false")]),s._v(",\n    "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("value")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'hello'")]),s._v("\n  })\n)\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// { b: 'c' }")]),s._v("\n")])]),a("p",[s._v("上面代码中，"),a("code",{pre:!0},[s._v("Object.assign()")]),s._v("要拷贝的对象只有一个不可枚举属性"),a("code",{pre:!0},[s._v("invisible")]),s._v("，这个属性并没有被拷贝进去。")]),a("p",[s._v("属性名为 Symbol 值的属性，也会被"),a("code",{pre:!0},[s._v("Object.assign()")]),s._v("拷贝。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("assign")]),s._v("({ "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("a")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'b'")]),s._v(" }, { ["),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Symbol")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'c'")]),s._v(")]: "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'d'")]),s._v(" })\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// { a: 'b', Symbol(c): 'd' }")]),s._v("\n")])]),a("h3",[s._v("注意点")]),a("p",[a("strong",[s._v("（1）浅拷贝")])]),a("p",[a("code",{pre:!0},[s._v("Object.assign()")]),s._v("方法实行的是浅拷贝，而不是深拷贝。也就是说，如果源对象某个属性的值是对象，那么目标对象拷贝得到的是这个对象的引用。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" obj1 = {"),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("a")]),s._v(": {"),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("b")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v("}};\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" obj2 = "),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("assign")]),s._v("({}, obj1);\n\nobj1."),a("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("a")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("b")]),s._v(" = "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(";\nobj2."),a("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("a")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("b")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 2")]),s._v("\n")])]),a("p",[s._v("上面代码中，源对象"),a("code",{pre:!0},[s._v("obj1")]),s._v("的"),a("code",{pre:!0},[s._v("a")]),s._v("属性的值是一个对象，"),a("code",{pre:!0},[s._v("Object.assign()")]),s._v("拷贝得到的是这个对象的引用。这个对象的任何变化，都会反映到目标对象上面。")]),a("p",[a("strong",[s._v("（2）同名属性的替换")])]),a("p",[s._v("对于这种嵌套的对象，一旦遇到同名属性，"),a("code",{pre:!0},[s._v("Object.assign()")]),s._v("的处理方法是替换，而不是添加。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" target = { "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("a")]),s._v(": { "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("b")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'c'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("d")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'e'")]),s._v(" } }\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" source = { "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("a")]),s._v(": { "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("b")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'hello'")]),s._v(" } }\n"),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("assign")]),s._v("(target, source)\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// { a: { b: 'hello' } }")]),s._v("\n")])]),a("p",[s._v("上面代码中，"),a("code",{pre:!0},[s._v("target")]),s._v("对象的"),a("code",{pre:!0},[s._v("a")]),s._v("属性被"),a("code",{pre:!0},[s._v("source")]),s._v("对象的"),a("code",{pre:!0},[s._v("a")]),s._v("属性整个替换掉了，而不会得到"),a("code",{pre:!0},[s._v("{ a: { b: 'hello', d: 'e' } }")]),s._v("的结果。这通常不是开发者想要的，需要特别小心。")]),a("p",[s._v("一些函数库提供"),a("code",{pre:!0},[s._v("Object.assign()")]),s._v("的定制版本（比如 Lodash 的"),a("code",{pre:!0},[s._v("_.defaultsDeep()")]),s._v("方法），可以得到深拷贝的合并。")]),a("p",[a("strong",[s._v("（3）数组的处理")])]),a("p",[a("code",{pre:!0},[s._v("Object.assign()")]),s._v("可以用来处理数组，但是会把数组视为对象。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("assign")]),s._v("(["),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("3")]),s._v("], ["),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("4")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("5")]),s._v("])\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// [4, 5, 3]")]),s._v("\n")])]),a("p",[s._v("上面代码中，"),a("code",{pre:!0},[s._v("Object.assign()")]),s._v("把数组视为属性名为 0、1、2 的对象，因此源数组的 0 号属性"),a("code",{pre:!0},[s._v("4")]),s._v("覆盖了目标数组的 0 号属性"),a("code",{pre:!0},[s._v("1")]),s._v("。")]),a("p",[a("strong",[s._v("（4）取值函数的处理")])]),a("p",[a("code",{pre:!0},[s._v("Object.assign()")]),s._v("只能进行值的复制，如果要复制的值是一个取值函数，那么将求值后再复制。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" source = {\n  "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("get")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("foo")]),s._v("() { "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(" }\n};\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" target = {};\n\n"),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("assign")]),s._v("(target, source)\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// { foo: 1 }")]),s._v("\n")])]),a("p",[s._v("上面代码中，"),a("code",{pre:!0},[s._v("source")]),s._v("对象的"),a("code",{pre:!0},[s._v("foo")]),s._v("属性是一个取值函数，"),a("code",{pre:!0},[s._v("Object.assign()")]),s._v("不会复制这个取值函数，只会拿到值以后，将这个值复制过去。")]),a("h3",[s._v("常见用途")]),a("p",[a("code",{pre:!0},[s._v("Object.assign()")]),s._v("方法有很多用处。")]),a("p",[a("strong",[s._v("（1）为对象添加属性")])]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Point")]),s._v(" {\n  "),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("constructor")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("x, y")]),s._v(") {\n    "),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("assign")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v(", {x, y});\n  }\n}\n")])]),a("p",[s._v("上面方法通过"),a("code",{pre:!0},[s._v("Object.assign()")]),s._v("方法，将"),a("code",{pre:!0},[s._v("x")]),s._v("属性和"),a("code",{pre:!0},[s._v("y")]),s._v("属性添加到"),a("code",{pre:!0},[s._v("Point")]),s._v("类的对象实例。")]),a("p",[a("strong",[s._v("（2）为对象添加方法")])]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("assign")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("SomeClass")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-property"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("prototype")])]),s._v(", {\n  "),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("someMethod")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("arg1, arg2")]),s._v(") {\n    ···\n  },\n  "),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("anotherMethod")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n    ···\n  }\n});\n\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 等同于下面的写法")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("SomeClass")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-property"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("prototype")])]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("someMethod")]),s._v(" = "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("arg1, arg2")]),s._v(") {\n  ···\n};\n"),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("SomeClass")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-property"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("prototype")])]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("anotherMethod")]),s._v(" = "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n  ···\n};\n")])]),a("p",[s._v("上面代码使用了对象属性的简洁表示法，直接将两个函数放在大括号中，再使用"),a("code",{pre:!0},[s._v("assign()")]),s._v("方法添加到"),a("code",{pre:!0},[s._v("SomeClass.prototype")]),s._v("之中。")]),a("p",[a("strong",[s._v("（3）克隆对象")])]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("clone")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("origin")]),s._v(") {\n  "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("assign")]),s._v("({}, origin);\n}\n")])]),a("p",[s._v("上面代码将原始对象拷贝到一个空对象，就得到了原始对象的克隆。")]),a("p",[s._v("不过，采用这种方法克隆，只能克隆原始对象自身的值，不能克隆它继承的值。如果想要保持继承链，可以采用下面的代码。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("clone")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("origin")]),s._v(") {\n  "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" originProto = "),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("getPrototypeOf")]),s._v("(origin);\n  "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("assign")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("create")]),s._v("(originProto), origin);\n}\n")])]),a("p",[a("strong",[s._v("（4）合并多个对象")])]),a("p",[s._v("将多个对象合并到某个对象。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("merge")]),s._v(" =\n  ("),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("target, ...sources")]),s._v(") => "),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("assign")]),s._v("(target, ...sources);\n")])]),a("p",[s._v("如果希望合并后返回一个新对象，可以改写上面函数，对一个空对象合并。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("merge")]),s._v(" =\n  ("),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("...sources")]),s._v(") => "),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("assign")]),s._v("({}, ...sources);\n")])]),a("p",[a("strong",[s._v("（5）为属性指定默认值")])]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-variable constant_"}},[s._v("DEFAULTS")]),s._v(" = {\n  "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("logLevel")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(",\n  "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("outputFormat")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'html'")]),s._v("\n};\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("processContent")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("options")]),s._v(") {\n  options = "),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("assign")]),s._v("({}, "),a("span",{pre:!0,attrs:{class:"hljs-variable constant_"}},[s._v("DEFAULTS")]),s._v(", options);\n  "),a("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("console")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("log")]),s._v("(options);\n  "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// ...")]),s._v("\n}\n")])]),a("p",[s._v("上面代码中，"),a("code",{pre:!0},[s._v("DEFAULTS")]),s._v("对象是默认值，"),a("code",{pre:!0},[s._v("options")]),s._v("对象是用户提供的参数。"),a("code",{pre:!0},[s._v("Object.assign()")]),s._v("方法将"),a("code",{pre:!0},[s._v("DEFAULTS")]),s._v("和"),a("code",{pre:!0},[s._v("options")]),s._v("合并成一个新对象，如果两者有同名属性，则"),a("code",{pre:!0},[s._v("options")]),s._v("的属性值会覆盖"),a("code",{pre:!0},[s._v("DEFAULTS")]),s._v("的属性值。")]),a("p",[s._v("注意，由于存在浅拷贝的问题，"),a("code",{pre:!0},[s._v("DEFAULTS")]),s._v("对象和"),a("code",{pre:!0},[s._v("options")]),s._v("对象的所有属性的值，最好都是简单类型，不要指向另一个对象。否则，"),a("code",{pre:!0},[s._v("DEFAULTS")]),s._v("对象的该属性很可能不起作用。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-variable constant_"}},[s._v("DEFAULTS")]),s._v(" = {\n  "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("url")]),s._v(": {\n    "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("host")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'example.com'")]),s._v(",\n    "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("port")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("7070")]),s._v("\n  },\n};\n\n"),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("processContent")]),s._v("({ "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("url")]),s._v(": {"),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("port")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("8000")]),s._v("} })\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// {")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//   url: {port: 8000}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// }")]),s._v("\n")])]),a("p",[s._v("上面代码的原意是将"),a("code",{pre:!0},[s._v("url.port")]),s._v("改成 8000，"),a("code",{pre:!0},[s._v("url.host")]),s._v("不变。实际结果却是"),a("code",{pre:!0},[s._v("options.url")]),s._v("覆盖掉"),a("code",{pre:!0},[s._v("DEFAULTS.url")]),s._v("，所以"),a("code",{pre:!0},[s._v("url.host")]),s._v("就不存在了。")]),a("h2",[s._v("Object.getOwnPropertyDescriptors()")]),a("p",[s._v("ES5 的"),a("code",{pre:!0},[s._v("Object.getOwnPropertyDescriptor()")]),s._v("方法会返回某个对象属性的描述对象（descriptor）。ES2017 引入了"),a("code",{pre:!0},[s._v("Object.getOwnPropertyDescriptors()")]),s._v("方法，返回指定对象所有自身属性（非继承属性）的描述对象。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" obj = {\n  "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("foo")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("123")]),s._v(",\n  "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("get")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("bar")]),s._v("() { "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'abc'")]),s._v(" }\n};\n\n"),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("getOwnPropertyDescriptors")]),s._v("(obj)\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// { foo:")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//    { value: 123,")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//      writable: true,")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//      enumerable: true,")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//      configurable: true },")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//   bar:")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//    { get: [Function: get bar],")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//      set: undefined,")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//      enumerable: true,")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//      configurable: true } }")]),s._v("\n")])]),a("p",[s._v("上面代码中，"),a("code",{pre:!0},[s._v("Object.getOwnPropertyDescriptors()")]),s._v("方法返回一个对象，所有原对象的属性名都是该对象的属性名，对应的属性值就是该属性的描述对象。")]),a("p",[s._v("该方法的实现非常容易。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("getOwnPropertyDescriptors")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("obj")]),s._v(") {\n  "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" result = {};\n  "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" key "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("of")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Reflect")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("ownKeys")]),s._v("(obj)) {\n    result[key] = "),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("getOwnPropertyDescriptor")]),s._v("(obj, key);\n  }\n  "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" result;\n}\n")])]),a("p",[s._v("该方法的引入目的，主要是为了解决"),a("code",{pre:!0},[s._v("Object.assign()")]),s._v("无法正确拷贝"),a("code",{pre:!0},[s._v("get")]),s._v("属性和"),a("code",{pre:!0},[s._v("set")]),s._v("属性的问题。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" source = {\n  "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("set")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("foo")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("value")]),s._v(") {\n    "),a("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("console")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("log")]),s._v("(value);\n  }\n};\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" target1 = {};\n"),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("assign")]),s._v("(target1, source);\n\n"),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("getOwnPropertyDescriptor")]),s._v("(target1, "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'foo'")]),s._v(")\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// { value: undefined,")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//   writable: true,")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//   enumerable: true,")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//   configurable: true }")]),s._v("\n")])]),a("p",[s._v("上面代码中，"),a("code",{pre:!0},[s._v("source")]),s._v("对象的"),a("code",{pre:!0},[s._v("foo")]),s._v("属性的值是一个赋值函数，"),a("code",{pre:!0},[s._v("Object.assign")]),s._v("方法将这个属性拷贝给"),a("code",{pre:!0},[s._v("target1")]),s._v("对象，结果该属性的值变成了"),a("code",{pre:!0},[s._v("undefined")]),s._v("。这是因为"),a("code",{pre:!0},[s._v("Object.assign")]),s._v("方法总是拷贝一个属性的值，而不会拷贝它背后的赋值方法或取值方法。")]),a("p",[s._v("这时，"),a("code",{pre:!0},[s._v("Object.getOwnPropertyDescriptors()")]),s._v("方法配合"),a("code",{pre:!0},[s._v("Object.defineProperties()")]),s._v("方法，就可以实现正确拷贝。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" source = {\n  "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("set")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("foo")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("value")]),s._v(") {\n    "),a("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("console")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("log")]),s._v("(value);\n  }\n};\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" target2 = {};\n"),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("defineProperties")]),s._v("(target2, "),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("getOwnPropertyDescriptors")]),s._v("(source));\n"),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("getOwnPropertyDescriptor")]),s._v("(target2, "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'foo'")]),s._v(")\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// { get: undefined,")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//   set: [Function: set foo],")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//   enumerable: true,")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//   configurable: true }")]),s._v("\n")])]),a("p",[s._v("上面代码中，两个对象合并的逻辑可以写成一个函数。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("shallowMerge")]),s._v(" = ("),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("target, source")]),s._v(") => "),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("defineProperties")]),s._v("(\n  target,\n  "),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("getOwnPropertyDescriptors")]),s._v("(source)\n);\n")])]),a("p",[a("code",{pre:!0},[s._v("Object.getOwnPropertyDescriptors()")]),s._v("方法的另一个用处，是配合"),a("code",{pre:!0},[s._v("Object.create()")]),s._v("方法，将对象属性克隆到一个新对象。这属于浅拷贝。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" clone = "),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("create")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("getPrototypeOf")]),s._v("(obj),\n  "),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("getOwnPropertyDescriptors")]),s._v("(obj));\n\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 或者")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("shallowClone")]),s._v(" = ("),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("obj")]),s._v(") => "),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("create")]),s._v("(\n  "),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("getPrototypeOf")]),s._v("(obj),\n  "),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("getOwnPropertyDescriptors")]),s._v("(obj)\n);\n")])]),a("p",[s._v("上面代码会克隆对象"),a("code",{pre:!0},[s._v("obj")]),s._v("。")]),a("p",[s._v("另外，"),a("code",{pre:!0},[s._v("Object.getOwnPropertyDescriptors()")]),s._v("方法可以实现一个对象继承另一个对象。以前，继承另一个对象，常常写成下面这样。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" obj = {\n  "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("__proto__")]),s._v(": prot,\n  "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("foo")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("123")]),s._v(",\n};\n")])]),a("p",[s._v("ES6 规定"),a("code",{pre:!0},[s._v("__proto__")]),s._v("只有浏览器要部署，其他环境不用部署。如果去除"),a("code",{pre:!0},[s._v("__proto__")]),s._v("，上面代码就要改成下面这样。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" obj = "),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("create")]),s._v("(prot);\nobj."),a("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("foo")]),s._v(" = "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("123")]),s._v(";\n\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 或者")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" obj = "),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("assign")]),s._v("(\n  "),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("create")]),s._v("(prot),\n  {\n    "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("foo")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("123")]),s._v(",\n  }\n);\n")])]),a("p",[s._v("有了"),a("code",{pre:!0},[s._v("Object.getOwnPropertyDescriptors()")]),s._v("，我们就有了另一种写法。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" obj = "),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("create")]),s._v("(\n  prot,\n  "),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("getOwnPropertyDescriptors")]),s._v("({\n    "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("foo")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("123")]),s._v(",\n  })\n);\n")])]),a("p",[a("code",{pre:!0},[s._v("Object.getOwnPropertyDescriptors()")]),s._v("也可以用来实现 Mixin（混入）模式。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("mix")]),s._v(" = ("),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("object")]),s._v(") => ({\n  "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("with")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-function"}},[s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("...mixins")]),s._v(") =>")]),s._v(" mixins."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("reduce")]),s._v("(\n    "),a("span",{pre:!0,attrs:{class:"hljs-function"}},[s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("c, mixin")]),s._v(") =>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("create")]),s._v("(\n      c, "),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("getOwnPropertyDescriptors")]),s._v("(mixin)\n    ), object)\n});\n\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// multiple mixins example")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" a = {"),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("a")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'a'")]),s._v("};\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" b = {"),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("b")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'b'")]),s._v("};\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" c = {"),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("c")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'c'")]),s._v("};\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" d = "),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("mix")]),s._v("(c)."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("with")]),s._v("(a, b);\n\nd."),a("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("c")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('// "c"')]),s._v("\nd."),a("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("b")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('// "b"')]),s._v("\nd."),a("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("a")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('// "a"')]),s._v("\n")])]),a("p",[s._v("上面代码返回一个新的对象"),a("code",{pre:!0},[s._v("d")]),s._v("，代表了对象"),a("code",{pre:!0},[s._v("a")]),s._v("和"),a("code",{pre:!0},[s._v("b")]),s._v("被混入了对象"),a("code",{pre:!0},[s._v("c")]),s._v("的操作。")]),a("p",[s._v("出于完整性的考虑，"),a("code",{pre:!0},[s._v("Object.getOwnPropertyDescriptors()")]),s._v("进入标准以后，以后还会新增"),a("code",{pre:!0},[s._v("Reflect.getOwnPropertyDescriptors()")]),s._v("方法。")]),a("h2",[a("code",{pre:!0},[s._v("__proto__")]),s._v("属性，Object.setPrototypeOf()，Object.getPrototypeOf()")]),a("p",[s._v("JavaScript 语言的对象继承是通过原型链实现的。ES6 提供了更多原型对象的操作方法。")]),a("h3",[a("code",{pre:!0},[s._v("__proto__")]),s._v("属性")]),a("p",[a("code",{pre:!0},[s._v("__proto__")]),s._v("属性（前后各两个下划线），用来读取或设置当前对象的原型对象（prototype）。目前，所有浏览器（包括 IE11）都部署了这个属性。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// es5 的写法")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" obj = {\n  "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("method")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") { ... }\n};\nobj."),a("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("__proto__")]),s._v(" = someOtherObj;\n\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// es6 的写法")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" obj = "),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("create")]),s._v("(someOtherObj);\nobj."),a("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("method")]),s._v(" = "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") { ... };\n")])]),a("p",[s._v("该属性没有写入 ES6 的正文，而是写入了附录，原因是"),a("code",{pre:!0},[s._v("__proto__")]),s._v("前后的双下划线，说明它本质上是一个内部属性，而不是一个正式的对外的 API，只是由于浏览器广泛支持，才被加入了 ES6。标准明确规定，只有浏览器必须部署这个属性，其他运行环境不一定需要部署，而且新的代码最好认为这个属性是不存在的。因此，无论从语义的角度，还是从兼容性的角度，都不要使用这个属性，而是使用下面的"),a("code",{pre:!0},[s._v("Object.setPrototypeOf()")]),s._v("（写操作）、"),a("code",{pre:!0},[s._v("Object.getPrototypeOf()")]),s._v("（读操作）、"),a("code",{pre:!0},[s._v("Object.create()")]),s._v("（生成操作）代替。")]),a("p",[s._v("实现上，"),a("code",{pre:!0},[s._v("__proto__")]),s._v("调用的是"),a("code",{pre:!0},[s._v("Object.prototype.__proto__")]),s._v("，具体实现如下。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("defineProperty")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-property"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("prototype")])]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'__proto__'")]),s._v(", {\n  "),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("get")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n    "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" _thisObj = "),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v(");\n    "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("getPrototypeOf")]),s._v("(_thisObj);\n  },\n  "),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("set")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("proto")]),s._v(") {\n    "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v(" === "),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("undefined")]),s._v(" || "),a("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v(" === "),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("null")]),s._v(") {\n      "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("throw")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("TypeError")]),s._v("();\n    }\n    "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" (!"),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("isObject")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v(")) {\n      "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("undefined")]),s._v(";\n    }\n    "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" (!"),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("isObject")]),s._v("(proto)) {\n      "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("undefined")]),s._v(";\n    }\n    "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" status = "),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Reflect")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("setPrototypeOf")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("this")]),s._v(", proto);\n    "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" (!status) {\n      "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("throw")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("TypeError")]),s._v("();\n    }\n  },\n});\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("isObject")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("value")]),s._v(") {\n  "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("(value) === value;\n}\n")])]),a("p",[s._v("如果一个对象本身部署了"),a("code",{pre:!0},[s._v("__proto__")]),s._v("属性，该属性的值就是对象的原型。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("getPrototypeOf")]),s._v("({ "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("__proto__")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("null")]),s._v(" })\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// null")]),s._v("\n")])]),a("h3",[s._v("Object.setPrototypeOf()")]),a("p",[a("code",{pre:!0},[s._v("Object.setPrototypeOf")]),s._v("方法的作用与"),a("code",{pre:!0},[s._v("__proto__")]),s._v("相同，用来设置一个对象的原型对象（prototype），返回参数对象本身。它是 ES6 正式推荐的设置原型对象的方法。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 格式")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("setPrototypeOf")]),s._v("(object, prototype)\n\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 用法")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" o = "),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("setPrototypeOf")]),s._v("({}, "),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("null")]),s._v(");\n")])]),a("p",[s._v("该方法等同于下面的函数。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("setPrototypeOf")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("obj, proto")]),s._v(") {\n  obj."),a("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("__proto__")]),s._v(" = proto;\n  "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" obj;\n}\n")])]),a("p",[s._v("下面是一个例子。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" proto = {};\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" obj = { "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("x")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("10")]),s._v(" };\n"),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("setPrototypeOf")]),s._v("(obj, proto);\n\nproto."),a("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("y")]),s._v(" = "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("20")]),s._v(";\nproto."),a("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("z")]),s._v(" = "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("40")]),s._v(";\n\nobj."),a("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("x")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 10")]),s._v("\nobj."),a("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("y")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 20")]),s._v("\nobj."),a("span",{pre:!0,attrs:{class:"hljs-property"}},[s._v("z")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 40")]),s._v("\n")])]),a("p",[s._v("上面代码将"),a("code",{pre:!0},[s._v("proto")]),s._v("对象设为"),a("code",{pre:!0},[s._v("obj")]),s._v("对象的原型，所以从"),a("code",{pre:!0},[s._v("obj")]),s._v("对象可以读取"),a("code",{pre:!0},[s._v("proto")]),s._v("对象的属性。")]),a("p",[s._v("如果第一个参数不是对象，会自动转为对象。但是由于返回的还是第一个参数，所以这个操作不会产生任何效果。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("setPrototypeOf")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(", {}) === "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// true")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("setPrototypeOf")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'foo'")]),s._v(", {}) === "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'foo'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// true")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("setPrototypeOf")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("true")]),s._v(", {}) === "),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("true")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// true")]),s._v("\n")])]),a("p",[s._v("由于"),a("code",{pre:!0},[s._v("undefined")]),s._v("和"),a("code",{pre:!0},[s._v("null")]),s._v("无法转为对象，所以如果第一个参数是"),a("code",{pre:!0},[s._v("undefined")]),s._v("或"),a("code",{pre:!0},[s._v("null")]),s._v("，就会报错。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("setPrototypeOf")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("undefined")]),s._v(", {})\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// TypeError: Object.setPrototypeOf called on null or undefined")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("setPrototypeOf")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("null")]),s._v(", {})\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// TypeError: Object.setPrototypeOf called on null or undefined")]),s._v("\n")])]),a("h3",[s._v("Object.getPrototypeOf()")]),a("p",[s._v("该方法与"),a("code",{pre:!0},[s._v("Object.setPrototypeOf")]),s._v("方法配套，用于读取一个对象的原型对象。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("getPrototypeOf")]),s._v("(obj);\n")])]),a("p",[s._v("下面是一个例子。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("Rectangle")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") {\n  "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// ...")]),s._v("\n}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" rec = "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Rectangle")]),s._v("();\n\n"),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("getPrototypeOf")]),s._v("(rec) === "),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Rectangle")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-property"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("prototype")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// true")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("setPrototypeOf")]),s._v("(rec, "),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-property"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("prototype")])]),s._v(");\n"),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("getPrototypeOf")]),s._v("(rec) === "),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Rectangle")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-property"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("prototype")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// false")]),s._v("\n")])]),a("p",[s._v("如果参数不是对象，会被自动转为对象。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 等同于 Object.getPrototypeOf(Number(1))")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("getPrototypeOf")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(")\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// Number {[[PrimitiveValue]]: 0}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 等同于 Object.getPrototypeOf(String('foo'))")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("getPrototypeOf")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'foo'")]),s._v(")\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('// String {length: 0, [[PrimitiveValue]]: ""}')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 等同于 Object.getPrototypeOf(Boolean(true))")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("getPrototypeOf")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("true")]),s._v(")\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// Boolean {[[PrimitiveValue]]: false}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("getPrototypeOf")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(") === "),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Number")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-property"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("prototype")])]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// true")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("getPrototypeOf")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'foo'")]),s._v(") === "),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("String")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-property"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("prototype")])]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// true")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("getPrototypeOf")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("true")]),s._v(") === "),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Boolean")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-property"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("prototype")])]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// true")]),s._v("\n")])]),a("p",[s._v("如果参数是"),a("code",{pre:!0},[s._v("undefined")]),s._v("或"),a("code",{pre:!0},[s._v("null")]),s._v("，它们无法转为对象，所以会报错。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("getPrototypeOf")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("null")]),s._v(")\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// TypeError: Cannot convert undefined or null to object")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("getPrototypeOf")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("undefined")]),s._v(")\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// TypeError: Cannot convert undefined or null to object")]),s._v("\n")])]),a("h2",[s._v("Object.keys()，Object.values()，Object.entries()")]),a("h3",[s._v("Object.keys()")]),a("p",[s._v("ES5 引入了"),a("code",{pre:!0},[s._v("Object.keys")]),s._v("方法，返回一个数组，成员是参数对象自身的（不含继承的）所有可遍历（enumerable）属性的键名。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" obj = { "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("foo")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'bar'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("baz")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("42")]),s._v(" };\n"),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("keys")]),s._v("(obj)\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('// ["foo", "baz"]')]),s._v("\n")])]),a("p",[s._v("ES2017 "),a("a",{attrs:{href:"https://github.com/tc39/proposal-object-values-entries"}},[s._v("引入")]),s._v("了跟"),a("code",{pre:!0},[s._v("Object.keys")]),s._v("配套的"),a("code",{pre:!0},[s._v("Object.values")]),s._v("和"),a("code",{pre:!0},[s._v("Object.entries")]),s._v("，作为遍历一个对象的补充手段，供"),a("code",{pre:!0},[s._v("for...of")]),s._v("循环使用。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" {keys, values, entries} = "),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v(";\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" obj = { "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("a")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("b")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("c")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("3")]),s._v(" };\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" key "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("of")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("keys")]),s._v("(obj)) {\n  "),a("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("console")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("log")]),s._v("(key); "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 'a', 'b', 'c'")]),s._v("\n}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" value "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("of")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("values")]),s._v("(obj)) {\n  "),a("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("console")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("log")]),s._v("(value); "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 1, 2, 3")]),s._v("\n}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" [key, value] "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("of")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("entries")]),s._v("(obj)) {\n  "),a("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("console")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("log")]),s._v("([key, value]); "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// ['a', 1], ['b', 2], ['c', 3]")]),s._v("\n}\n")])]),a("h3",[s._v("Object.values()")]),a("p",[a("code",{pre:!0},[s._v("Object.values")]),s._v("方法返回一个数组，成员是参数对象自身的（不含继承的）所有可遍历（enumerable）属性的键值。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" obj = { "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("foo")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'bar'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("baz")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("42")]),s._v(" };\n"),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("values")]),s._v("(obj)\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('// ["bar", 42]')]),s._v("\n")])]),a("p",[s._v("返回数组的成员顺序，与本章的《属性的遍历》部分介绍的排列规则一致。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" obj = { "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("100")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'a'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'b'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("7")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'c'")]),s._v(" };\n"),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("values")]),s._v("(obj)\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('// ["b", "c", "a"]')]),s._v("\n")])]),a("p",[s._v("上面代码中，属性名为数值的属性，是按照数值大小，从小到大遍历的，因此返回的顺序是"),a("code",{pre:!0},[s._v("b")]),s._v("、"),a("code",{pre:!0},[s._v("c")]),s._v("、"),a("code",{pre:!0},[s._v("a")]),s._v("。")]),a("p",[a("code",{pre:!0},[s._v("Object.values")]),s._v("只返回对象自身的可遍历属性。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" obj = "),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("create")]),s._v("({}, {"),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("p")]),s._v(": {"),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("value")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("42")]),s._v("}});\n"),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("values")]),s._v("(obj) "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// []")]),s._v("\n")])]),a("p",[s._v("上面代码中，"),a("code",{pre:!0},[s._v("Object.create")]),s._v("方法的第二个参数添加的对象属性（属性"),a("code",{pre:!0},[s._v("p")]),s._v("），如果不显式声明，默认是不可遍历的，因为"),a("code",{pre:!0},[s._v("p")]),s._v("的属性描述对象的"),a("code",{pre:!0},[s._v("enumerable")]),s._v("默认是"),a("code",{pre:!0},[s._v("false")]),s._v("，"),a("code",{pre:!0},[s._v("Object.values")]),s._v("不会返回这个属性。只要把"),a("code",{pre:!0},[s._v("enumerable")]),s._v("改成"),a("code",{pre:!0},[s._v("true")]),s._v("，"),a("code",{pre:!0},[s._v("Object.values")]),s._v("就会返回属性"),a("code",{pre:!0},[s._v("p")]),s._v("的值。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" obj = "),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("create")]),s._v("({}, {"),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("p")]),s._v(":\n  {\n    "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("value")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("42")]),s._v(",\n    "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("enumerable")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("true")]),s._v("\n  }\n});\n"),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("values")]),s._v("(obj) "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// [42]")]),s._v("\n")])]),a("p",[a("code",{pre:!0},[s._v("Object.values")]),s._v("会过滤属性名为 Symbol 值的属性。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("values")]),s._v("({ ["),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Symbol")]),s._v("()]: "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("123")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("foo")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'abc'")]),s._v(" });\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// ['abc']")]),s._v("\n")])]),a("p",[s._v("如果"),a("code",{pre:!0},[s._v("Object.values")]),s._v("方法的参数是一个字符串，会返回各个字符组成的一个数组。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("values")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'foo'")]),s._v(")\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// ['f', 'o', 'o']")]),s._v("\n")])]),a("p",[s._v("上面代码中，字符串会先转成一个类似数组的对象。字符串的每个字符，就是该对象的一个属性。因此，"),a("code",{pre:!0},[s._v("Object.values")]),s._v("返回每个属性的键值，就是各个字符组成的一个数组。")]),a("p",[s._v("如果参数不是对象，"),a("code",{pre:!0},[s._v("Object.values")]),s._v("会先将其转为对象。由于数值和布尔值的包装对象，都不会为实例添加非继承的属性。所以，"),a("code",{pre:!0},[s._v("Object.values")]),s._v("会返回空数组。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("values")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("42")]),s._v(") "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// []")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("values")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("true")]),s._v(") "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// []")]),s._v("\n")])]),a("h3",[s._v("Object.entries()")]),a("p",[a("code",{pre:!0},[s._v("Object.entries()")]),s._v("方法返回一个数组，成员是参数对象自身的（不含继承的）所有可遍历（enumerable）属性的键值对数组。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" obj = { "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("foo")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'bar'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("baz")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("42")]),s._v(" };\n"),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("entries")]),s._v("(obj)\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('// [ ["foo", "bar"], ["baz", 42] ]')]),s._v("\n")])]),a("p",[s._v("除了返回值不一样，该方法的行为与"),a("code",{pre:!0},[s._v("Object.values")]),s._v("基本一致。")]),a("p",[s._v("如果原对象的属性名是一个 Symbol 值，该属性会被忽略。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("entries")]),s._v("({ ["),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Symbol")]),s._v("()]: "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("123")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("foo")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'abc'")]),s._v(" });\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// [ [ 'foo', 'abc' ] ]")]),s._v("\n")])]),a("p",[s._v("上面代码中，原对象有两个属性，"),a("code",{pre:!0},[s._v("Object.entries")]),s._v("只输出属性名非 Symbol 值的属性。将来可能会有"),a("code",{pre:!0},[s._v("Reflect.ownEntries()")]),s._v("方法，返回对象自身的所有属性。")]),a("p",[a("code",{pre:!0},[s._v("Object.entries")]),s._v("的基本用途是遍历对象的属性。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" obj = { "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("one")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("two")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(" };\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" [k, v] "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("of")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("entries")]),s._v("(obj)) {\n  "),a("span",{pre:!0,attrs:{class:"hljs-variable language_"}},[s._v("console")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("log")]),s._v("(\n    "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("`"),a("span",{pre:!0,attrs:{class:"hljs-subst"}},[s._v("${"),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("JSON")]),s._v(".stringify(k)}")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-subst"}},[s._v("${"),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("JSON")]),s._v(".stringify(v)}")]),s._v("`")]),s._v("\n  );\n}\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('// "one": 1')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('// "two": 2')]),s._v("\n")])]),a("p",[a("code",{pre:!0},[s._v("Object.entries")]),s._v("方法的另一个用处是，将对象转为真正的"),a("code",{pre:!0},[s._v("Map")]),s._v("结构。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" obj = { "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("foo")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'bar'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("baz")]),s._v(": "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("42")]),s._v(" };\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" map = "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Map")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("entries")]),s._v("(obj));\nmap "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('// Map { foo: "bar", baz: 42 }')]),s._v("\n")])]),a("p",[s._v("自己实现"),a("code",{pre:!0},[s._v("Object.entries")]),s._v("方法，非常简单。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// Generator函数的版本")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("* "),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("entries")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("obj")]),s._v(") {\n  "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" key "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("of")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("keys")]),s._v("(obj)) {\n    "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("yield")]),s._v(" [key, obj[key]];\n  }\n}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 非Generator函数的版本")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("entries")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("obj")]),s._v(") {\n  "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" arr = [];\n  "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" key "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("of")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("keys")]),s._v("(obj)) {\n    arr."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("push")]),s._v("([key, obj[key]]);\n  }\n  "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" arr;\n}\n")])]),a("h2",[s._v("Object.fromEntries()")]),a("p",[a("code",{pre:!0},[s._v("Object.fromEntries()")]),s._v("方法是"),a("code",{pre:!0},[s._v("Object.entries()")]),s._v("的逆操作，用于将一个键值对数组转为对象。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("fromEntries")]),s._v("([\n  ["),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'foo'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'bar'")]),s._v("],\n  ["),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'baz'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("42")]),s._v("]\n])\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('// { foo: "bar", baz: 42 }')]),s._v("\n")])]),a("p",[s._v("该方法的主要目的，是将键值对的数据结构还原为对象，因此特别适合将 Map 结构转为对象。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 例一")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" entries = "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Map")]),s._v("([\n  ["),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'foo'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'bar'")]),s._v("],\n  ["),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'baz'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("42")]),s._v("]\n]);\n\n"),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("fromEntries")]),s._v("(entries)\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('// { foo: "bar", baz: 42 }')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 例二")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" map = "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Map")]),s._v("()."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("set")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'foo'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("true")]),s._v(")."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("set")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'bar'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("false")]),s._v(");\n"),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("fromEntries")]),s._v("(map)\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// { foo: true, bar: false }")]),s._v("\n")])]),a("p",[s._v("该方法的一个用处是配合"),a("code",{pre:!0},[s._v("URLSearchParams")]),s._v("对象，将查询字符串转为对象。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("Object")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title function_"}},[s._v("fromEntries")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title class_"}},[s._v("URLSearchParams")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'foo=bar&baz=qux'")]),s._v("))\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('// { foo: "bar", baz: "qux" }')]),s._v("\n")])])])])])}],!1,null,null,null);t.default=e.exports}}]);